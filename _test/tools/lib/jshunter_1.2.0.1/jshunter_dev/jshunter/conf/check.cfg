[option]
asi = true
#if automatic semicolon insertion should be tolerated
bitwise = false
#if bitwise operators should not be allowed
boss = true
# if advanced usage of assignments should be allowed
browser= true
# if the standard browser globals should be predefined
couch  = true
# if CouchDB globals should be predefined
curly  = false
# if curly braces around all blocks should be required
debug  = false
# if debugger statements should be allowed
devel  = false
# if logging globals should be predefined (console,alertetc.)
dojo = false
# if Dojo Toolkit globals should be predefined
eqeqeq = false
# if === should be required
eqnull = false
# if == null comparisons should be tolerated
es5  = false
# if ES5 syntax should be allowed
esnext = false
# if es.next specific syntax should be allowed
evil = true
# if eval should be allowed
expr = true
# if ExpressionStatement should be allowed as Programs
forin  = false
# if for in statements must filter
funcscope = true
# if only function scope should be used for scope tests
globalstrict = true
# if global "use strict"; should be allowed (also enables 'strict')
immed  = false
# if immediate invocations must be wrapped in parents
iterator = true
# if the `__iterator__` property should be allowed
jquery = true
# if jQuery globals should be predefined
lastsemic = true
# if semicolons may be ommitted for the trailing statements inside of a one-line blocks.
latedef= true
# if the use before definition should not be tolerated
laxbreak = true
# if line breaks should not be checked
loopfunc = false
# if functions should be allowed to be defined within loops
mootools = true
# if MooTools globals should be predefined
multistr = true
# allow multiline strings
newcap = false
# if constructor names must be capitalized
noarg  = false
# if arguments.caller and arguments.callee should be disallowed
node = false
# if the Node.js environment globals should be predefined
noempty= false
# if empty blocks should be disallowed
nonew  = true
# if using `new` for side-effects should be disallowed
nonstandard  = true
# if non-standard (but widely adopted) globals should be predefined
nomen  = false
# if names should be checked
onevar = true
# if only one var statement per function should be allowed
onecase= true
# if one case switch statements should be allowed
passfail = false
# if the scan should stop on first error
plusplus = false
# if increment/decrement should not be allowed
proto = true
# if the `__proto__` property should be allowed
prototypejs = true
# if Prototype and Scriptaculous globals should be predefined
regexdash = true
# if unescaped first/last dash (-) inside brackets should be tolerated
regexp = true
# if the . should not be allowed in regexp literals
rhino  = true
# if the Rhino environment globals should be predefined
undef  = false
# if variables should be declared before used
scripturl    = true
# if script-targeted URLs should be tolerated
shadow = true
# if variable shadowing should be tolerated
strict = false
# require the "use strict"; pragma
sub  = true
# if all forms of subscript notation are tolerated
supernew = true
# if `new function () { ... };` and `new Object;` should be tolerated
trailing = false
# if trailing whitespace rules apply
validthis = true
# if 'this' inside a non-constructor function is valid. This is a function scoped option only.
white  = false
# if strict whitespace rules apply
wsh  = true  
# if the Windows Scripting Host environment globals should be predefined
[predef]
baidu = true
nuit = true
Ext = true
ko = true
_ = true
noah = true
Noah = true
Backbone = true
WdatePicker = true
