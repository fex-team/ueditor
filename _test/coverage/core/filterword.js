/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['core/filterword.js']) {
  _$jscoverage['core/filterword.js'] = [];
  _$jscoverage['core/filterword.js'][23] = 0;
  _$jscoverage['core/filterword.js'][26] = 0;
  _$jscoverage['core/filterword.js'][27] = 0;
  _$jscoverage['core/filterword.js'][30] = 0;
  _$jscoverage['core/filterword.js'][31] = 0;
  _$jscoverage['core/filterword.js'][32] = 0;
  _$jscoverage['core/filterword.js'][34] = 0;
  _$jscoverage['core/filterword.js'][37] = 0;
  _$jscoverage['core/filterword.js'][38] = 0;
  _$jscoverage['core/filterword.js'][43] = 0;
  _$jscoverage['core/filterword.js'][44] = 0;
  _$jscoverage['core/filterword.js'][46] = 0;
  _$jscoverage['core/filterword.js'][47] = 0;
  _$jscoverage['core/filterword.js'][50] = 0;
  _$jscoverage['core/filterword.js'][52] = 0;
  _$jscoverage['core/filterword.js'][64] = 0;
  _$jscoverage['core/filterword.js'][70] = 0;
  _$jscoverage['core/filterword.js'][76] = 0;
  _$jscoverage['core/filterword.js'][78] = 0;
  _$jscoverage['core/filterword.js'][81] = 0;
  _$jscoverage['core/filterword.js'][82] = 0;
  _$jscoverage['core/filterword.js'][83] = 0;
  _$jscoverage['core/filterword.js'][84] = 0;
  _$jscoverage['core/filterword.js'][88] = 0;
  _$jscoverage['core/filterword.js'][91] = 0;
  _$jscoverage['core/filterword.js'][108] = 0;
  _$jscoverage['core/filterword.js'][109] = 0;
  _$jscoverage['core/filterword.js'][110] = 0;
  _$jscoverage['core/filterword.js'][112] = 0;
  _$jscoverage['core/filterword.js'][113] = 0;
  _$jscoverage['core/filterword.js'][116] = 0;
  _$jscoverage['core/filterword.js'][117] = 0;
  _$jscoverage['core/filterword.js'][121] = 0;
  _$jscoverage['core/filterword.js'][122] = 0;
  _$jscoverage['core/filterword.js'][126] = 0;
  _$jscoverage['core/filterword.js'][127] = 0;
  _$jscoverage['core/filterword.js'][130] = 0;
  _$jscoverage['core/filterword.js'][131] = 0;
  _$jscoverage['core/filterword.js'][134] = 0;
  _$jscoverage['core/filterword.js'][135] = 0;
  _$jscoverage['core/filterword.js'][138] = 0;
  _$jscoverage['core/filterword.js'][139] = 0;
  _$jscoverage['core/filterword.js'][142] = 0;
  _$jscoverage['core/filterword.js'][143] = 0;
  _$jscoverage['core/filterword.js'][145] = 0;
  _$jscoverage['core/filterword.js'][147] = 0;
  _$jscoverage['core/filterword.js'][148] = 0;
  _$jscoverage['core/filterword.js'][150] = 0;
  _$jscoverage['core/filterword.js'][152] = 0;
  _$jscoverage['core/filterword.js'][154] = 0;
  _$jscoverage['core/filterword.js'][155] = 0;
  _$jscoverage['core/filterword.js'][160] = 0;
  _$jscoverage['core/filterword.js'][164] = 0;
  _$jscoverage['core/filterword.js'][167] = 0;
  _$jscoverage['core/filterword.js'][170] = 0;
  _$jscoverage['core/filterword.js'][173] = 0;
  _$jscoverage['core/filterword.js'][178] = 0;
  _$jscoverage['core/filterword.js'][179] = 0;
}
_$jscoverage['core/filterword.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * UE&#36807;&#28388;word&#30340;&#38745;&#24577;&#26041;&#27861;</span>","<span class=\"c\"> * @file</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * UEditor&#20844;&#29992;&#31354;&#38388;&#65292;UEditor&#25152;&#26377;&#30340;&#21151;&#33021;&#37117;&#25346;&#36733;&#22312;&#35813;&#31354;&#38388;&#19979;</span>","<span class=\"c\"> * @module UE</span>","<span class=\"c\"> */</span>","","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#26681;&#25454;&#20256;&#20837;html&#23383;&#31526;&#20018;&#36807;&#28388;word</span>","<span class=\"c\"> * @module UE</span>","<span class=\"c\"> * @since 1.2.6.1</span>","<span class=\"c\"> * @method filterWord</span>","<span class=\"c\"> * @param { String } html html&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @example</span>","<span class=\"c\"> * ```javascript</span>","<span class=\"c\"> * UE.filterWord(html);</span>","<span class=\"c\"> * ```</span>","<span class=\"c\"> */</span>","<span class=\"k\">var</span> filterWord <span class=\"k\">=</span> UE<span class=\"k\">.</span>filterWord <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","","    <span class=\"c\">//&#26159;&#21542;&#26159;word&#36807;&#26469;&#30340;&#20869;&#23481;</span>","    <span class=\"k\">function</span> isWordDocument<span class=\"k\">(</span> str <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"s\">/(class=\"?Mso|style=\"[^\"]*\\bmso\\-|w:WordDocument|&lt;v:)/ig</span><span class=\"k\">.</span>test<span class=\"k\">(</span> str <span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"c\">//&#21435;&#25481;&#23567;&#25968;</span>","    <span class=\"k\">function</span> transUnit<span class=\"k\">(</span> v <span class=\"k\">)</span> <span class=\"k\">{</span>","        v <span class=\"k\">=</span> v<span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/[\\d.]+\\w+/g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span> m <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> utils<span class=\"k\">.</span>transUnitToPx<span class=\"k\">(</span>m<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">return</span> v<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> filterPasteWord<span class=\"k\">(</span> str <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/[\\t\\r\\n]+/g</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/&lt;!--[\\s\\S]*?--&gt;/ig</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span>","                <span class=\"c\">//&#36716;&#25442;&#22270;&#29255;</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&lt;v:shape [^&gt;]*&gt;[\\s\\S]*?.&lt;\\/v:shape&gt;/gi</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>str<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"c\">//opera&#33021;&#33258;&#24049;&#35299;&#26512;&#20986;image&#25152;&#36825;&#37324;&#30452;&#25509;&#36820;&#22238;&#31354;</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>browser<span class=\"k\">.</span>opera<span class=\"k\">)</span><span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">try</span><span class=\"k\">{</span>","                        <span class=\"k\">var</span> width <span class=\"k\">=</span> str<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/width:([ \\d.]*p[tx])/i</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">],</span>","                            height <span class=\"k\">=</span> str<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/height:([ \\d.]*p[tx])/i</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">],</span>","                            src <span class=\"k\">=</span>  str<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/src=\\s*\"([^\"]*)\"/i</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">];</span>","                        <span class=\"k\">return</span> <span class=\"s\">'&lt;img width=\"'</span><span class=\"k\">+</span> transUnit<span class=\"k\">(</span>width<span class=\"k\">)</span> <span class=\"k\">+</span><span class=\"s\">'\" height=\"'</span><span class=\"k\">+</span>transUnit<span class=\"k\">(</span>height<span class=\"k\">)</span> <span class=\"k\">+</span><span class=\"s\">'\" src=\"'</span> <span class=\"k\">+</span> src <span class=\"k\">+</span> <span class=\"s\">'\" /&gt;'</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">)</span>","                <span class=\"c\">//&#38024;&#23545;wps&#28155;&#21152;&#30340;&#22810;&#20313;&#26631;&#31614;&#22788;&#29702;</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&lt;\\/?div[^&gt;]*&gt;/g</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">)</span>","                <span class=\"c\">//&#21435;&#25481;&#22810;&#20313;&#30340;&#23646;&#24615;</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/v:\\w+=([\"']?)[^'\"]+\\1/g</span><span class=\"k\">,</span> <span class=\"s\">''</span> <span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/&lt;(!|script[^&gt;]*&gt;.*?&lt;\\/script(?=[&gt;\\s])|\\/?(\\?xml(:\\w+)?|xml|meta|link|style|\\w+:\\w+)(?=[\\s\\/&gt;]))[^&gt;]*&gt;/gi</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/&lt;p [^&gt;]*class=\"?MsoHeading\"?[^&gt;]*&gt;(.*?)&lt;\\/p&gt;/gi</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;p&gt;&lt;strong&gt;$1&lt;/strong&gt;&lt;/p&gt;\"</span> <span class=\"k\">)</span>","                <span class=\"c\">//&#21435;&#25481;&#22810;&#20313;&#30340;&#23646;&#24615;</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/\\s+(class|lang|align)\\s*=\\s*(['\"]?)([\\w-]+)\\2/ig</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>str<span class=\"k\">,</span>name<span class=\"k\">,</span>marks<span class=\"k\">,</span>val<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"c\">//&#20445;&#30041;list&#30340;&#26631;&#31034;</span>","                    <span class=\"k\">return</span> name <span class=\"k\">==</span> <span class=\"s\">'class'</span> <span class=\"k\">&amp;&amp;</span> val <span class=\"k\">==</span> <span class=\"s\">'MsoListParagraph'</span> <span class=\"k\">?</span> str <span class=\"k\">:</span> <span class=\"s\">''</span>","                <span class=\"k\">}</span><span class=\"k\">)</span>","                <span class=\"c\">//&#28165;&#38500;&#22810;&#20313;&#30340;font/span&#19981;&#33021;&#21305;&#37197;&amp;nbsp;&#26377;&#21487;&#33021;&#26159;&#31354;&#26684;</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/&lt;(font|span)[^&gt;]*&gt;\\s*&lt;\\/\\1&gt;/gi</span><span class=\"k\">,</span> <span class=\"s\">''</span> <span class=\"k\">)</span>","                <span class=\"c\">//&#22788;&#29702;style&#30340;&#38382;&#39064;</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/(&lt;[a-z][^&gt;]*)\\sstyle=([\"'])([^\\2]*?)\\2/gi</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> str<span class=\"k\">,</span> tag<span class=\"k\">,</span> tmp<span class=\"k\">,</span> style <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> n <span class=\"k\">=</span> <span class=\"k\">[],</span>","                        s <span class=\"k\">=</span> style<span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/^\\s+|\\s+$/</span><span class=\"k\">,</span> <span class=\"s\">''</span> <span class=\"k\">)</span>","                            <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;#39;/g</span><span class=\"k\">,</span><span class=\"s\">'</span><span class=\"t\">\\'</span><span class=\"s\">'</span><span class=\"k\">)</span>","                            <span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/&amp;quot;/gi</span><span class=\"k\">,</span> <span class=\"s\">\"'\"</span> <span class=\"k\">)</span>","                            <span class=\"k\">.</span>split<span class=\"k\">(</span> <span class=\"s\">/;\\s*/g</span> <span class=\"k\">);</span>","","                    <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>v<span class=\"k\">;</span> v <span class=\"k\">=</span> s<span class=\"k\">[</span>i<span class=\"k\">];</span>i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"k\">var</span> name<span class=\"k\">,</span> value<span class=\"k\">,</span>","                            parts <span class=\"k\">=</span> v<span class=\"k\">.</span>split<span class=\"k\">(</span> <span class=\"s\">\":\"</span> <span class=\"k\">);</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> parts<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">2</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            name <span class=\"k\">=</span> parts<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>toLowerCase<span class=\"k\">();</span>","                            value <span class=\"k\">=</span> parts<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>toLowerCase<span class=\"k\">();</span>","                            <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">/^(background)\\w*/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> value<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/(initial|\\s)/g</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">).</span>length <span class=\"k\">==</span> <span class=\"s\">0</span>","                                <span class=\"k\">||</span>","                                <span class=\"s\">/^(margin)\\w*/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/^0\\w+$/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>value<span class=\"k\">)</span>","                            <span class=\"k\">)</span><span class=\"k\">{</span>","                                <span class=\"k\">continue</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","","                            <span class=\"k\">switch</span> <span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-padding-alt\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-padding-top-alt\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-padding-right-alt\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-padding-bottom-alt\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-padding-left-alt\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-margin-alt\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-margin-top-alt\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-margin-right-alt\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-margin-bottom-alt\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-margin-left-alt\"</span><span class=\"k\">:</span>","                                <span class=\"c\">//ie&#19979;&#20250;&#20986;&#29616;&#25380;&#21040;&#19968;&#36215;&#30340;&#24773;&#20917;</span>","                               <span class=\"c\">//case \"mso-table-layout-alt\":</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-height\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-width\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-vertical-align-alt\"</span><span class=\"k\">:</span>","                                    <span class=\"c\">//trace:1819 ff&#19979;&#20250;&#35299;&#26512;&#20986;padding&#22312;table&#19978;</span>","                                    <span class=\"k\">if</span><span class=\"k\">(!</span><span class=\"s\">/&lt;table/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>tag<span class=\"k\">))</span>","                                        n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> name<span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">/^mso-|-alt$/g</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\":\"</span> <span class=\"k\">+</span> transUnit<span class=\"k\">(</span> value <span class=\"k\">);</span>","                                    <span class=\"k\">continue</span><span class=\"k\">;</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"horiz-align\"</span><span class=\"k\">:</span>","                                    n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"text-align:\"</span> <span class=\"k\">+</span> value<span class=\"k\">;</span>","                                    <span class=\"k\">continue</span><span class=\"k\">;</span>","","                                <span class=\"k\">case</span> <span class=\"s\">\"vert-align\"</span><span class=\"k\">:</span>","                                    n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"vertical-align:\"</span> <span class=\"k\">+</span> value<span class=\"k\">;</span>","                                    <span class=\"k\">continue</span><span class=\"k\">;</span>","","                                <span class=\"k\">case</span> <span class=\"s\">\"font-color\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-foreground\"</span><span class=\"k\">:</span>","                                    n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"color:\"</span> <span class=\"k\">+</span> value<span class=\"k\">;</span>","                                    <span class=\"k\">continue</span><span class=\"k\">;</span>","","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-background\"</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-highlight\"</span><span class=\"k\">:</span>","                                    n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"background:\"</span> <span class=\"k\">+</span> value<span class=\"k\">;</span>","                                    <span class=\"k\">continue</span><span class=\"k\">;</span>","","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-default-height\"</span><span class=\"k\">:</span>","                                    n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"min-height:\"</span> <span class=\"k\">+</span> transUnit<span class=\"k\">(</span> value <span class=\"k\">);</span>","                                    <span class=\"k\">continue</span><span class=\"k\">;</span>","","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-default-width\"</span><span class=\"k\">:</span>","                                    n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"min-width:\"</span> <span class=\"k\">+</span> transUnit<span class=\"k\">(</span> value <span class=\"k\">);</span>","                                    <span class=\"k\">continue</span><span class=\"k\">;</span>","","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-padding-between-alt\"</span><span class=\"k\">:</span>","                                    n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"border-collapse:separate;border-spacing:\"</span> <span class=\"k\">+</span> transUnit<span class=\"k\">(</span> value <span class=\"k\">);</span>","                                    <span class=\"k\">continue</span><span class=\"k\">;</span>","","                                <span class=\"k\">case</span> <span class=\"s\">\"text-line-through\"</span><span class=\"k\">:</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>value <span class=\"k\">==</span> <span class=\"s\">\"single\"</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>value <span class=\"k\">==</span> <span class=\"s\">\"double\"</span><span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"text-decoration:line-through\"</span><span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","                                    <span class=\"k\">continue</span><span class=\"k\">;</span>","                                <span class=\"k\">case</span> <span class=\"s\">\"mso-zero-height\"</span><span class=\"k\">:</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">==</span> <span class=\"s\">\"yes\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"display:none\"</span><span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","                                    <span class=\"k\">continue</span><span class=\"k\">;</span>","                                <span class=\"k\">case</span> <span class=\"s\">'background'</span><span class=\"k\">:</span>","                                    <span class=\"k\">break</span><span class=\"k\">;</span>","                                <span class=\"k\">case</span> <span class=\"s\">'margin'</span><span class=\"k\">:</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span><span class=\"s\">/[1-9]/</span><span class=\"k\">.</span>test<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        <span class=\"k\">continue</span><span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","","                            <span class=\"k\">}</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"s\">/^(mso|column|font-emph|lang|layout|line-break|list-image|nav|panose|punct|row|ruby|sep|size|src|tab-|table-border|text-(?:decor|trans)|top-bar|version|vnd|word-break)/</span><span class=\"k\">.</span>test<span class=\"k\">(</span> name <span class=\"k\">)</span>","                                <span class=\"k\">||</span>","                                <span class=\"s\">/text\\-indent|padding|margin/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/\\-[\\d.]+/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>value<span class=\"k\">)</span>","                            <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">continue</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","","                            n<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> name <span class=\"k\">+</span> <span class=\"s\">\":\"</span> <span class=\"k\">+</span> parts<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span> tag <span class=\"k\">+</span> <span class=\"k\">(</span>n<span class=\"k\">.</span>length <span class=\"k\">?</span> <span class=\"s\">' style=\"'</span> <span class=\"k\">+</span> n<span class=\"k\">.</span>join<span class=\"k\">(</span> <span class=\"s\">';'</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/;{2,}/g</span><span class=\"k\">,</span><span class=\"s\">';'</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'\"'</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[\\d.]+(cm|pt)/g</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>str<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">return</span> utils<span class=\"k\">.</span>transUnitToPx<span class=\"k\">(</span>str<span class=\"k\">)</span>","            <span class=\"k\">}</span><span class=\"k\">)</span>","","    <span class=\"k\">}</span>","","    <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span> html <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span>isWordDocument<span class=\"k\">(</span> html <span class=\"k\">)</span> <span class=\"k\">?</span> filterPasteWord<span class=\"k\">(</span> html <span class=\"k\">)</span> <span class=\"k\">:</span> html<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">();</span>"];
_$jscoverage['core/filterword.js'][23]++;
var filterWord = (UE.filterWord = (function () {
  _$jscoverage['core/filterword.js'][26]++;
  function isWordDocument(str) {
    _$jscoverage['core/filterword.js'][27]++;
    return /(class="?Mso|style="[^"]*\bmso\-|w:WordDocument|<v:)/gi.test(str);
}
  _$jscoverage['core/filterword.js'][30]++;
  function transUnit(v) {
    _$jscoverage['core/filterword.js'][31]++;
    v = v.replace(/[\d.]+\w+/g, (function (m) {
  _$jscoverage['core/filterword.js'][32]++;
  return utils.transUnitToPx(m);
}));
    _$jscoverage['core/filterword.js'][34]++;
    return v;
}
  _$jscoverage['core/filterword.js'][37]++;
  function filterPasteWord(str) {
    _$jscoverage['core/filterword.js'][38]++;
    return str.replace(/[\t\r\n]+/g, "").replace(/<!--[\s\S]*?-->/gi, "").replace(/<v:shape [^>]*>[\s\S]*?.<\/v:shape>/gi, (function (str) {
  _$jscoverage['core/filterword.js'][43]++;
  if (browser.opera) {
    _$jscoverage['core/filterword.js'][44]++;
    return "";
  }
  _$jscoverage['core/filterword.js'][46]++;
  try {
    _$jscoverage['core/filterword.js'][47]++;
    var width = str.match(/width:([ \d.]*p[tx])/i)[1], height = str.match(/height:([ \d.]*p[tx])/i)[1], src = str.match(/src=\s*"([^"]*)"/i)[1];
    _$jscoverage['core/filterword.js'][50]++;
    return ("<img width=\"" + transUnit(width) + "\" height=\"" + transUnit(height) + "\" src=\"" + src + "\" />");
  }
  catch (e) {
    _$jscoverage['core/filterword.js'][52]++;
    return "";
  }
})).replace(/<\/?div[^>]*>/g, "").replace(/v:\w+=(["']?)[^'"]+\1/g, "").replace(/<(!|script[^>]*>.*?<\/script(?=[>\s])|\/?(\?xml(:\w+)?|xml|meta|link|style|\w+:\w+)(?=[\s\/>]))[^>]*>/gi, "").replace(/<p [^>]*class="?MsoHeading"?[^>]*>(.*?)<\/p>/gi, "<p><strong>$1</strong></p>").replace(/\s+(class|lang|align)\s*=\s*(['"]?)([\w-]+)\2/gi, (function (str, name, marks, val) {
  _$jscoverage['core/filterword.js'][64]++;
  return (((name == "class") && (val == "MsoListParagraph"))? str: "");
})).replace(/<(font|span)[^>]*>\s*<\/\1>/gi, "").replace(/(<[a-z][^>]*)\sstyle=(["'])([^\2]*?)\2/gi, (function (str, tag, tmp, style) {
  _$jscoverage['core/filterword.js'][70]++;
  var n = [], s = style.replace(/^\s+|\s+$/, "").replace(/&#39;/g, "'").replace(/&quot;/gi, "'").split(/;\s*/g);
  _$jscoverage['core/filterword.js'][76]++;
  for (var i = 0, v; (v = s[i]); (i++)) {
    _$jscoverage['core/filterword.js'][78]++;
    var name, value, parts = v.split(":");
    _$jscoverage['core/filterword.js'][81]++;
    if ((parts.length == 2)) {
      _$jscoverage['core/filterword.js'][82]++;
      name = parts[0].toLowerCase();
      _$jscoverage['core/filterword.js'][83]++;
      value = parts[1].toLowerCase();
      _$jscoverage['core/filterword.js'][84]++;
      if (((/^(background)\w*/.test(name) && (value.replace(/(initial|\s)/g, "").length == 0)) || (/^(margin)\w*/.test(name) && /^0\w+$/.test(value)))) {
        _$jscoverage['core/filterword.js'][88]++;
        continue;
      }
      _$jscoverage['core/filterword.js'][91]++;
      switch (name) {
      case "mso-padding-alt":
      case "mso-padding-top-alt":
      case "mso-padding-right-alt":
      case "mso-padding-bottom-alt":
      case "mso-padding-left-alt":
      case "mso-margin-alt":
      case "mso-margin-top-alt":
      case "mso-margin-right-alt":
      case "mso-margin-bottom-alt":
      case "mso-margin-left-alt":
      case "mso-height":
      case "mso-width":
      case "mso-vertical-align-alt":
        _$jscoverage['core/filterword.js'][108]++;
        if ((! /<table/.test(tag))) {
          _$jscoverage['core/filterword.js'][109]++;
          n[i] = (name.replace(/^mso-|-alt$/g, "") + ":" + transUnit(value));
        }
        _$jscoverage['core/filterword.js'][110]++;
        continue;
      case "horiz-align":
        _$jscoverage['core/filterword.js'][112]++;
        n[i] = ("text-align:" + value);
        _$jscoverage['core/filterword.js'][113]++;
        continue;
      case "vert-align":
        _$jscoverage['core/filterword.js'][116]++;
        n[i] = ("vertical-align:" + value);
        _$jscoverage['core/filterword.js'][117]++;
        continue;
      case "font-color":
      case "mso-foreground":
        _$jscoverage['core/filterword.js'][121]++;
        n[i] = ("color:" + value);
        _$jscoverage['core/filterword.js'][122]++;
        continue;
      case "mso-background":
      case "mso-highlight":
        _$jscoverage['core/filterword.js'][126]++;
        n[i] = ("background:" + value);
        _$jscoverage['core/filterword.js'][127]++;
        continue;
      case "mso-default-height":
        _$jscoverage['core/filterword.js'][130]++;
        n[i] = ("min-height:" + transUnit(value));
        _$jscoverage['core/filterword.js'][131]++;
        continue;
      case "mso-default-width":
        _$jscoverage['core/filterword.js'][134]++;
        n[i] = ("min-width:" + transUnit(value));
        _$jscoverage['core/filterword.js'][135]++;
        continue;
      case "mso-padding-between-alt":
        _$jscoverage['core/filterword.js'][138]++;
        n[i] = ("border-collapse:separate;border-spacing:" + transUnit(value));
        _$jscoverage['core/filterword.js'][139]++;
        continue;
      case "text-line-through":
        _$jscoverage['core/filterword.js'][142]++;
        if (((value == "single") || (value == "double"))) {
          _$jscoverage['core/filterword.js'][143]++;
          n[i] = "text-decoration:line-through";
        }
        _$jscoverage['core/filterword.js'][145]++;
        continue;
      case "mso-zero-height":
        _$jscoverage['core/filterword.js'][147]++;
        if ((value == "yes")) {
          _$jscoverage['core/filterword.js'][148]++;
          n[i] = "display:none";
        }
        _$jscoverage['core/filterword.js'][150]++;
        continue;
      case "background":
        _$jscoverage['core/filterword.js'][152]++;
        break;
      case "margin":
        _$jscoverage['core/filterword.js'][154]++;
        if ((! /[1-9]/.test(value))) {
          _$jscoverage['core/filterword.js'][155]++;
          continue;
        }
      }
      _$jscoverage['core/filterword.js'][160]++;
      if ((/^(mso|column|font-emph|lang|layout|line-break|list-image|nav|panose|punct|row|ruby|sep|size|src|tab-|table-border|text-(?:decor|trans)|top-bar|version|vnd|word-break)/.test(name) || (/text\-indent|padding|margin/.test(name) && /\-[\d.]+/.test(value)))) {
        _$jscoverage['core/filterword.js'][164]++;
        continue;
      }
      _$jscoverage['core/filterword.js'][167]++;
      n[i] = (name + ":" + parts[1]);
    }
}
  _$jscoverage['core/filterword.js'][170]++;
  return (tag + (n.length? (" style=\"" + n.join(";").replace(/;{2,}/g, ";") + "\""): ""));
})).replace(/[\d.]+(cm|pt)/g, (function (str) {
  _$jscoverage['core/filterword.js'][173]++;
  return utils.transUnitToPx(str);
}));
}
  _$jscoverage['core/filterword.js'][178]++;
  return (function (html) {
  _$jscoverage['core/filterword.js'][179]++;
  return (isWordDocument(html)? filterPasteWord(html): html);
});
})());
