/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['core/utils.js']) {
  _$jscoverage['core/utils.js'] = [];
  _$jscoverage['core/utils.js'][14] = 0;
  _$jscoverage['core/utils.js'][55] = 0;
  _$jscoverage['core/utils.js'][56] = 0;
  _$jscoverage['core/utils.js'][57] = 0;
  _$jscoverage['core/utils.js'][58] = 0;
  _$jscoverage['core/utils.js'][59] = 0;
  _$jscoverage['core/utils.js'][62] = 0;
  _$jscoverage['core/utils.js'][63] = 0;
  _$jscoverage['core/utils.js'][64] = 0;
  _$jscoverage['core/utils.js'][65] = 0;
  _$jscoverage['core/utils.js'][87] = 0;
  _$jscoverage['core/utils.js'][88] = 0;
  _$jscoverage['core/utils.js'][89] = 0;
  _$jscoverage['core/utils.js'][90] = 0;
  _$jscoverage['core/utils.js'][91] = 0;
  _$jscoverage['core/utils.js'][138] = 0;
  _$jscoverage['core/utils.js'][139] = 0;
  _$jscoverage['core/utils.js'][140] = 0;
  _$jscoverage['core/utils.js'][141] = 0;
  _$jscoverage['core/utils.js'][145] = 0;
  _$jscoverage['core/utils.js'][172] = 0;
  _$jscoverage['core/utils.js'][173] = 0;
  _$jscoverage['core/utils.js'][174] = 0;
  _$jscoverage['core/utils.js'][175] = 0;
  _$jscoverage['core/utils.js'][176] = 0;
  _$jscoverage['core/utils.js'][177] = 0;
  _$jscoverage['core/utils.js'][181] = 0;
  _$jscoverage['core/utils.js'][215] = 0;
  _$jscoverage['core/utils.js'][217] = 0;
  _$jscoverage['core/utils.js'][218] = 0;
  _$jscoverage['core/utils.js'][219] = 0;
  _$jscoverage['core/utils.js'][249] = 0;
  _$jscoverage['core/utils.js'][250] = 0;
  _$jscoverage['core/utils.js'][304] = 0;
  _$jscoverage['core/utils.js'][305] = 0;
  _$jscoverage['core/utils.js'][306] = 0;
  _$jscoverage['core/utils.js'][307] = 0;
  _$jscoverage['core/utils.js'][309] = 0;
  _$jscoverage['core/utils.js'][348] = 0;
  _$jscoverage['core/utils.js'][349] = 0;
  _$jscoverage['core/utils.js'][350] = 0;
  _$jscoverage['core/utils.js'][351] = 0;
  _$jscoverage['core/utils.js'][352] = 0;
  _$jscoverage['core/utils.js'][353] = 0;
  _$jscoverage['core/utils.js'][356] = 0;
  _$jscoverage['core/utils.js'][376] = 0;
  _$jscoverage['core/utils.js'][377] = 0;
  _$jscoverage['core/utils.js'][378] = 0;
  _$jscoverage['core/utils.js'][379] = 0;
  _$jscoverage['core/utils.js'][406] = 0;
  _$jscoverage['core/utils.js'][439] = 0;
  _$jscoverage['core/utils.js'][440] = 0;
  _$jscoverage['core/utils.js'][441] = 0;
  _$jscoverage['core/utils.js'][442] = 0;
  _$jscoverage['core/utils.js'][444] = 0;
  _$jscoverage['core/utils.js'][462] = 0;
  _$jscoverage['core/utils.js'][463] = 0;
  _$jscoverage['core/utils.js'][464] = 0;
  _$jscoverage['core/utils.js'][466] = 0;
  _$jscoverage['core/utils.js'][495] = 0;
  _$jscoverage['core/utils.js'][496] = 0;
  _$jscoverage['core/utils.js'][522] = 0;
  _$jscoverage['core/utils.js'][527] = 0;
  _$jscoverage['core/utils.js'][528] = 0;
  _$jscoverage['core/utils.js'][529] = 0;
  _$jscoverage['core/utils.js'][575] = 0;
  _$jscoverage['core/utils.js'][577] = 0;
  _$jscoverage['core/utils.js'][578] = 0;
  _$jscoverage['core/utils.js'][579] = 0;
  _$jscoverage['core/utils.js'][580] = 0;
  _$jscoverage['core/utils.js'][581] = 0;
  _$jscoverage['core/utils.js'][585] = 0;
  _$jscoverage['core/utils.js'][590] = 0;
  _$jscoverage['core/utils.js'][591] = 0;
  _$jscoverage['core/utils.js'][592] = 0;
  _$jscoverage['core/utils.js'][593] = 0;
  _$jscoverage['core/utils.js'][594] = 0;
  _$jscoverage['core/utils.js'][596] = 0;
  _$jscoverage['core/utils.js'][598] = 0;
  _$jscoverage['core/utils.js'][600] = 0;
  _$jscoverage['core/utils.js'][605] = 0;
  _$jscoverage['core/utils.js'][606] = 0;
  _$jscoverage['core/utils.js'][607] = 0;
  _$jscoverage['core/utils.js'][608] = 0;
  _$jscoverage['core/utils.js'][609] = 0;
  _$jscoverage['core/utils.js'][611] = 0;
  _$jscoverage['core/utils.js'][612] = 0;
  _$jscoverage['core/utils.js'][614] = 0;
  _$jscoverage['core/utils.js'][615] = 0;
  _$jscoverage['core/utils.js'][617] = 0;
  _$jscoverage['core/utils.js'][618] = 0;
  _$jscoverage['core/utils.js'][619] = 0;
  _$jscoverage['core/utils.js'][620] = 0;
  _$jscoverage['core/utils.js'][622] = 0;
  _$jscoverage['core/utils.js'][623] = 0;
  _$jscoverage['core/utils.js'][624] = 0;
  _$jscoverage['core/utils.js'][625] = 0;
  _$jscoverage['core/utils.js'][626] = 0;
  _$jscoverage['core/utils.js'][627] = 0;
  _$jscoverage['core/utils.js'][628] = 0;
  _$jscoverage['core/utils.js'][631] = 0;
  _$jscoverage['core/utils.js'][634] = 0;
  _$jscoverage['core/utils.js'][635] = 0;
  _$jscoverage['core/utils.js'][637] = 0;
  _$jscoverage['core/utils.js'][672] = 0;
  _$jscoverage['core/utils.js'][673] = 0;
  _$jscoverage['core/utils.js'][674] = 0;
  _$jscoverage['core/utils.js'][675] = 0;
  _$jscoverage['core/utils.js'][687] = 0;
  _$jscoverage['core/utils.js'][688] = 0;
  _$jscoverage['core/utils.js'][689] = 0;
  _$jscoverage['core/utils.js'][690] = 0;
  _$jscoverage['core/utils.js'][691] = 0;
  _$jscoverage['core/utils.js'][692] = 0;
  _$jscoverage['core/utils.js'][693] = 0;
  _$jscoverage['core/utils.js'][694] = 0;
  _$jscoverage['core/utils.js'][696] = 0;
  _$jscoverage['core/utils.js'][698] = 0;
  _$jscoverage['core/utils.js'][708] = 0;
  _$jscoverage['core/utils.js'][709] = 0;
  _$jscoverage['core/utils.js'][710] = 0;
  _$jscoverage['core/utils.js'][711] = 0;
  _$jscoverage['core/utils.js'][713] = 0;
  _$jscoverage['core/utils.js'][714] = 0;
  _$jscoverage['core/utils.js'][715] = 0;
  _$jscoverage['core/utils.js'][717] = 0;
  _$jscoverage['core/utils.js'][718] = 0;
  _$jscoverage['core/utils.js'][719] = 0;
  _$jscoverage['core/utils.js'][721] = 0;
  _$jscoverage['core/utils.js'][724] = 0;
  _$jscoverage['core/utils.js'][727] = 0;
  _$jscoverage['core/utils.js'][728] = 0;
  _$jscoverage['core/utils.js'][729] = 0;
  _$jscoverage['core/utils.js'][731] = 0;
  _$jscoverage['core/utils.js'][732] = 0;
  _$jscoverage['core/utils.js'][733] = 0;
  _$jscoverage['core/utils.js'][734] = 0;
  _$jscoverage['core/utils.js'][737] = 0;
  _$jscoverage['core/utils.js'][742] = 0;
  _$jscoverage['core/utils.js'][745] = 0;
  _$jscoverage['core/utils.js'][746] = 0;
  _$jscoverage['core/utils.js'][748] = 0;
  _$jscoverage['core/utils.js'][759] = 0;
  _$jscoverage['core/utils.js'][760] = 0;
  _$jscoverage['core/utils.js'][761] = 0;
  _$jscoverage['core/utils.js'][762] = 0;
  _$jscoverage['core/utils.js'][763] = 0;
  _$jscoverage['core/utils.js'][764] = 0;
  _$jscoverage['core/utils.js'][765] = 0;
  _$jscoverage['core/utils.js'][766] = 0;
  _$jscoverage['core/utils.js'][768] = 0;
  _$jscoverage['core/utils.js'][772] = 0;
  _$jscoverage['core/utils.js'][792] = 0;
  _$jscoverage['core/utils.js'][793] = 0;
  _$jscoverage['core/utils.js'][795] = 0;
  _$jscoverage['core/utils.js'][796] = 0;
  _$jscoverage['core/utils.js'][797] = 0;
  _$jscoverage['core/utils.js'][798] = 0;
  _$jscoverage['core/utils.js'][800] = 0;
  _$jscoverage['core/utils.js'][802] = 0;
  _$jscoverage['core/utils.js'][803] = 0;
  _$jscoverage['core/utils.js'][805] = 0;
  _$jscoverage['core/utils.js'][807] = 0;
  _$jscoverage['core/utils.js'][828] = 0;
  _$jscoverage['core/utils.js'][830] = 0;
  _$jscoverage['core/utils.js'][832] = 0;
  _$jscoverage['core/utils.js'][833] = 0;
  _$jscoverage['core/utils.js'][837] = 0;
  _$jscoverage['core/utils.js'][838] = 0;
  _$jscoverage['core/utils.js'][839] = 0;
  _$jscoverage['core/utils.js'][840] = 0;
  _$jscoverage['core/utils.js'][841] = 0;
  _$jscoverage['core/utils.js'][842] = 0;
  _$jscoverage['core/utils.js'][844] = 0;
  _$jscoverage['core/utils.js'][845] = 0;
  _$jscoverage['core/utils.js'][846] = 0;
  _$jscoverage['core/utils.js'][847] = 0;
  _$jscoverage['core/utils.js'][848] = 0;
  _$jscoverage['core/utils.js'][849] = 0;
  _$jscoverage['core/utils.js'][851] = 0;
  _$jscoverage['core/utils.js'][852] = 0;
  _$jscoverage['core/utils.js'][854] = 0;
  _$jscoverage['core/utils.js'][856] = 0;
  _$jscoverage['core/utils.js'][857] = 0;
  _$jscoverage['core/utils.js'][860] = 0;
  _$jscoverage['core/utils.js'][861] = 0;
  _$jscoverage['core/utils.js'][862] = 0;
  _$jscoverage['core/utils.js'][864] = 0;
  _$jscoverage['core/utils.js'][865] = 0;
  _$jscoverage['core/utils.js'][883] = 0;
  _$jscoverage['core/utils.js'][884] = 0;
  _$jscoverage['core/utils.js'][885] = 0;
  _$jscoverage['core/utils.js'][886] = 0;
  _$jscoverage['core/utils.js'][888] = 0;
  _$jscoverage['core/utils.js'][890] = 0;
  _$jscoverage['core/utils.js'][891] = 0;
  _$jscoverage['core/utils.js'][892] = 0;
  _$jscoverage['core/utils.js'][893] = 0;
  _$jscoverage['core/utils.js'][895] = 0;
  _$jscoverage['core/utils.js'][896] = 0;
  _$jscoverage['core/utils.js'][898] = 0;
  _$jscoverage['core/utils.js'][900] = 0;
  _$jscoverage['core/utils.js'][901] = 0;
  _$jscoverage['core/utils.js'][903] = 0;
  _$jscoverage['core/utils.js'][905] = 0;
  _$jscoverage['core/utils.js'][906] = 0;
  _$jscoverage['core/utils.js'][907] = 0;
  _$jscoverage['core/utils.js'][908] = 0;
  _$jscoverage['core/utils.js'][909] = 0;
  _$jscoverage['core/utils.js'][911] = 0;
  _$jscoverage['core/utils.js'][912] = 0;
  _$jscoverage['core/utils.js'][913] = 0;
  _$jscoverage['core/utils.js'][915] = 0;
  _$jscoverage['core/utils.js'][916] = 0;
  _$jscoverage['core/utils.js'][918] = 0;
  _$jscoverage['core/utils.js'][919] = 0;
  _$jscoverage['core/utils.js'][921] = 0;
  _$jscoverage['core/utils.js'][925] = 0;
  _$jscoverage['core/utils.js'][926] = 0;
  _$jscoverage['core/utils.js'][927] = 0;
  _$jscoverage['core/utils.js'][928] = 0;
  _$jscoverage['core/utils.js'][929] = 0;
  _$jscoverage['core/utils.js'][930] = 0;
  _$jscoverage['core/utils.js'][931] = 0;
  _$jscoverage['core/utils.js'][935] = 0;
  _$jscoverage['core/utils.js'][980] = 0;
  _$jscoverage['core/utils.js'][981] = 0;
  _$jscoverage['core/utils.js'][982] = 0;
}
_$jscoverage['core/utils.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * &#24037;&#20855;&#20989;&#25968;&#21253;</span>","<span class=\"c\"> * @file</span>","<span class=\"c\"> * @module UE.utils</span>","<span class=\"c\"> * @since 1.2.6.1</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * UEditor&#23553;&#35013;&#20351;&#29992;&#30340;&#38745;&#24577;&#24037;&#20855;&#20989;&#25968;</span>","<span class=\"c\"> * @module UE.utils</span>","<span class=\"c\"> * @unfile</span>","<span class=\"c\"> */</span>","","<span class=\"k\">var</span> utils <span class=\"k\">=</span> UE<span class=\"k\">.</span>utils <span class=\"k\">=</span> <span class=\"k\">{</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#29992;&#32473;&#23450;&#30340;&#36845;&#20195;&#22120;&#36941;&#21382;&#23545;&#35937;</span>","<span class=\"c\">     * @method each</span>","<span class=\"c\">     * @param { Object } obj &#38656;&#35201;&#36941;&#21382;&#30340;&#23545;&#35937;</span>","<span class=\"c\">     * @param { Function } iterator &#36845;&#20195;&#22120;&#65292; &#35813;&#26041;&#27861;&#25509;&#21463;&#20004;&#20010;&#21442;&#25968;&#65292; &#31532;&#19968;&#20010;&#21442;&#25968;&#26159;&#24403;&#21069;&#25152;&#22788;&#29702;&#30340;value&#65292; &#31532;&#20108;&#20010;&#21442;&#25968;&#26159;&#24403;&#21069;&#36941;&#21382;&#23545;&#35937;&#30340;key</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * var demoObj = {</span>","<span class=\"c\">     *     key1: 1,</span>","<span class=\"c\">     *     key2: 2</span>","<span class=\"c\">     * };</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: key1: 1, key2: 2</span>","<span class=\"c\">     * UE.utils.each( demoObj, funciton ( value, key ) {</span>","<span class=\"c\">     *</span>","<span class=\"c\">     *     console.log( key + \":\" + value );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * } );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#29992;&#32473;&#23450;&#30340;&#36845;&#20195;&#22120;&#36941;&#21382;&#25968;&#32452;&#25110;&#31867;&#25968;&#32452;&#23545;&#35937;</span>","<span class=\"c\">     * @method each</span>","<span class=\"c\">     * @param { Array } array &#38656;&#35201;&#36941;&#21382;&#30340;&#25968;&#32452;&#25110;&#32773;&#31867;&#25968;&#32452;</span>","<span class=\"c\">     * @param { Function } iterator &#36845;&#20195;&#22120;&#65292; &#35813;&#26041;&#27861;&#25509;&#21463;&#20004;&#20010;&#21442;&#25968;&#65292; &#31532;&#19968;&#20010;&#21442;&#25968;&#26159;&#24403;&#21069;&#25152;&#22788;&#29702;&#30340;value&#65292; &#31532;&#20108;&#20010;&#21442;&#25968;&#26159;&#24403;&#21069;&#36941;&#21382;&#23545;&#35937;&#30340;key</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * var divs = document.getElmentByTagNames( \"div\" );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: 0: DIV, 1: DIV ...</span>","<span class=\"c\">     * UE.utils.each( divs, funciton ( value, key ) {</span>","<span class=\"c\">     *</span>","<span class=\"c\">     *     console.log( key + \":\" + value.tagName );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * } );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    each <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span>obj<span class=\"k\">,</span> iterator<span class=\"k\">,</span> context<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>obj <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"k\">+</span>obj<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> obj<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>context<span class=\"k\">,</span> obj<span class=\"k\">[</span>i<span class=\"k\">],</span> i<span class=\"k\">,</span> obj<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span><span class=\"k\">)</span>","                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>iterator<span class=\"k\">.</span>call<span class=\"k\">(</span>context<span class=\"k\">,</span> obj<span class=\"k\">[</span>key<span class=\"k\">],</span> key<span class=\"k\">,</span> obj<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span><span class=\"k\">)</span>","                        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#20197;&#32473;&#23450;&#23545;&#35937;&#20316;&#20026;&#21407;&#22411;&#21019;&#24314;&#19968;&#20010;&#26032;&#23545;&#35937;</span>","<span class=\"c\">     * @method makeInstance</span>","<span class=\"c\">     * @param { Object } protoObject &#35813;&#23545;&#35937;&#23558;&#20316;&#20026;&#26032;&#21019;&#24314;&#23545;&#35937;&#30340;&#21407;&#22411;</span>","<span class=\"c\">     * @return { Object } &#26032;&#30340;&#23545;&#35937;&#65292; &#35813;&#23545;&#35937;&#30340;&#21407;&#22411;&#26159;&#32473;&#23450;&#30340;protoObject&#23545;&#35937;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var protoObject = { sayHello: function () { console.log('Hello UEditor!'); } };</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var newObject = UE.utils.makeInstance( protoObject );</span>","<span class=\"c\">     * //output: Hello UEditor!</span>","<span class=\"c\">     * newObject.sayHello();</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    makeInstance<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> noop <span class=\"k\">=</span> <span class=\"k\">new</span> Function<span class=\"k\">();</span>","        noop<span class=\"k\">.</span>prototype <span class=\"k\">=</span> obj<span class=\"k\">;</span>","        obj <span class=\"k\">=</span> <span class=\"k\">new</span> noop<span class=\"k\">;</span>","        noop<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">return</span> obj<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;source&#23545;&#35937;&#20013;&#30340;&#23646;&#24615;&#25193;&#23637;&#21040;target&#23545;&#35937;&#19978;</span>","<span class=\"c\">     * @method extend</span>","<span class=\"c\">     * @remind &#35813;&#26041;&#27861;&#23558;&#24378;&#21046;&#25226;source&#23545;&#35937;&#19978;&#30340;&#23646;&#24615;&#22797;&#21046;&#21040;target&#23545;&#35937;&#19978;</span>","<span class=\"c\">     * @see UE.utils.extend(Object,Object,Boolean)</span>","<span class=\"c\">     * @param { Object } target &#30446;&#26631;&#23545;&#35937;&#65292; &#26032;&#30340;&#23646;&#24615;&#23558;&#38468;&#21152;&#21040;&#35813;&#23545;&#35937;&#19978;</span>","<span class=\"c\">     * @param { Object } source &#28304;&#23545;&#35937;&#65292; &#35813;&#23545;&#35937;&#30340;&#23646;&#24615;&#20250;&#34987;&#38468;&#21152;&#21040;target&#23545;&#35937;&#19978;</span>","<span class=\"c\">     * @return { Object } &#36820;&#22238;target&#23545;&#35937;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var target = { name: 'target', sex: 1 },</span>","<span class=\"c\">     *      source = { name: 'source', age: 17 };</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * UE.utils.extend( target, source );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: { name: 'source', sex: 1, age: 17 }</span>","<span class=\"c\">     * console.log( target );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;source&#23545;&#35937;&#20013;&#30340;&#23646;&#24615;&#25193;&#23637;&#21040;target&#23545;&#35937;&#19978;&#65292; &#26681;&#25454;&#25351;&#23450;&#30340;isKeepTarget&#20540;&#20915;&#23450;&#26159;&#21542;&#20445;&#30041;&#30446;&#26631;&#23545;&#35937;&#20013;&#19982;</span>","<span class=\"c\">     * &#28304;&#23545;&#35937;&#23646;&#24615;&#21517;&#30456;&#21516;&#30340;&#23646;&#24615;&#20540;&#12290;</span>","<span class=\"c\">     * @method extend</span>","<span class=\"c\">     * @param { Object } target &#30446;&#26631;&#23545;&#35937;&#65292; &#26032;&#30340;&#23646;&#24615;&#23558;&#38468;&#21152;&#21040;&#35813;&#23545;&#35937;&#19978;</span>","<span class=\"c\">     * @param { Object } source &#28304;&#23545;&#35937;&#65292; &#35813;&#23545;&#35937;&#30340;&#23646;&#24615;&#20250;&#34987;&#38468;&#21152;&#21040;target&#23545;&#35937;&#19978;</span>","<span class=\"c\">     * @param { Boolean } isKeepTarget &#26159;&#21542;&#20445;&#30041;&#30446;&#26631;&#23545;&#35937;&#20013;&#19982;&#28304;&#23545;&#35937;&#20013;&#23646;&#24615;&#21517;&#30456;&#21516;&#30340;&#23646;&#24615;</span>","<span class=\"c\">     * @return { Object } &#36820;&#22238;target&#23545;&#35937;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var target = { name: 'target', sex: 1 },</span>","<span class=\"c\">     *      source = { name: 'source', age: 17 };</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * UE.utils.extend( target, source, true );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: { name: 'target', sex: 1, age: 17 }</span>","<span class=\"c\">     * console.log( target );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    extend<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>t<span class=\"k\">,</span> s<span class=\"k\">,</span> b<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>s<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> k <span class=\"k\">in</span> s<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>b <span class=\"k\">||</span> <span class=\"k\">!</span>t<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>k<span class=\"k\">))</span> <span class=\"k\">{</span>","                    t<span class=\"k\">[</span>k<span class=\"k\">]</span> <span class=\"k\">=</span> s<span class=\"k\">[</span>k<span class=\"k\">];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> t<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;&#32473;&#23450;&#30340;&#22810;&#20010;&#23545;&#35937;&#30340;&#23646;&#24615;&#22797;&#21046;&#21040;&#30446;&#26631;&#23545;&#35937;target&#19978;</span>","<span class=\"c\">     * @method extend2</span>","<span class=\"c\">     * @remind &#35813;&#26041;&#27861;&#23558;&#24378;&#21046;&#25226;&#28304;&#23545;&#35937;&#19978;&#30340;&#23646;&#24615;&#22797;&#21046;&#21040;target&#23545;&#35937;&#19978;</span>","<span class=\"c\">     * @remind &#35813;&#26041;&#27861;&#25903;&#25345;&#20004;&#20010;&#21450;&#20197;&#19978;&#30340;&#21442;&#25968;&#65292; &#20174;&#31532;&#20108;&#20010;&#21442;&#25968;&#24320;&#22987;&#65292; &#20854;&#23646;&#24615;&#37117;&#20250;&#34987;&#22797;&#21046;&#21040;&#31532;&#19968;&#20010;&#21442;&#25968;&#19978;&#12290; &#22914;&#26524;&#36935;&#21040;&#21516;&#21517;&#30340;&#23646;&#24615;&#65292;</span>","<span class=\"c\">     *          &#23558;&#20250;&#35206;&#30422;&#25481;&#20043;&#21069;&#30340;&#20540;&#12290;</span>","<span class=\"c\">     * @param { Object } target &#30446;&#26631;&#23545;&#35937;&#65292; &#26032;&#30340;&#23646;&#24615;&#23558;&#38468;&#21152;&#21040;&#35813;&#23545;&#35937;&#19978;</span>","<span class=\"c\">     * @param { Object... } source &#28304;&#23545;&#35937;&#65292; &#25903;&#25345;&#22810;&#20010;&#23545;&#35937;&#65292; &#35813;&#23545;&#35937;&#30340;&#23646;&#24615;&#20250;&#34987;&#38468;&#21152;&#21040;target&#23545;&#35937;&#19978;</span>","<span class=\"c\">     * @return { Object } &#36820;&#22238;target&#23545;&#35937;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var target = {},</span>","<span class=\"c\">     *     source1 = { name: 'source', age: 17 },</span>","<span class=\"c\">     *     source2 = { title: 'dev' };</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * UE.utils.extend2( target, source1, source2 );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: { name: 'source', age: 17, title: 'dev' }</span>","<span class=\"c\">     * console.log( target );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    extend2<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>t<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> a <span class=\"k\">=</span> arguments<span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> a<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> x <span class=\"k\">=</span> a<span class=\"k\">[</span>i<span class=\"k\">];</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> k <span class=\"k\">in</span> x<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>t<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>k<span class=\"k\">))</span> <span class=\"k\">{</span>","                    t<span class=\"k\">[</span>k<span class=\"k\">]</span> <span class=\"k\">=</span> x<span class=\"k\">[</span>k<span class=\"k\">];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> t<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#27169;&#25311;&#32487;&#25215;&#26426;&#21046;&#65292; &#20351;&#24471;subClass&#32487;&#25215;&#33258;superClass</span>","<span class=\"c\">     * @method inherits</span>","<span class=\"c\">     * @param { Object } subClass &#23376;&#31867;&#23545;&#35937;</span>","<span class=\"c\">     * @param { Object } superClass &#36229;&#31867;&#23545;&#35937;</span>","<span class=\"c\">     * @warning &#35813;&#26041;&#27861;&#21482;&#33021;&#35753;subClass&#32487;&#25215;&#36229;&#31867;&#30340;&#21407;&#22411;&#65292; subClass&#23545;&#35937;&#33258;&#36523;&#30340;&#23646;&#24615;&#21644;&#26041;&#27861;&#19981;&#20250;&#34987;&#32487;&#25215;</span>","<span class=\"c\">     * @return { Object } &#32487;&#25215;superClass&#21518;&#30340;&#23376;&#31867;&#23545;&#35937;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * function SuperClass(){</span>","<span class=\"c\">     *     this.name = \"&#23567;&#26446;\";</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * SuperClass.prototype = {</span>","<span class=\"c\">     *     hello:function(str){</span>","<span class=\"c\">     *         console.log(this.name + str);</span>","<span class=\"c\">     *     }</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * function SubClass(){</span>","<span class=\"c\">     *     this.name = \"&#23567;&#24352;\";</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * UE.utils.inherits(SubClass,SuperClass);</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var sub = new SubClass();</span>","<span class=\"c\">     * //output: '&#23567;&#24352;&#26089;&#19978;&#22909;!</span>","<span class=\"c\">     * sub.hello(\"&#26089;&#19978;&#22909;!\");</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    inherits<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>subClass<span class=\"k\">,</span> superClass<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> oldP <span class=\"k\">=</span> subClass<span class=\"k\">.</span>prototype<span class=\"k\">,</span>","            newP <span class=\"k\">=</span> utils<span class=\"k\">.</span>makeInstance<span class=\"k\">(</span>superClass<span class=\"k\">.</span>prototype<span class=\"k\">);</span>","        utils<span class=\"k\">.</span>extend<span class=\"k\">(</span>newP<span class=\"k\">,</span> oldP<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        subClass<span class=\"k\">.</span>prototype <span class=\"k\">=</span> newP<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span>newP<span class=\"k\">.</span>constructor <span class=\"k\">=</span> subClass<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#29992;&#25351;&#23450;&#30340;context&#23545;&#35937;&#20316;&#20026;&#20989;&#25968;fn&#30340;&#19978;&#19979;&#25991;</span>","<span class=\"c\">     * @method bind</span>","<span class=\"c\">     * @param { Function } fn &#38656;&#35201;&#32465;&#23450;&#19978;&#19979;&#25991;&#30340;&#20989;&#25968;&#23545;&#35937;</span>","<span class=\"c\">     * @param { Object } content &#20989;&#25968;fn&#26032;&#30340;&#19978;&#19979;&#25991;&#23545;&#35937;</span>","<span class=\"c\">     * @return { Function } &#19968;&#20010;&#26032;&#30340;&#20989;&#25968;&#65292; &#35813;&#20989;&#25968;&#20316;&#20026;&#21407;&#22987;&#20989;&#25968;fn&#30340;&#20195;&#29702;&#65292; &#23558;&#23436;&#25104;fn&#30340;&#19978;&#19979;&#25991;&#35843;&#25442;&#24037;&#20316;&#12290;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var name = 'window',</span>","<span class=\"c\">     *     newTest = null;</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * function test () {</span>","<span class=\"c\">     *     console.log( this.name );</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * newTest = UE.utils.bind( test, { name: 'object' } );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: object</span>","<span class=\"c\">     * newTest();</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: window</span>","<span class=\"c\">     * test();</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    bind<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>fn<span class=\"k\">,</span> context<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> fn<span class=\"k\">.</span>apply<span class=\"k\">(</span>context<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21019;&#24314;&#24310;&#36831;&#25351;&#23450;&#26102;&#38388;&#21518;&#25191;&#34892;&#30340;&#20989;&#25968;fn</span>","<span class=\"c\">     * @method defer</span>","<span class=\"c\">     * @param { Function } fn &#38656;&#35201;&#24310;&#36831;&#25191;&#34892;&#30340;&#20989;&#25968;&#23545;&#35937;</span>","<span class=\"c\">     * @param { int } delay &#24310;&#36831;&#30340;&#26102;&#38388;&#65292; &#21333;&#20301;&#26159;&#27627;&#31186;</span>","<span class=\"c\">     * @warning &#35813;&#26041;&#27861;&#30340;&#26102;&#38388;&#25511;&#21046;&#26159;&#19981;&#31934;&#30830;&#30340;&#65292;&#20165;&#20165;&#21482;&#33021;&#20445;&#35777;&#20989;&#25968;&#30340;&#25191;&#34892;&#26159;&#22312;&#32473;&#23450;&#30340;&#26102;&#38388;&#20043;&#21518;&#65292;</span>","<span class=\"c\">     *           &#32780;&#19981;&#33021;&#20445;&#35777;&#21018;&#22909;&#21040;&#36798;&#24310;&#36831;&#26102;&#38388;&#26102;&#25191;&#34892;&#12290;</span>","<span class=\"c\">     * @return { Function } &#30446;&#26631;&#20989;&#25968;fn&#30340;&#20195;&#29702;&#20989;&#25968;&#65292; &#21482;&#26377;&#25191;&#34892;&#35813;&#20989;&#25968;&#25165;&#33021;&#36215;&#21040;&#24310;&#26102;&#25928;&#26524;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * var start = 0;</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * function test(){</span>","<span class=\"c\">     *     console.log( new Date() - start );</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var testDefer = UE.utils.defer( test, 1000 );</span>","<span class=\"c\">     * //</span>","<span class=\"c\">     * start = new Date();</span>","<span class=\"c\">     * //output: (&#22823;&#32422;&#22312;1000&#27627;&#31186;&#20043;&#21518;&#36755;&#20986;) 1000</span>","<span class=\"c\">     * testDefer();</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21019;&#24314;&#24310;&#36831;&#25351;&#23450;&#26102;&#38388;&#21518;&#25191;&#34892;&#30340;&#20989;&#25968;fn, &#22914;&#26524;&#22312;&#24310;&#36831;&#26102;&#38388;&#20869;&#20877;&#27425;&#25191;&#34892;&#35813;&#26041;&#27861;&#65292; &#23558;&#20250;&#26681;&#25454;&#25351;&#23450;&#30340;exclusion&#30340;&#20540;&#65292;</span>","<span class=\"c\">     * &#20915;&#23450;&#26159;&#21542;&#21462;&#28040;&#21069;&#19968;&#27425;&#20989;&#25968;&#30340;&#25191;&#34892;&#65292; &#22914;&#26524;exclusion&#30340;&#20540;&#20026;true&#65292; &#21017;&#21462;&#28040;&#25191;&#34892;&#65292;&#21453;&#20043;&#65292;&#23558;&#32487;&#32493;&#25191;&#34892;&#21069;&#19968;&#20010;&#26041;&#27861;&#12290;</span>","<span class=\"c\">     * @method defer</span>","<span class=\"c\">     * @param { Function } fn &#38656;&#35201;&#24310;&#36831;&#25191;&#34892;&#30340;&#20989;&#25968;&#23545;&#35937;</span>","<span class=\"c\">     * @param { int } delay &#24310;&#36831;&#30340;&#26102;&#38388;&#65292; &#21333;&#20301;&#26159;&#27627;&#31186;</span>","<span class=\"c\">     * @param { Boolean } exclusion &#22914;&#26524;&#22312;&#24310;&#36831;&#26102;&#38388;&#20869;&#20877;&#27425;&#25191;&#34892;&#35813;&#20989;&#25968;&#65292;&#35813;&#20540;&#23558;&#20915;&#23450;&#26159;&#21542;&#21462;&#28040;&#25191;&#34892;&#21069;&#19968;&#27425;&#20989;&#25968;&#30340;&#25191;&#34892;&#65292;</span>","<span class=\"c\">     *                     &#20540;&#20026;true&#34920;&#31034;&#21462;&#28040;&#25191;&#34892;&#65292; &#21453;&#20043;&#21017;&#23558;&#22312;&#25191;&#34892;&#21069;&#19968;&#27425;&#20989;&#25968;&#20043;&#21518;&#25165;&#25191;&#34892;&#26412;&#27425;&#20989;&#25968;&#35843;&#29992;&#12290;</span>","<span class=\"c\">     * @warning &#35813;&#26041;&#27861;&#30340;&#26102;&#38388;&#25511;&#21046;&#26159;&#19981;&#31934;&#30830;&#30340;&#65292;&#20165;&#20165;&#21482;&#33021;&#20445;&#35777;&#20989;&#25968;&#30340;&#25191;&#34892;&#26159;&#22312;&#32473;&#23450;&#30340;&#26102;&#38388;&#20043;&#21518;&#65292;</span>","<span class=\"c\">     *           &#32780;&#19981;&#33021;&#20445;&#35777;&#21018;&#22909;&#21040;&#36798;&#24310;&#36831;&#26102;&#38388;&#26102;&#25191;&#34892;&#12290;</span>","<span class=\"c\">     * @return { Function } &#30446;&#26631;&#20989;&#25968;fn&#30340;&#20195;&#29702;&#20989;&#25968;&#65292; &#21482;&#26377;&#25191;&#34892;&#35813;&#20989;&#25968;&#25165;&#33021;&#36215;&#21040;&#24310;&#26102;&#25928;&#26524;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * function test(){</span>","<span class=\"c\">     *     console.log(1);</span>","<span class=\"c\">     * }</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var testDefer = UE.utils.defer( test, 1000, true );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: (&#20004;&#27425;&#35843;&#29992;&#20165;&#26377;&#19968;&#27425;&#36755;&#20986;) 1</span>","<span class=\"c\">     * testDefer();</span>","<span class=\"c\">     * testDefer();</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    defer<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>fn<span class=\"k\">,</span> delay<span class=\"k\">,</span> exclusion<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> timerID<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>exclusion<span class=\"k\">)</span> <span class=\"k\">{</span>","                clearTimeout<span class=\"k\">(</span>timerID<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            timerID <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span>fn<span class=\"k\">,</span> delay<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#33719;&#21462;&#20803;&#32032;item&#22312;&#25968;&#32452;array&#20013;&#39318;&#27425;&#20986;&#29616;&#30340;&#20301;&#32622;, &#22914;&#26524;&#26410;&#25214;&#21040;item&#65292; &#21017;&#36820;&#22238;-1</span>","<span class=\"c\">     * @method indexOf</span>","<span class=\"c\">     * @remind &#35813;&#26041;&#27861;&#30340;&#21305;&#37197;&#36807;&#31243;&#20351;&#29992;&#30340;&#26159;&#24658;&#31561;&#8220;===&#8221;</span>","<span class=\"c\">     * @param { Array } array &#38656;&#35201;&#26597;&#25214;&#30340;&#25968;&#32452;&#23545;&#35937;</span>","<span class=\"c\">     * @param { * } item &#38656;&#35201;&#22312;&#30446;&#26631;&#25968;&#32452;&#20013;&#26597;&#25214;&#30340;&#20540;</span>","<span class=\"c\">     * @return { int } &#36820;&#22238;item&#22312;&#30446;&#26631;&#25968;&#32452;array&#20013;&#39318;&#27425;&#20986;&#29616;&#30340;&#20301;&#32622;&#65292; &#22914;&#26524;&#22312;&#25968;&#32452;&#20013;&#26410;&#25214;&#21040;item&#65292; &#21017;&#36820;&#22238;-1</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * var item = 1,</span>","<span class=\"c\">     *     arr = [ 3, 4, 6, 8, 1, 1, 2 ];</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: 4</span>","<span class=\"c\">     * console.log( UE.utils.indexOf( arr, item ) );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#33719;&#21462;&#20803;&#32032;item&#25968;&#32452;array&#20013;&#39318;&#27425;&#20986;&#29616;&#30340;&#20301;&#32622;, &#22914;&#26524;&#26410;&#25214;&#21040;item&#65292; &#21017;&#36820;&#22238;-1&#12290;&#36890;&#36807;start&#30340;&#20540;&#21487;&#20197;&#25351;&#23450;&#25628;&#32034;&#30340;&#36215;&#22987;&#20301;&#32622;&#12290;</span>","<span class=\"c\">     * @method indexOf</span>","<span class=\"c\">     * @remind &#35813;&#26041;&#27861;&#30340;&#21305;&#37197;&#36807;&#31243;&#20351;&#29992;&#30340;&#26159;&#24658;&#31561;&#8220;===&#8221;</span>","<span class=\"c\">     * @param { Array } array &#38656;&#35201;&#26597;&#25214;&#30340;&#25968;&#32452;&#23545;&#35937;</span>","<span class=\"c\">     * @param { * } item &#38656;&#35201;&#22312;&#30446;&#26631;&#25968;&#32452;&#20013;&#26597;&#25214;&#30340;&#20540;</span>","<span class=\"c\">     * @param { int } start &#25628;&#32034;&#30340;&#36215;&#22987;&#20301;&#32622;</span>","<span class=\"c\">     * @return { int } &#36820;&#22238;item&#22312;&#30446;&#26631;&#25968;&#32452;array&#20013;&#30340;start&#20301;&#32622;&#20043;&#21518;&#39318;&#27425;&#20986;&#29616;&#30340;&#20301;&#32622;&#65292; &#22914;&#26524;&#22312;&#25968;&#32452;&#20013;&#26410;&#25214;&#21040;item&#65292; &#21017;&#36820;&#22238;-1</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * var item = 1,</span>","<span class=\"c\">     *     arr = [ 3, 4, 6, 8, 1, 2, 8, 3, 2, 1, 1, 4 ];</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: 9</span>","<span class=\"c\">     * console.log( UE.utils.indexOf( arr, item, 5 ) );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    indexOf<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>array<span class=\"k\">,</span> item<span class=\"k\">,</span> start<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","        start <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>isNumber<span class=\"k\">(</span>start<span class=\"k\">)</span> <span class=\"k\">?</span> start <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span>array<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">,</span> i<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>i <span class=\"k\">&gt;=</span> start <span class=\"k\">&amp;&amp;</span> v <span class=\"k\">===</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","                index <span class=\"k\">=</span> i<span class=\"k\">;</span>","                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">return</span> index<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#31227;&#38500;&#25968;&#32452;array&#20013;&#25152;&#26377;&#30340;&#20803;&#32032;item</span>","<span class=\"c\">     * @method removeItem</span>","<span class=\"c\">     * @param { Array } array &#35201;&#31227;&#38500;&#20803;&#32032;&#30340;&#30446;&#26631;&#25968;&#32452;</span>","<span class=\"c\">     * @param { * } item &#23558;&#35201;&#34987;&#31227;&#38500;&#30340;&#20803;&#32032;</span>","<span class=\"c\">     * @remind &#35813;&#26041;&#27861;&#30340;&#21305;&#37197;&#36807;&#31243;&#20351;&#29992;&#30340;&#26159;&#24658;&#31561;&#8220;===&#8221;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * var arr = [ 4, 5, 7, 1, 3, 4, 6 ];</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * UE.utils.removeItem( arr, 4 );</span>","<span class=\"c\">     * //output: [ 5, 7, 1, 3, 6 ]</span>","<span class=\"c\">     * console.log( arr );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    removeItem<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>array<span class=\"k\">,</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> array<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>array<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> item<span class=\"k\">)</span> <span class=\"k\">{</span>","                array<span class=\"k\">.</span>splice<span class=\"k\">(</span>i<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">);</span>","                i<span class=\"k\">--;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21024;&#38500;&#23383;&#31526;&#20018;str&#30340;&#39318;&#23614;&#31354;&#26684;</span>","<span class=\"c\">     * @method trim</span>","<span class=\"c\">     * @param { String } str &#38656;&#35201;&#21024;&#38500;&#39318;&#23614;&#31354;&#26684;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { String } &#21024;&#38500;&#20102;&#39318;&#23614;&#30340;&#31354;&#26684;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var str = \" UEdtior \";</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: 9</span>","<span class=\"c\">     * console.log( str.length );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: 7</span>","<span class=\"c\">     * console.log( UE.utils.trim( \" UEdtior \" ).length );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: 9</span>","<span class=\"c\">     * console.log( str.length );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     *  ```</span>","<span class=\"c\">     */</span>","    trim<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/(^[ \\t\\n\\r]+)|([ \\t\\n\\r]+$)/g</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;&#23383;&#31526;&#20018;str&#20197;','&#20998;&#38548;&#25104;&#25968;&#32452;&#21518;&#65292;&#23558;&#35813;&#25968;&#32452;&#36716;&#25442;&#25104;&#21704;&#24076;&#23545;&#35937;&#65292; &#20854;&#29983;&#25104;&#30340;hash&#23545;&#35937;&#30340;key&#20026;&#25968;&#32452;&#20013;&#30340;&#20803;&#32032;&#65292; value&#20026;1</span>","<span class=\"c\">     * @method listToMap</span>","<span class=\"c\">     * @warning &#35813;&#26041;&#27861;&#22312;&#29983;&#25104;&#30340;hash&#23545;&#35937;&#20013;&#65292;&#20250;&#20026;&#27599;&#19968;&#20010;key&#21516;&#26102;&#29983;&#25104;&#19968;&#20010;&#21478;&#19968;&#20010;&#20840;&#22823;&#20889;&#30340;key&#12290;</span>","<span class=\"c\">     * @param { String } str &#35813;&#23383;&#31526;&#20018;&#23558;&#34987;&#20197;','&#20998;&#21106;&#20026;&#25968;&#32452;&#65292; &#28982;&#21518;&#36827;&#34892;&#36716;&#21270;</span>","<span class=\"c\">     * @return { Object } &#36716;&#21270;&#20043;&#21518;&#30340;hash&#23545;&#35937;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: Object {UEdtior: 1, UEDTIOR: 1, Hello: 1, HELLO: 1}</span>","<span class=\"c\">     * console.log( UE.utils.listToMap( 'UEdtior,Hello' ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;&#23383;&#31526;&#20018;&#25968;&#32452;&#36716;&#25442;&#25104;&#21704;&#24076;&#23545;&#35937;&#65292; &#20854;&#29983;&#25104;&#30340;hash&#23545;&#35937;&#30340;key&#20026;&#25968;&#32452;&#20013;&#30340;&#20803;&#32032;&#65292; value&#20026;1</span>","<span class=\"c\">     * @method listToMap</span>","<span class=\"c\">     * @warning &#35813;&#26041;&#27861;&#22312;&#29983;&#25104;&#30340;hash&#23545;&#35937;&#20013;&#65292;&#20250;&#20026;&#27599;&#19968;&#20010;key&#21516;&#26102;&#29983;&#25104;&#19968;&#20010;&#21478;&#19968;&#20010;&#20840;&#22823;&#20889;&#30340;key&#12290;</span>","<span class=\"c\">     * @param { Array } arr &#23383;&#31526;&#20018;&#25968;&#32452;</span>","<span class=\"c\">     * @return { Object } &#36716;&#21270;&#20043;&#21518;&#30340;hash&#23545;&#35937;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: Object {UEdtior: 1, UEDTIOR: 1, Hello: 1, HELLO: 1}</span>","<span class=\"c\">     * console.log( UE.utils.listToMap( [ 'UEdtior', 'Hello' ] ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    listToMap<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>list<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>list<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        list <span class=\"k\">=</span> utils<span class=\"k\">.</span>isArray<span class=\"k\">(</span>list<span class=\"k\">)</span> <span class=\"k\">?</span> list <span class=\"k\">:</span> list<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">','</span><span class=\"k\">);</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">,</span> obj <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span> ci <span class=\"k\">=</span> list<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","            obj<span class=\"k\">[</span>ci<span class=\"k\">.</span>toUpperCase<span class=\"k\">()]</span> <span class=\"k\">=</span> obj<span class=\"k\">[</span>ci<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> obj<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;str&#20013;&#30340;html&#31526;&#21495;&#36716;&#20041;,&#23558;&#36716;&#20041;&#8220;'&#65292;&amp;&#65292;&lt;&#65292;\"&#65292;&gt;&#8221;&#20116;&#20010;&#23383;&#31526;</span>","<span class=\"c\">     * @method unhtml</span>","<span class=\"c\">     * @param { String } str &#38656;&#35201;&#36716;&#20041;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { String } &#36716;&#20041;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * var html = '&lt;body&gt;&amp;&lt;/body&gt;';</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: &amp;lt;body&amp;gt;&amp;amp;&amp;lt;/body&amp;gt;</span>","<span class=\"c\">     * console.log( UE.utils.unhtml( html ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    unhtml<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">,</span> reg<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> str <span class=\"k\">?</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span>reg <span class=\"k\">||</span> <span class=\"s\">/[&amp;&lt;\"&gt;'](?:(amp|lt|quot|gt|#39|nbsp);)?/g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>a<span class=\"k\">,</span> b<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>b<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> a<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">{</span>","                    <span class=\"s\">'&lt;'</span><span class=\"k\">:</span><span class=\"s\">'&amp;lt;'</span><span class=\"k\">,</span>","                    <span class=\"s\">'&amp;'</span><span class=\"k\">:</span><span class=\"s\">'&amp;amp;'</span><span class=\"k\">,</span>","                    <span class=\"s\">'\"'</span><span class=\"k\">:</span><span class=\"s\">'&amp;quot;'</span><span class=\"k\">,</span>","                    <span class=\"s\">'&gt;'</span><span class=\"k\">:</span><span class=\"s\">'&amp;gt;'</span><span class=\"k\">,</span>","                    <span class=\"s\">\"'\"</span><span class=\"k\">:</span><span class=\"s\">'&amp;#39;'</span>","                <span class=\"k\">}</span><span class=\"k\">[</span>a<span class=\"k\">]</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;str&#20013;&#30340;&#36716;&#20041;&#23383;&#31526;&#36824;&#21407;&#25104;html&#23383;&#31526;</span>","<span class=\"c\">     * @see UE.utils.unhtml(String);</span>","<span class=\"c\">     * @method html</span>","<span class=\"c\">     * @param { String } str &#38656;&#35201;&#36870;&#36716;&#20041;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { String } &#36870;&#36716;&#20041;&#21518;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var str = '&amp;lt;body&amp;gt;&amp;amp;&amp;lt;/body&amp;gt;';</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: &lt;body&gt;&amp;&lt;/body&gt;</span>","<span class=\"c\">     * console.log( UE.utils.html( str ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    html<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> str <span class=\"k\">?</span> str<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&amp;((g|l|quo)t|amp|#39);/g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>m<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">{</span>","                <span class=\"s\">'&amp;lt;'</span><span class=\"k\">:</span><span class=\"s\">'&lt;'</span><span class=\"k\">,</span>","                <span class=\"s\">'&amp;amp;'</span><span class=\"k\">:</span><span class=\"s\">'&amp;'</span><span class=\"k\">,</span>","                <span class=\"s\">'&amp;quot;'</span><span class=\"k\">:</span><span class=\"s\">'\"'</span><span class=\"k\">,</span>","                <span class=\"s\">'&amp;gt;'</span><span class=\"k\">:</span><span class=\"s\">'&gt;'</span><span class=\"k\">,</span>","                <span class=\"s\">'&amp;#39;'</span><span class=\"k\">:</span><span class=\"s\">\"'\"</span>","            <span class=\"k\">}</span><span class=\"k\">[</span>m<span class=\"k\">]</span>","        <span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23558;css&#26679;&#24335;&#36716;&#25442;&#20026;&#39548;&#23792;&#30340;&#24418;&#24335;</span>","<span class=\"c\">     * @method cssStyleToDomStyle</span>","<span class=\"c\">     * @param { String } cssName &#38656;&#35201;&#36716;&#25442;&#30340;css&#26679;&#24335;&#21517;</span>","<span class=\"c\">     * @return { String } &#36716;&#25442;&#25104;&#39548;&#23792;&#24418;&#24335;&#21518;&#30340;css&#26679;&#24335;&#21517;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * var str = 'border-top';</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: borderTop</span>","<span class=\"c\">     * console.log( UE.utils.cssStyleToDomStyle( str ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    cssStyleToDomStyle<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> test <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'div'</span><span class=\"k\">).</span>style<span class=\"k\">,</span>","            cache <span class=\"k\">=</span> <span class=\"k\">{</span>","                <span class=\"s\">'float'</span><span class=\"k\">:</span>test<span class=\"k\">.</span>cssFloat <span class=\"k\">!=</span> undefined <span class=\"k\">?</span> <span class=\"s\">'cssFloat'</span> <span class=\"k\">:</span> test<span class=\"k\">.</span>styleFloat <span class=\"k\">!=</span> undefined <span class=\"k\">?</span> <span class=\"s\">'styleFloat'</span> <span class=\"k\">:</span> <span class=\"s\">'float'</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cssName<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> cache<span class=\"k\">[</span>cssName<span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">(</span>cache<span class=\"k\">[</span>cssName<span class=\"k\">]</span> <span class=\"k\">=</span> cssName<span class=\"k\">.</span>toLowerCase<span class=\"k\">().</span>replace<span class=\"k\">(</span><span class=\"s\">/-./g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> match<span class=\"k\">.</span>charAt<span class=\"k\">(</span><span class=\"s\">1</span><span class=\"k\">).</span>toUpperCase<span class=\"k\">();</span>","            <span class=\"k\">}</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">(),</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21160;&#24577;&#21152;&#36733;&#25991;&#20214;&#21040;doc&#20013;</span>","<span class=\"c\">     * @method loadFile</span>","<span class=\"c\">     * @param { DomDocument } document &#38656;&#35201;&#21152;&#36733;&#36164;&#28304;&#25991;&#20214;&#30340;&#25991;&#26723;&#23545;&#35937;</span>","<span class=\"c\">     * @param { KeyValueMap } options &#21152;&#36733;&#36164;&#28304;&#25991;&#20214;&#30340;&#23646;&#24615;&#38598;&#21512;&#65292; &#21462;&#20540;&#35831;&#21442;&#32771;&#20195;&#30721;&#31034;&#20363;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * UE.utils.loadFile( document, {</span>","<span class=\"c\">     *     src:\"test.js\",</span>","<span class=\"c\">     *     tag:\"script\",</span>","<span class=\"c\">     *     type:\"text/javascript\",</span>","<span class=\"c\">     *     defer:\"defer\"</span>","<span class=\"c\">     * } );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21160;&#24577;&#21152;&#36733;&#25991;&#20214;&#21040;doc&#20013;&#65292;&#21152;&#36733;&#25104;&#21151;&#21518;&#25191;&#34892;&#30340;&#22238;&#35843;&#20989;&#25968;fn</span>","<span class=\"c\">     * @method loadFile</span>","<span class=\"c\">     * @param { DomDocument } document &#38656;&#35201;&#21152;&#36733;&#36164;&#28304;&#25991;&#20214;&#30340;&#25991;&#26723;&#23545;&#35937;</span>","<span class=\"c\">     * @param { KeyValueMap } options &#21152;&#36733;&#36164;&#28304;&#25991;&#20214;&#30340;&#23646;&#24615;&#38598;&#21512;&#65292; &#35813;&#38598;&#21512;&#25903;&#25345;&#30340;&#20540;&#26159;script&#26631;&#31614;&#21644;style&#26631;&#31614;&#25903;&#25345;&#30340;&#25152;&#26377;&#23646;&#24615;&#12290;</span>","<span class=\"c\">     * @param { Function } fn &#36164;&#28304;&#25991;&#20214;&#21152;&#36733;&#25104;&#21151;&#20043;&#21518;&#25191;&#34892;&#30340;&#22238;&#35843;</span>","<span class=\"c\">     * @warning &#23545;&#20110;&#22312;&#21516;&#19968;&#20010;&#25991;&#26723;&#20013;&#22810;&#27425;&#21152;&#36733;&#21516;&#19968;URL&#30340;&#25991;&#20214;&#65292; &#35813;&#26041;&#27861;&#20250;&#22312;&#31532;&#19968;&#27425;&#21152;&#36733;&#20043;&#21518;&#32531;&#23384;&#35813;&#35831;&#27714;&#65292;</span>","<span class=\"c\">     *           &#22312;&#27492;&#20043;&#21518;&#30340;&#25152;&#26377;&#21516;&#19968;URL&#30340;&#35831;&#27714;&#65292; &#23558;&#20250;&#30452;&#25509;&#20986;&#21457;&#22238;&#35843;&#12290;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * UE.utils.loadFile( document, {</span>","<span class=\"c\">     *     src:\"test.js\",</span>","<span class=\"c\">     *     tag:\"script\",</span>","<span class=\"c\">     *     type:\"text/javascript\",</span>","<span class=\"c\">     *     defer:\"defer\"</span>","<span class=\"c\">     * }, function () {</span>","<span class=\"c\">     *     console.log('&#21152;&#36733;&#25104;&#21151;');</span>","<span class=\"c\">     * } );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    loadFile<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tmpList <span class=\"k\">=</span> <span class=\"k\">[];</span>","","        <span class=\"k\">function</span> getItem<span class=\"k\">(</span>doc<span class=\"k\">,</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> tmpList<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>ci<span class=\"k\">.</span>doc <span class=\"k\">===</span> doc <span class=\"k\">&amp;&amp;</span> ci<span class=\"k\">.</span>url <span class=\"k\">==</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>src <span class=\"k\">||</span> obj<span class=\"k\">.</span>href<span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> ci<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>doc<span class=\"k\">,</span> obj<span class=\"k\">,</span> fn<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> item <span class=\"k\">=</span> getItem<span class=\"k\">(</span>doc<span class=\"k\">,</span> obj<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>item<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>item<span class=\"k\">.</span>ready<span class=\"k\">)</span> <span class=\"k\">{</span>","                    fn <span class=\"k\">&amp;&amp;</span> fn<span class=\"k\">();</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    item<span class=\"k\">.</span>funs<span class=\"k\">.</span>push<span class=\"k\">(</span>fn<span class=\"k\">)</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            tmpList<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span>","                doc<span class=\"k\">:</span>doc<span class=\"k\">,</span>","                url<span class=\"k\">:</span>obj<span class=\"k\">.</span>src <span class=\"k\">||</span> obj<span class=\"k\">.</span>href<span class=\"k\">,</span>","                funs<span class=\"k\">:[</span>fn<span class=\"k\">]</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>doc<span class=\"k\">.</span>body<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> html <span class=\"k\">=</span> <span class=\"k\">[];</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>p <span class=\"k\">==</span> <span class=\"s\">'tag'</span><span class=\"k\">)</span><span class=\"k\">continue</span><span class=\"k\">;</span>","                    html<span class=\"k\">.</span>push<span class=\"k\">(</span>p <span class=\"k\">+</span> <span class=\"s\">'=\"'</span> <span class=\"k\">+</span> obj<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'\"'</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","                doc<span class=\"k\">.</span>write<span class=\"k\">(</span><span class=\"s\">'&lt;'</span> <span class=\"k\">+</span> obj<span class=\"k\">.</span>tag <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> html<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">' &gt;&lt;/'</span> <span class=\"k\">+</span> obj<span class=\"k\">.</span>tag <span class=\"k\">+</span> <span class=\"s\">'&gt;'</span><span class=\"k\">);</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>id <span class=\"k\">&amp;&amp;</span> doc<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>obj<span class=\"k\">.</span>id<span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> element <span class=\"k\">=</span> doc<span class=\"k\">.</span>createElement<span class=\"k\">(</span>obj<span class=\"k\">.</span>tag<span class=\"k\">);</span>","            <span class=\"k\">delete</span> obj<span class=\"k\">.</span>tag<span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","                element<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span>p<span class=\"k\">,</span> obj<span class=\"k\">[</span>p<span class=\"k\">]);</span>","            <span class=\"k\">}</span>","            element<span class=\"k\">.</span>onload <span class=\"k\">=</span> element<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"k\">this</span><span class=\"k\">.</span>readyState <span class=\"k\">||</span> <span class=\"s\">/loaded|complete/</span><span class=\"k\">.</span>test<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>readyState<span class=\"k\">))</span> <span class=\"k\">{</span>","                    item <span class=\"k\">=</span> getItem<span class=\"k\">(</span>doc<span class=\"k\">,</span> obj<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>item<span class=\"k\">.</span>funs<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        item<span class=\"k\">.</span>ready <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> fi<span class=\"k\">;</span> fi <span class=\"k\">=</span> item<span class=\"k\">.</span>funs<span class=\"k\">.</span>pop<span class=\"k\">();)</span> <span class=\"k\">{</span>","                            fi<span class=\"k\">();</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    element<span class=\"k\">.</span>onload <span class=\"k\">=</span> element<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","            element<span class=\"k\">.</span>onerror <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">throw</span> Error<span class=\"k\">(</span><span class=\"s\">'The load '</span> <span class=\"k\">+</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>href <span class=\"k\">||</span> obj<span class=\"k\">.</span>src<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">' fails,check the url settings of file ueditor.config.js '</span><span class=\"k\">)</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","            doc<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"head\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">].</span>appendChild<span class=\"k\">(</span>element<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">(),</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#21028;&#26029;obj&#23545;&#35937;&#26159;&#21542;&#20026;&#31354;</span>","<span class=\"c\">     * @method isEmptyObject</span>","<span class=\"c\">     * @param { * } obj &#38656;&#35201;&#21028;&#26029;&#30340;&#23545;&#35937;</span>","<span class=\"c\">     * @remind &#22914;&#26524;&#21028;&#26029;&#30340;&#23545;&#35937;&#26159;NULL&#65292; &#23558;&#30452;&#25509;&#36820;&#22238;true&#65292; &#22914;&#26524;&#26159;&#25968;&#32452;&#19988;&#20026;&#31354;&#65292; &#36820;&#22238;true&#65292; &#22914;&#26524;&#26159;&#23383;&#31526;&#20018;&#65292; &#19988;&#23383;&#31526;&#20018;&#20026;&#31354;&#65292;</span>","<span class=\"c\">     *          &#36820;&#22238;true&#65292; &#22914;&#26524;&#26159;&#26222;&#36890;&#23545;&#35937;&#65292; &#19988;&#35813;&#23545;&#35937;&#27809;&#26377;&#20219;&#20309;&#23454;&#20363;&#23646;&#24615;&#65292; &#36820;&#22238;true</span>","<span class=\"c\">     * @return { Boolean } &#23545;&#35937;&#26159;&#21542;&#20026;&#31354;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: true</span>","<span class=\"c\">     * console.log( UE.utils.isEmptyObject( {} ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: true</span>","<span class=\"c\">     * console.log( UE.utils.isEmptyObject( [] ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: true</span>","<span class=\"c\">     * console.log( UE.utils.isEmptyObject( \"\" ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: false</span>","<span class=\"c\">     * console.log( UE.utils.isEmptyObject( { key: 1 } ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: false</span>","<span class=\"c\">     * console.log( UE.utils.isEmptyObject( [1] ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: false</span>","<span class=\"c\">     * console.log( UE.utils.isEmptyObject( \"1\" ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    isEmptyObject<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>obj <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>isArray<span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>isString<span class=\"k\">(</span>obj<span class=\"k\">))</span> <span class=\"k\">return</span> obj<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> key <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">if</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>key<span class=\"k\">))</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#25226;rgb&#26684;&#24335;&#30340;&#39068;&#33394;&#20540;&#36716;&#25442;&#25104;16&#36827;&#21046;&#26684;&#24335;</span>","<span class=\"c\">     * @method fixColor</span>","<span class=\"c\">     * @param { String } rgb&#26684;&#24335;&#30340;&#39068;&#33394;&#20540;</span>","<span class=\"c\">     * @param { String }</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * rgb(255,255,255)  =&gt; \"#ffffff\"</span>","<span class=\"c\">     */</span>","    fixColor<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>name<span class=\"k\">,</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/color/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>name<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/rgba?/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>value<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> array <span class=\"k\">=</span> value<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\",\"</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>array<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">3</span><span class=\"k\">)</span>","                <span class=\"k\">return</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","            value <span class=\"k\">=</span> <span class=\"s\">\"#\"</span><span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> color<span class=\"k\">;</span> color <span class=\"k\">=</span> array<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                color <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>color<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[^\\d]/gi</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">).</span>toString<span class=\"k\">(</span><span class=\"s\">16</span><span class=\"k\">);</span>","                value <span class=\"k\">+=</span> color<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"s\">\"0\"</span> <span class=\"k\">+</span> color <span class=\"k\">:</span> color<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            value <span class=\"k\">=</span> value<span class=\"k\">.</span>toUpperCase<span class=\"k\">();</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span>  value<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#21482;&#38024;&#23545;border,padding,margin&#20570;&#20102;&#22788;&#29702;&#65292;&#22240;&#20026;&#24615;&#33021;&#38382;&#39064;</span>","<span class=\"c\">     * @public</span>","<span class=\"c\">     * @function</span>","<span class=\"c\">     * @param {String}    val style&#23383;&#31526;&#20018;</span>","<span class=\"c\">     */</span>","    optCss<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> padding<span class=\"k\">,</span> margin<span class=\"k\">,</span> border<span class=\"k\">;</span>","        val <span class=\"k\">=</span> val<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/(padding|margin|border)\\-([^:]+):([^;]+);?/gi</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">,</span> key<span class=\"k\">,</span> name<span class=\"k\">,</span> val<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>val<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">).</span>length <span class=\"k\">==</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">switch</span> <span class=\"k\">(</span>key<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">case</span> <span class=\"s\">'padding'</span><span class=\"k\">:</span>","                        <span class=\"k\">!</span>padding <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>padding <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","                        padding<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> val<span class=\"k\">;</span>","                        <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'margin'</span><span class=\"k\">:</span>","                        <span class=\"k\">!</span>margin <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>margin <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","                        margin<span class=\"k\">[</span>name<span class=\"k\">]</span> <span class=\"k\">=</span> val<span class=\"k\">;</span>","                        <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'border'</span><span class=\"k\">:</span>","                        <span class=\"k\">return</span> val <span class=\"k\">==</span> <span class=\"s\">'initial'</span> <span class=\"k\">?</span> <span class=\"s\">''</span> <span class=\"k\">:</span> str<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> str<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">function</span> opt<span class=\"k\">(</span>obj<span class=\"k\">,</span> name<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> t <span class=\"k\">=</span> obj<span class=\"k\">.</span>top <span class=\"k\">,</span> b <span class=\"k\">=</span> obj<span class=\"k\">.</span>bottom<span class=\"k\">,</span> l <span class=\"k\">=</span> obj<span class=\"k\">.</span>left<span class=\"k\">,</span> r <span class=\"k\">=</span> obj<span class=\"k\">.</span>right<span class=\"k\">,</span> val <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>t <span class=\"k\">||</span> <span class=\"k\">!</span>l <span class=\"k\">||</span> <span class=\"k\">!</span>b <span class=\"k\">||</span> <span class=\"k\">!</span>r<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> obj<span class=\"k\">)</span> <span class=\"k\">{</span>","                    val <span class=\"k\">+=</span> <span class=\"s\">';'</span> <span class=\"k\">+</span> name <span class=\"k\">+</span> <span class=\"s\">'-'</span> <span class=\"k\">+</span> p <span class=\"k\">+</span> <span class=\"s\">':'</span> <span class=\"k\">+</span> obj<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">';'</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                val <span class=\"k\">+=</span> <span class=\"s\">';'</span> <span class=\"k\">+</span> name <span class=\"k\">+</span> <span class=\"s\">':'</span> <span class=\"k\">+</span>","                    <span class=\"k\">(</span>t <span class=\"k\">==</span> b <span class=\"k\">&amp;&amp;</span> b <span class=\"k\">==</span> l <span class=\"k\">&amp;&amp;</span> l <span class=\"k\">==</span> r <span class=\"k\">?</span> t <span class=\"k\">:</span>","                        t <span class=\"k\">==</span> b <span class=\"k\">&amp;&amp;</span> l <span class=\"k\">==</span> r <span class=\"k\">?</span> <span class=\"k\">(</span>t <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> l<span class=\"k\">)</span> <span class=\"k\">:</span>","                            l <span class=\"k\">==</span> r <span class=\"k\">?</span> <span class=\"k\">(</span>t <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> l <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> b<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">(</span>t <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> r <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> b <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> l<span class=\"k\">))</span> <span class=\"k\">+</span> <span class=\"s\">';'</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> val<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        val <span class=\"k\">+=</span> opt<span class=\"k\">(</span>padding<span class=\"k\">,</span> <span class=\"s\">'padding'</span><span class=\"k\">)</span> <span class=\"k\">+</span> opt<span class=\"k\">(</span>margin<span class=\"k\">,</span> <span class=\"s\">'margin'</span><span class=\"k\">);</span>","        <span class=\"k\">return</span> val<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^[ \\n\\r\\t;]*|[ \\n\\r\\t]*$/</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/;([ \\n\\r\\t]+)|\\1;/g</span><span class=\"k\">,</span> <span class=\"s\">';'</span><span class=\"k\">)</span>","            <span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/(&amp;((l|g)t|quot|#39))?;{2,}/g</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>a<span class=\"k\">,</span> b<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> b <span class=\"k\">?</span> b <span class=\"k\">+</span> <span class=\"s\">\";;\"</span> <span class=\"k\">:</span> <span class=\"s\">';'</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#28145;&#24230;&#20811;&#38534;&#23545;&#35937;&#65292;&#20174;source&#21040;target</span>","<span class=\"c\">     * @method clone</span>","<span class=\"c\">     * @grammar UE.utils.clone(source) =&gt; anthorObj &#26032;&#30340;&#23545;&#35937;&#26159;&#23436;&#25972;&#30340;source&#30340;&#21103;&#26412;</span>","<span class=\"c\">     * @grammar UE.utils.clone(source,target) =&gt; target&#21253;&#21547;&#20102;source&#30340;&#25152;&#26377;&#20869;&#23481;&#65292;&#37325;&#21517;&#20250;&#35206;&#30422;</span>","<span class=\"c\">     */</span>","    clone<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>source<span class=\"k\">,</span> target<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tmp<span class=\"k\">;</span>","        target <span class=\"k\">=</span> target <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">in</span> source<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>source<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>i<span class=\"k\">))</span> <span class=\"k\">{</span>","                tmp <span class=\"k\">=</span> source<span class=\"k\">[</span>i<span class=\"k\">];</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"k\">typeof</span> tmp <span class=\"k\">==</span> <span class=\"s\">'object'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    target<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> utils<span class=\"k\">.</span>isArray<span class=\"k\">(</span>tmp<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">[]</span> <span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","                    utils<span class=\"k\">.</span>clone<span class=\"k\">(</span>source<span class=\"k\">[</span>i<span class=\"k\">],</span> target<span class=\"k\">[</span>i<span class=\"k\">])</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    target<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> target<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#25226;cm&#65295;pt&#20026;&#21333;&#20301;&#30340;&#20540;&#36716;&#25442;&#20026;px&#20026;&#21333;&#20301;&#30340;&#20540;</span>","<span class=\"c\">     * @method transUnitToPx</span>","<span class=\"c\">     * @param { String } &#24453;&#36716;&#25442;&#30340;&#24102;&#21333;&#20301;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { String } &#36716;&#25442;&#20026;px&#20026;&#35745;&#37327;&#21333;&#20301;&#30340;&#20540;&#30340;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: 500px</span>","<span class=\"c\">     * console.log( UE.utils.transUnitToPx( '20cm' ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //output: 27px</span>","<span class=\"c\">     * console.log( UE.utils.transUnitToPx( '20pt' ) );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    transUnitToPx<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span><span class=\"s\">/(pt|cm)/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>val<span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> val","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> unit<span class=\"k\">;</span>","        val<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/([\\d.]+)(\\w+)/</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>str<span class=\"k\">,</span> v<span class=\"k\">,</span> u<span class=\"k\">)</span> <span class=\"k\">{</span>","            val <span class=\"k\">=</span> v<span class=\"k\">;</span>","            unit <span class=\"k\">=</span> u<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">switch</span> <span class=\"k\">(</span>unit<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">case</span> <span class=\"s\">'cm'</span><span class=\"k\">:</span>","                val <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">25</span><span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">case</span> <span class=\"s\">'pt'</span><span class=\"k\">:</span>","                val <span class=\"k\">=</span> Math<span class=\"k\">.</span>round<span class=\"k\">(</span>parseFloat<span class=\"k\">(</span>val<span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">96</span> <span class=\"k\">/</span> <span class=\"s\">72</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> val <span class=\"k\">+</span> <span class=\"k\">(</span>val <span class=\"k\">?</span> <span class=\"s\">'px'</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#22312;dom&#26641;ready&#20043;&#21518;&#25191;&#34892;&#32473;&#23450;&#30340;&#22238;&#35843;&#20989;&#25968;</span>","<span class=\"c\">     * @method domReady</span>","<span class=\"c\">     * @remind &#22914;&#26524;&#22312;&#25191;&#34892;&#35813;&#26041;&#27861;&#30340;&#26102;&#20505;&#65292; dom&#26641;&#24050;&#32463;ready&#65292; &#37027;&#20040;&#22238;&#35843;&#20989;&#25968;&#23558;&#31435;&#21051;&#25191;&#34892;</span>","<span class=\"c\">     * @param { Function } fn dom&#26641;ready&#20043;&#21518;&#30340;&#22238;&#35843;&#20989;&#25968;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * UE.utils.domReady( function () {</span>","<span class=\"c\">     *</span>","<span class=\"c\">     *     console.log('123');</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * } );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    domReady<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> fnArr <span class=\"k\">=</span> <span class=\"k\">[];</span>","","        <span class=\"k\">function</span> doReady<span class=\"k\">(</span>doc<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">//&#30830;&#20445;onready&#21482;&#25191;&#34892;&#19968;&#27425;</span>","            doc<span class=\"k\">.</span>isReady <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> fnArr<span class=\"k\">.</span>pop<span class=\"k\">();</span> ci<span class=\"k\">())</span> <span class=\"k\">{</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">function</span> <span class=\"k\">(</span>onready<span class=\"k\">,</span> win<span class=\"k\">)</span> <span class=\"k\">{</span>","            win <span class=\"k\">=</span> win <span class=\"k\">||</span> window<span class=\"k\">;</span>","            <span class=\"k\">var</span> doc <span class=\"k\">=</span> win<span class=\"k\">.</span>document<span class=\"k\">;</span>","            onready <span class=\"k\">&amp;&amp;</span> fnArr<span class=\"k\">.</span>push<span class=\"k\">(</span>onready<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>readyState <span class=\"k\">===</span> <span class=\"s\">\"complete\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                doReady<span class=\"k\">(</span>doc<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                doc<span class=\"k\">.</span>isReady <span class=\"k\">&amp;&amp;</span> doReady<span class=\"k\">(</span>doc<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>ie<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>isReady<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","                        <span class=\"k\">try</span> <span class=\"k\">{</span>","                            doc<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>doScroll<span class=\"k\">(</span><span class=\"s\">\"left\"</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>error<span class=\"k\">)</span> <span class=\"k\">{</span>","                            setTimeout<span class=\"k\">(</span>arguments<span class=\"k\">.</span>callee<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","                            <span class=\"k\">return</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        doReady<span class=\"k\">(</span>doc<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">)();</span>","                    win<span class=\"k\">.</span>attachEvent<span class=\"k\">(</span><span class=\"s\">'onload'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        doReady<span class=\"k\">(</span>doc<span class=\"k\">)</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    doc<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">\"DOMContentLoaded\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        doc<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span><span class=\"s\">\"DOMContentLoaded\"</span><span class=\"k\">,</span> arguments<span class=\"k\">.</span>callee<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                        doReady<span class=\"k\">(</span>doc<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                    win<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span><span class=\"s\">'load'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        doReady<span class=\"k\">(</span>doc<span class=\"k\">)</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">(),</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#21160;&#24577;&#28155;&#21152;css&#26679;&#24335;</span>","<span class=\"c\">     * @method cssRule</span>","<span class=\"c\">     * @param { String } &#33410;&#28857;&#21517;&#31216;</span>","<span class=\"c\">     * @grammar UE.utils.cssRule('&#28155;&#21152;&#30340;&#26679;&#24335;&#30340;&#33410;&#28857;&#21517;&#31216;',['&#26679;&#24335;'&#65292;'&#25918;&#21040;&#21738;&#20010;document&#19978;'])</span>","<span class=\"c\">     * @grammar UE.utils.cssRule('body','body{background:#ccc}') =&gt; null  //&#32473;body&#28155;&#21152;&#32972;&#26223;&#39068;&#33394;</span>","<span class=\"c\">     * @grammar UE.utils.cssRule('body') =&gt;&#26679;&#24335;&#30340;&#23383;&#31526;&#20018;  //&#21462;&#24471;key&#20540;&#20026;body&#30340;&#26679;&#24335;&#30340;&#20869;&#23481;,&#22914;&#26524;&#27809;&#26377;&#25214;&#21040;key&#20540;&#20808;&#20851;&#30340;&#26679;&#24335;&#23558;&#36820;&#22238;&#31354;&#65292;&#20363;&#22914;&#21018;&#25165;&#37027;&#20010;&#32972;&#26223;&#39068;&#33394;&#65292;&#23558;&#36820;&#22238; body{background:#ccc}</span>","<span class=\"c\">     * @grammar UE.utils.cssRule('body','') =&gt;null //&#28165;&#31354;&#32473;&#23450;&#30340;key&#20540;&#30340;&#32972;&#26223;&#39068;&#33394;</span>","<span class=\"c\">     */</span>","    cssRule<span class=\"k\">:</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> style<span class=\"k\">,</span> doc<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> indexList<span class=\"k\">,</span> index<span class=\"k\">;</span>","        doc <span class=\"k\">=</span> doc <span class=\"k\">||</span> document<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>doc<span class=\"k\">.</span>indexList<span class=\"k\">)</span> <span class=\"k\">{</span>","            indexList <span class=\"k\">=</span> doc<span class=\"k\">.</span>indexList<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            indexList <span class=\"k\">=</span> doc<span class=\"k\">.</span>indexList <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> sheetStyle<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>indexList<span class=\"k\">[</span>key<span class=\"k\">])</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>style <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"s\">''</span>","            <span class=\"k\">}</span>","            sheetStyle <span class=\"k\">=</span> doc<span class=\"k\">.</span>createStyleSheet<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">,</span> index <span class=\"k\">=</span> doc<span class=\"k\">.</span>styleSheets<span class=\"k\">.</span>length<span class=\"k\">);</span>","            indexList<span class=\"k\">[</span>key<span class=\"k\">]</span> <span class=\"k\">=</span> index<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            sheetStyle <span class=\"k\">=</span> doc<span class=\"k\">.</span>styleSheets<span class=\"k\">[</span>indexList<span class=\"k\">[</span>key<span class=\"k\">]];</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>style <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> sheetStyle<span class=\"k\">.</span>cssText","        <span class=\"k\">}</span>","        sheetStyle<span class=\"k\">.</span>cssText <span class=\"k\">=</span> style <span class=\"k\">||</span> <span class=\"s\">''</span>","    <span class=\"k\">}</span> <span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>key<span class=\"k\">,</span> style<span class=\"k\">,</span> doc<span class=\"k\">)</span> <span class=\"k\">{</span>","        doc <span class=\"k\">=</span> doc <span class=\"k\">||</span> document<span class=\"k\">;</span>","        <span class=\"k\">var</span> head <span class=\"k\">=</span> doc<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'head'</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">],</span> node<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!(</span>node <span class=\"k\">=</span> doc<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>key<span class=\"k\">)))</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>style <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"s\">''</span>","            <span class=\"k\">}</span>","            node <span class=\"k\">=</span> doc<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'style'</span><span class=\"k\">);</span>","            node<span class=\"k\">.</span>id <span class=\"k\">=</span> key<span class=\"k\">;</span>","            head<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>node<span class=\"k\">)</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>style <span class=\"k\">===</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> node<span class=\"k\">.</span>innerHTML","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>style <span class=\"k\">!==</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            node<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> style<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            head<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">)</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","    sort<span class=\"k\">:</span><span class=\"k\">function</span><span class=\"k\">(</span>array<span class=\"k\">,</span>compareFn<span class=\"k\">)</span><span class=\"k\">{</span>","        compareFn <span class=\"k\">=</span> compareFn <span class=\"k\">||</span> <span class=\"k\">function</span><span class=\"k\">(</span>item1<span class=\"k\">,</span> item2<span class=\"k\">)</span><span class=\"k\">{</span> <span class=\"k\">return</span> item1<span class=\"k\">.</span>localeCompare<span class=\"k\">(</span>item2<span class=\"k\">);</span><span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>len <span class=\"k\">=</span> array<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">&lt;</span>len<span class=\"k\">;</span> i<span class=\"k\">++)</span><span class=\"k\">{</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> i<span class=\"k\">,</span>length <span class=\"k\">=</span> array<span class=\"k\">.</span>length<span class=\"k\">;</span> j<span class=\"k\">&lt;</span>length<span class=\"k\">;</span> j<span class=\"k\">++)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>compareFn<span class=\"k\">(</span>array<span class=\"k\">[</span>i<span class=\"k\">],</span> array<span class=\"k\">[</span>j<span class=\"k\">])</span> <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">var</span> t <span class=\"k\">=</span> array<span class=\"k\">[</span>i<span class=\"k\">];</span>","                    array<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> array<span class=\"k\">[</span>j<span class=\"k\">];</span>","                    array<span class=\"k\">[</span>j<span class=\"k\">]</span> <span class=\"k\">=</span> t<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> array<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @method isString</span>","<span class=\"c\"> * @param { * } object &#38656;&#35201;&#21028;&#26029;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @return { Boolean } &#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;&#25968;&#32452;</span>","<span class=\"c\"> * @method isArray</span>","<span class=\"c\"> * @param { * } object &#38656;&#35201;&#21028;&#26029;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @return { Boolean } &#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;&#25968;&#32452;</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;&#19968;&#20010;Function</span>","<span class=\"c\"> * @method isFunction</span>","<span class=\"c\"> * @param { * } object &#38656;&#35201;&#21028;&#26029;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @return { Boolean } &#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;Function</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;Number</span>","<span class=\"c\"> * @method isNumber</span>","<span class=\"c\"> * @param { * } object &#38656;&#35201;&#21028;&#26029;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @return { Boolean } &#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;Number</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;&#19968;&#20010;&#27491;&#21017;&#34920;&#36798;&#24335;</span>","<span class=\"c\"> * @method isRegExp</span>","<span class=\"c\"> * @param { * } object &#38656;&#35201;&#21028;&#26029;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @return { Boolean } &#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;&#27491;&#21017;&#34920;&#36798;&#24335;</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#21028;&#26029;&#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;&#19968;&#20010;&#26222;&#36890;&#23545;&#35937;</span>","<span class=\"c\"> * @method isObject</span>","<span class=\"c\"> * @param { * } object &#38656;&#35201;&#21028;&#26029;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @return { Boolean } &#32473;&#23450;&#30340;&#23545;&#35937;&#26159;&#21542;&#26159;&#26222;&#36890;&#23545;&#35937;</span>","<span class=\"c\"> */</span>","utils<span class=\"k\">.</span>each<span class=\"k\">([</span><span class=\"s\">'String'</span><span class=\"k\">,</span> <span class=\"s\">'Function'</span><span class=\"k\">,</span> <span class=\"s\">'Array'</span><span class=\"k\">,</span> <span class=\"s\">'Number'</span><span class=\"k\">,</span> <span class=\"s\">'RegExp'</span><span class=\"k\">,</span> <span class=\"s\">'Object'</span><span class=\"k\">],</span> <span class=\"k\">function</span> <span class=\"k\">(</span>v<span class=\"k\">)</span> <span class=\"k\">{</span>","    UE<span class=\"k\">.</span>utils<span class=\"k\">[</span><span class=\"s\">'is'</span> <span class=\"k\">+</span> v<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> Object<span class=\"k\">.</span>prototype<span class=\"k\">.</span>toString<span class=\"k\">.</span>apply<span class=\"k\">(</span>obj<span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">'[object '</span> <span class=\"k\">+</span> v <span class=\"k\">+</span> <span class=\"s\">']'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">);</span>"];
_$jscoverage['core/utils.js'][14]++;
var utils = (UE.utils = {each: (function (obj, iterator, context) {
  _$jscoverage['core/utils.js'][55]++;
  if ((obj == null)) {
    _$jscoverage['core/utils.js'][55]++;
    return;
  }
  _$jscoverage['core/utils.js'][56]++;
  if ((obj.length === (+ obj.length))) {
    _$jscoverage['core/utils.js'][57]++;
    for (var i = 0, l = obj.length; (i < l); (i++)) {
      _$jscoverage['core/utils.js'][58]++;
      if ((iterator.call(context, obj[i], i, obj) === false)) {
        _$jscoverage['core/utils.js'][59]++;
        return false;
      }
}
  }
  else {
    _$jscoverage['core/utils.js'][62]++;
    for (var key in obj) {
      _$jscoverage['core/utils.js'][63]++;
      if (obj.hasOwnProperty(key)) {
        _$jscoverage['core/utils.js'][64]++;
        if ((iterator.call(context, obj[key], key, obj) === false)) {
          _$jscoverage['core/utils.js'][65]++;
          return false;
        }
      }
}
  }
}), makeInstance: (function (obj) {
  _$jscoverage['core/utils.js'][87]++;
  var noop = new Function();
  _$jscoverage['core/utils.js'][88]++;
  noop.prototype = obj;
  _$jscoverage['core/utils.js'][89]++;
  obj = new noop();
  _$jscoverage['core/utils.js'][90]++;
  noop.prototype = null;
  _$jscoverage['core/utils.js'][91]++;
  return obj;
}), extend: (function (t, s, b) {
  _$jscoverage['core/utils.js'][138]++;
  if (s) {
    _$jscoverage['core/utils.js'][139]++;
    for (var k in s) {
      _$jscoverage['core/utils.js'][140]++;
      if (((! b) || (! t.hasOwnProperty(k)))) {
        _$jscoverage['core/utils.js'][141]++;
        t[k] = s[k];
      }
}
  }
  _$jscoverage['core/utils.js'][145]++;
  return t;
}), extend2: (function (t) {
  _$jscoverage['core/utils.js'][172]++;
  var a = arguments;
  _$jscoverage['core/utils.js'][173]++;
  for (var i = 1; (i < a.length); (i++)) {
    _$jscoverage['core/utils.js'][174]++;
    var x = a[i];
    _$jscoverage['core/utils.js'][175]++;
    for (var k in x) {
      _$jscoverage['core/utils.js'][176]++;
      if ((! t.hasOwnProperty(k))) {
        _$jscoverage['core/utils.js'][177]++;
        t[k] = x[k];
      }
}
}
  _$jscoverage['core/utils.js'][181]++;
  return t;
}), inherits: (function (subClass, superClass) {
  _$jscoverage['core/utils.js'][215]++;
  var oldP = subClass.prototype, newP = utils.makeInstance(superClass.prototype);
  _$jscoverage['core/utils.js'][217]++;
  utils.extend(newP, oldP, true);
  _$jscoverage['core/utils.js'][218]++;
  subClass.prototype = newP;
  _$jscoverage['core/utils.js'][219]++;
  return (newP.constructor = subClass);
}), bind: (function (fn, context) {
  _$jscoverage['core/utils.js'][249]++;
  return (function () {
  _$jscoverage['core/utils.js'][250]++;
  return fn.apply(context, arguments);
});
}), defer: (function (fn, delay, exclusion) {
  _$jscoverage['core/utils.js'][304]++;
  var timerID;
  _$jscoverage['core/utils.js'][305]++;
  return (function () {
  _$jscoverage['core/utils.js'][306]++;
  if (exclusion) {
    _$jscoverage['core/utils.js'][307]++;
    clearTimeout(timerID);
  }
  _$jscoverage['core/utils.js'][309]++;
  timerID = setTimeout(fn, delay);
});
}), indexOf: (function (array, item, start) {
  _$jscoverage['core/utils.js'][348]++;
  var index = -1;
  _$jscoverage['core/utils.js'][349]++;
  start = (this.isNumber(start)? start: 0);
  _$jscoverage['core/utils.js'][350]++;
  this.each(array, (function (v, i) {
  _$jscoverage['core/utils.js'][351]++;
  if (((i >= start) && (v === item))) {
    _$jscoverage['core/utils.js'][352]++;
    index = i;
    _$jscoverage['core/utils.js'][353]++;
    return false;
  }
}));
  _$jscoverage['core/utils.js'][356]++;
  return index;
}), removeItem: (function (array, item) {
  _$jscoverage['core/utils.js'][376]++;
  for (var i = 0, l = array.length; (i < l); (i++)) {
    _$jscoverage['core/utils.js'][377]++;
    if ((array[i] === item)) {
      _$jscoverage['core/utils.js'][378]++;
      array.splice(i, 1);
      _$jscoverage['core/utils.js'][379]++;
      (i--);
    }
}
}), trim: (function (str) {
  _$jscoverage['core/utils.js'][406]++;
  return str.replace(/(^[ \t\n\r]+)|([ \t\n\r]+$)/g, "");
}), listToMap: (function (list) {
  _$jscoverage['core/utils.js'][439]++;
  if ((! list)) {
    _$jscoverage['core/utils.js'][439]++;
    return ({});
  }
  _$jscoverage['core/utils.js'][440]++;
  list = (utils.isArray(list)? list: list.split(","));
  _$jscoverage['core/utils.js'][441]++;
  for (var i = 0, ci, obj = {}; (ci = list[(i++)]);) {
    _$jscoverage['core/utils.js'][442]++;
    obj[ci.toUpperCase()] = (obj[ci] = 1);
}
  _$jscoverage['core/utils.js'][444]++;
  return obj;
}), unhtml: (function (str, reg) {
  _$jscoverage['core/utils.js'][462]++;
  return (str? str.replace((reg || /[&<">'](?:(amp|lt|quot|gt|#39|nbsp);)?/g), (function (a, b) {
  _$jscoverage['core/utils.js'][463]++;
  if (b) {
    _$jscoverage['core/utils.js'][464]++;
    return a;
  }
  else {
    _$jscoverage['core/utils.js'][466]++;
    return {"<": "&lt;", "&": "&amp;", "\"": "&quot;", ">": "&gt;", "'": "&#39;"}[a];
  }
})): "");
}), html: (function (str) {
  _$jscoverage['core/utils.js'][495]++;
  return (str? str.replace(/&((g|l|quo)t|amp|#39);/g, (function (m) {
  _$jscoverage['core/utils.js'][496]++;
  return {"&lt;": "<", "&amp;": "&", "&quot;": "\"", "&gt;": ">", "&#39;": "'"}[m];
})): "");
}), cssStyleToDomStyle: (function () {
  _$jscoverage['core/utils.js'][522]++;
  var test = document.createElement("div").style, cache = {"float": ((test.cssFloat != undefined)? "cssFloat": ((test.styleFloat != undefined)? "styleFloat": "float"))};
  _$jscoverage['core/utils.js'][527]++;
  return (function (cssName) {
  _$jscoverage['core/utils.js'][528]++;
  return (cache[cssName] || (cache[cssName] = cssName.toLowerCase().replace(/-./g, (function (match) {
  _$jscoverage['core/utils.js'][529]++;
  return match.charAt(1).toUpperCase();
}))));
});
})(), loadFile: (function () {
  _$jscoverage['core/utils.js'][575]++;
  var tmpList = [];
  _$jscoverage['core/utils.js'][577]++;
  function getItem(doc, obj) {
    _$jscoverage['core/utils.js'][578]++;
    try {
      _$jscoverage['core/utils.js'][579]++;
      for (var i = 0, ci; (ci = tmpList[(i++)]);) {
        _$jscoverage['core/utils.js'][580]++;
        if (((ci.doc === doc) && (ci.url == (obj.src || obj.href)))) {
          _$jscoverage['core/utils.js'][581]++;
          return ci;
        }
}
    }
    catch (e) {
      _$jscoverage['core/utils.js'][585]++;
      return null;
    }
}
  _$jscoverage['core/utils.js'][590]++;
  return (function (doc, obj, fn) {
  _$jscoverage['core/utils.js'][591]++;
  var item = getItem(doc, obj);
  _$jscoverage['core/utils.js'][592]++;
  if (item) {
    _$jscoverage['core/utils.js'][593]++;
    if (item.ready) {
      _$jscoverage['core/utils.js'][594]++;
      (fn && fn());
    }
    else {
      _$jscoverage['core/utils.js'][596]++;
      item.funs.push(fn);
    }
    _$jscoverage['core/utils.js'][598]++;
    return;
  }
  _$jscoverage['core/utils.js'][600]++;
  tmpList.push({doc: doc, url: (obj.src || obj.href), funs: [fn]});
  _$jscoverage['core/utils.js'][605]++;
  if ((! doc.body)) {
    _$jscoverage['core/utils.js'][606]++;
    var html = [];
    _$jscoverage['core/utils.js'][607]++;
    for (var p in obj) {
      _$jscoverage['core/utils.js'][608]++;
      if ((p == "tag")) {
        _$jscoverage['core/utils.js'][608]++;
        continue;
      }
      _$jscoverage['core/utils.js'][609]++;
      html.push((p + "=\"" + obj[p] + "\""));
}
    _$jscoverage['core/utils.js'][611]++;
    doc.write(("<" + obj.tag + " " + html.join(" ") + " ></" + obj.tag + ">"));
    _$jscoverage['core/utils.js'][612]++;
    return;
  }
  _$jscoverage['core/utils.js'][614]++;
  if ((obj.id && doc.getElementById(obj.id))) {
    _$jscoverage['core/utils.js'][615]++;
    return;
  }
  _$jscoverage['core/utils.js'][617]++;
  var element = doc.createElement(obj.tag);
  _$jscoverage['core/utils.js'][618]++;
  (delete obj.tag);
  _$jscoverage['core/utils.js'][619]++;
  for (var p = p in obj) {
    _$jscoverage['core/utils.js'][620]++;
    element.setAttribute(p, obj[p]);
}
  _$jscoverage['core/utils.js'][622]++;
  element.onload = (element.onreadystatechange = (function () {
  _$jscoverage['core/utils.js'][623]++;
  if (((! this.readyState) || /loaded|complete/.test(this.readyState))) {
    _$jscoverage['core/utils.js'][624]++;
    item = getItem(doc, obj);
    _$jscoverage['core/utils.js'][625]++;
    if ((item.funs.length > 0)) {
      _$jscoverage['core/utils.js'][626]++;
      item.ready = 1;
      _$jscoverage['core/utils.js'][627]++;
      for (var fi; (fi = item.funs.pop());) {
        _$jscoverage['core/utils.js'][628]++;
        fi();
}
    }
    _$jscoverage['core/utils.js'][631]++;
    element.onload = (element.onreadystatechange = null);
  }
}));
  _$jscoverage['core/utils.js'][634]++;
  element.onerror = (function () {
  _$jscoverage['core/utils.js'][635]++;
  throw Error(("The load " + (obj.href || obj.src) + " fails,check the url settings of file ueditor.config.js "));
});
  _$jscoverage['core/utils.js'][637]++;
  doc.getElementsByTagName("head")[0].appendChild(element);
});
})(), isEmptyObject: (function (obj) {
  _$jscoverage['core/utils.js'][672]++;
  if ((obj == null)) {
    _$jscoverage['core/utils.js'][672]++;
    return true;
  }
  _$jscoverage['core/utils.js'][673]++;
  if ((this.isArray(obj) || this.isString(obj))) {
    _$jscoverage['core/utils.js'][673]++;
    return (obj.length === 0);
  }
  _$jscoverage['core/utils.js'][674]++;
  for (var key in obj) {
    _$jscoverage['core/utils.js'][674]++;
    if (obj.hasOwnProperty(key)) {
      _$jscoverage['core/utils.js'][674]++;
      return false;
    }
}
  _$jscoverage['core/utils.js'][675]++;
  return true;
}), fixColor: (function (name, value) {
  _$jscoverage['core/utils.js'][687]++;
  if ((/color/i.test(name) && /rgba?/.test(value))) {
    _$jscoverage['core/utils.js'][688]++;
    var array = value.split(",");
    _$jscoverage['core/utils.js'][689]++;
    if ((array.length > 3)) {
      _$jscoverage['core/utils.js'][690]++;
      return "";
    }
    _$jscoverage['core/utils.js'][691]++;
    value = "#";
    _$jscoverage['core/utils.js'][692]++;
    for (var i = 0, color; (color = array[(i++)]);) {
      _$jscoverage['core/utils.js'][693]++;
      color = parseInt(color.replace(/[^\d]/gi, ""), 10).toString(16);
      _$jscoverage['core/utils.js'][694]++;
      value += ((color.length == 1)? ("0" + color): color);
}
    _$jscoverage['core/utils.js'][696]++;
    value = value.toUpperCase();
  }
  _$jscoverage['core/utils.js'][698]++;
  return value;
}), optCss: (function (val) {
  _$jscoverage['core/utils.js'][708]++;
  var padding, margin, border;
  _$jscoverage['core/utils.js'][709]++;
  val = val.replace(/(padding|margin|border)\-([^:]+):([^;]+);?/gi, (function (str, key, name, val) {
  _$jscoverage['core/utils.js'][710]++;
  if ((val.split(" ").length == 1)) {
    _$jscoverage['core/utils.js'][711]++;
    switch (key) {
    case "padding":
      _$jscoverage['core/utils.js'][713]++;
      ((! padding) && (padding = {}));
      _$jscoverage['core/utils.js'][714]++;
      padding[name] = val;
      _$jscoverage['core/utils.js'][715]++;
      return "";
    case "margin":
      _$jscoverage['core/utils.js'][717]++;
      ((! margin) && (margin = {}));
      _$jscoverage['core/utils.js'][718]++;
      margin[name] = val;
      _$jscoverage['core/utils.js'][719]++;
      return "";
    case "border":
      _$jscoverage['core/utils.js'][721]++;
      return ((val == "initial")? "": str);
    }
  }
  _$jscoverage['core/utils.js'][724]++;
  return str;
}));
  _$jscoverage['core/utils.js'][727]++;
  function opt(obj, name) {
    _$jscoverage['core/utils.js'][728]++;
    if ((! obj)) {
      _$jscoverage['core/utils.js'][729]++;
      return "";
    }
    _$jscoverage['core/utils.js'][731]++;
    var t = obj.top, b = obj.bottom, l = obj.left, r = obj.right, val = "";
    _$jscoverage['core/utils.js'][732]++;
    if (((! t) || (! l) || (! b) || (! r))) {
      _$jscoverage['core/utils.js'][733]++;
      for (var p in obj) {
        _$jscoverage['core/utils.js'][734]++;
        val += (";" + name + "-" + p + ":" + obj[p] + ";");
}
    }
    else {
      _$jscoverage['core/utils.js'][737]++;
      val += (";" + name + ":" + (((t == b) && (b == l) && (l == r))? t: (((t == b) && (l == r))? (t + " " + l): ((l == r)? (t + " " + l + " " + b): (t + " " + r + " " + b + " " + l)))) + ";");
    }
    _$jscoverage['core/utils.js'][742]++;
    return val;
}
  _$jscoverage['core/utils.js'][745]++;
  val += (opt(padding, "padding") + opt(margin, "margin"));
  _$jscoverage['core/utils.js'][746]++;
  return val.replace(/^[ \n\r\t;]*|[ \n\r\t]*$/, "").replace(/;([ \n\r\t]+)|\1;/g, ";").replace(/(&((l|g)t|quot|#39))?;{2,}/g, (function (a, b) {
  _$jscoverage['core/utils.js'][748]++;
  return (b? (b + ";;"): ";");
}));
}), clone: (function (source, target) {
  _$jscoverage['core/utils.js'][759]++;
  var tmp;
  _$jscoverage['core/utils.js'][760]++;
  target = (target || {});
  _$jscoverage['core/utils.js'][761]++;
  for (var i in source) {
    _$jscoverage['core/utils.js'][762]++;
    if (source.hasOwnProperty(i)) {
      _$jscoverage['core/utils.js'][763]++;
      tmp = source[i];
      _$jscoverage['core/utils.js'][764]++;
      if (((typeof tmp) == "object")) {
        _$jscoverage['core/utils.js'][765]++;
        target[i] = (utils.isArray(tmp)? []: {});
        _$jscoverage['core/utils.js'][766]++;
        utils.clone(source[i], target[i]);
      }
      else {
        _$jscoverage['core/utils.js'][768]++;
        target[i] = tmp;
      }
    }
}
  _$jscoverage['core/utils.js'][772]++;
  return target;
}), transUnitToPx: (function (val) {
  _$jscoverage['core/utils.js'][792]++;
  if ((! /(pt|cm)/.test(val))) {
    _$jscoverage['core/utils.js'][793]++;
    return val;
  }
  _$jscoverage['core/utils.js'][795]++;
  var unit;
  _$jscoverage['core/utils.js'][796]++;
  val.replace(/([\d.]+)(\w+)/, (function (str, v, u) {
  _$jscoverage['core/utils.js'][797]++;
  val = v;
  _$jscoverage['core/utils.js'][798]++;
  unit = u;
}));
  _$jscoverage['core/utils.js'][800]++;
  switch (unit) {
  case "cm":
    _$jscoverage['core/utils.js'][802]++;
    val = (parseFloat(val) * 25);
    _$jscoverage['core/utils.js'][803]++;
    break;
  case "pt":
    _$jscoverage['core/utils.js'][805]++;
    val = Math.round(((parseFloat(val) * 96) / 72));
  }
  _$jscoverage['core/utils.js'][807]++;
  return (val + (val? "px": ""));
}), domReady: (function () {
  _$jscoverage['core/utils.js'][828]++;
  var fnArr = [];
  _$jscoverage['core/utils.js'][830]++;
  function doReady(doc) {
    _$jscoverage['core/utils.js'][832]++;
    doc.isReady = true;
    _$jscoverage['core/utils.js'][833]++;
    for (var ci; (ci = fnArr.pop()); ci()) {
}
}
  _$jscoverage['core/utils.js'][837]++;
  return (function (onready, win) {
  _$jscoverage['core/utils.js'][838]++;
  win = (win || window);
  _$jscoverage['core/utils.js'][839]++;
  var doc = win.document;
  _$jscoverage['core/utils.js'][840]++;
  (onready && fnArr.push(onready));
  _$jscoverage['core/utils.js'][841]++;
  if ((doc.readyState === "complete")) {
    _$jscoverage['core/utils.js'][842]++;
    doReady(doc);
  }
  else {
    _$jscoverage['core/utils.js'][844]++;
    (doc.isReady && doReady(doc));
    _$jscoverage['core/utils.js'][845]++;
    if (browser.ie) {
      _$jscoverage['core/utils.js'][846]++;
      (function () {
  _$jscoverage['core/utils.js'][847]++;
  if (doc.isReady) {
    _$jscoverage['core/utils.js'][847]++;
    return;
  }
  _$jscoverage['core/utils.js'][848]++;
  try {
    _$jscoverage['core/utils.js'][849]++;
    doc.documentElement.doScroll("left");
  }
  catch (error) {
    _$jscoverage['core/utils.js'][851]++;
    setTimeout(arguments.callee, 0);
    _$jscoverage['core/utils.js'][852]++;
    return;
  }
  _$jscoverage['core/utils.js'][854]++;
  doReady(doc);
})();
      _$jscoverage['core/utils.js'][856]++;
      win.attachEvent("onload", (function () {
  _$jscoverage['core/utils.js'][857]++;
  doReady(doc);
}));
    }
    else {
      _$jscoverage['core/utils.js'][860]++;
      doc.addEventListener("DOMContentLoaded", (function () {
  _$jscoverage['core/utils.js'][861]++;
  doc.removeEventListener("DOMContentLoaded", arguments.callee, false);
  _$jscoverage['core/utils.js'][862]++;
  doReady(doc);
}), false);
      _$jscoverage['core/utils.js'][864]++;
      win.addEventListener("load", (function () {
  _$jscoverage['core/utils.js'][865]++;
  doReady(doc);
}), false);
    }
  }
});
})(), cssRule: (browser.ie? (function (key, style, doc) {
  _$jscoverage['core/utils.js'][883]++;
  var indexList, index;
  _$jscoverage['core/utils.js'][884]++;
  doc = (doc || document);
  _$jscoverage['core/utils.js'][885]++;
  if (doc.indexList) {
    _$jscoverage['core/utils.js'][886]++;
    indexList = doc.indexList;
  }
  else {
    _$jscoverage['core/utils.js'][888]++;
    indexList = (doc.indexList = {});
  }
  _$jscoverage['core/utils.js'][890]++;
  var sheetStyle;
  _$jscoverage['core/utils.js'][891]++;
  if ((! indexList[key])) {
    _$jscoverage['core/utils.js'][892]++;
    if ((style === undefined)) {
      _$jscoverage['core/utils.js'][893]++;
      return "";
    }
    _$jscoverage['core/utils.js'][895]++;
    sheetStyle = doc.createStyleSheet("", (index = doc.styleSheets.length));
    _$jscoverage['core/utils.js'][896]++;
    indexList[key] = index;
  }
  else {
    _$jscoverage['core/utils.js'][898]++;
    sheetStyle = doc.styleSheets[indexList[key]];
  }
  _$jscoverage['core/utils.js'][900]++;
  if ((style === undefined)) {
    _$jscoverage['core/utils.js'][901]++;
    return sheetStyle.cssText;
  }
  _$jscoverage['core/utils.js'][903]++;
  sheetStyle.cssText = (style || "");
}): (function (key, style, doc) {
  _$jscoverage['core/utils.js'][905]++;
  doc = (doc || document);
  _$jscoverage['core/utils.js'][906]++;
  var head = doc.getElementsByTagName("head")[0], node;
  _$jscoverage['core/utils.js'][907]++;
  if ((! (node = doc.getElementById(key)))) {
    _$jscoverage['core/utils.js'][908]++;
    if ((style === undefined)) {
      _$jscoverage['core/utils.js'][909]++;
      return "";
    }
    _$jscoverage['core/utils.js'][911]++;
    node = doc.createElement("style");
    _$jscoverage['core/utils.js'][912]++;
    node.id = key;
    _$jscoverage['core/utils.js'][913]++;
    head.appendChild(node);
  }
  _$jscoverage['core/utils.js'][915]++;
  if ((style === undefined)) {
    _$jscoverage['core/utils.js'][916]++;
    return node.innerHTML;
  }
  _$jscoverage['core/utils.js'][918]++;
  if ((style !== "")) {
    _$jscoverage['core/utils.js'][919]++;
    node.innerHTML = style;
  }
  else {
    _$jscoverage['core/utils.js'][921]++;
    head.removeChild(node);
  }
})), sort: (function (array, compareFn) {
  _$jscoverage['core/utils.js'][925]++;
  compareFn = (compareFn || (function (item1, item2) {
  _$jscoverage['core/utils.js'][925]++;
  return item1.localeCompare(item2);
}));
  _$jscoverage['core/utils.js'][926]++;
  for (var i = 0, len = array.length; (i < len); (i++)) {
    _$jscoverage['core/utils.js'][927]++;
    for (var j = i, length = array.length; (j < length); (j++)) {
      _$jscoverage['core/utils.js'][928]++;
      if ((compareFn(array[i], array[j]) > 0)) {
        _$jscoverage['core/utils.js'][929]++;
        var t = array[i];
        _$jscoverage['core/utils.js'][930]++;
        array[i] = array[j];
        _$jscoverage['core/utils.js'][931]++;
        array[j] = t;
      }
}
}
  _$jscoverage['core/utils.js'][935]++;
  return array;
})});
_$jscoverage['core/utils.js'][980]++;
utils.each(["String", "Function", "Array", "Number", "RegExp", "Object"], (function (v) {
  _$jscoverage['core/utils.js'][981]++;
  UE.utils[("is" + v)] = (function (obj) {
  _$jscoverage['core/utils.js'][982]++;
  return (Object.prototype.toString.apply(obj) == ("[object " + v + "]"));
});
}));
