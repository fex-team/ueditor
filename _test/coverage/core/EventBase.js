/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['core/EventBase.js']) {
  _$jscoverage['core/EventBase.js'] = [];
  _$jscoverage['core/EventBase.js'][32] = 0;
  _$jscoverage['core/EventBase.js'][35] = 0;
  _$jscoverage['core/EventBase.js'][61] = 0;
  _$jscoverage['core/EventBase.js'][62] = 0;
  _$jscoverage['core/EventBase.js'][63] = 0;
  _$jscoverage['core/EventBase.js'][80] = 0;
  _$jscoverage['core/EventBase.js'][81] = 0;
  _$jscoverage['core/EventBase.js'][82] = 0;
  _$jscoverage['core/EventBase.js'][110] = 0;
  _$jscoverage['core/EventBase.js'][111] = 0;
  _$jscoverage['core/EventBase.js'][112] = 0;
  _$jscoverage['core/EventBase.js'][113] = 0;
  _$jscoverage['core/EventBase.js'][115] = 0;
  _$jscoverage['core/EventBase.js'][116] = 0;
  _$jscoverage['core/EventBase.js'][117] = 0;
  _$jscoverage['core/EventBase.js'][118] = 0;
  _$jscoverage['core/EventBase.js'][119] = 0;
  _$jscoverage['core/EventBase.js'][120] = 0;
  _$jscoverage['core/EventBase.js'][121] = 0;
  _$jscoverage['core/EventBase.js'][123] = 0;
  _$jscoverage['core/EventBase.js'][124] = 0;
  _$jscoverage['core/EventBase.js'][128] = 0;
  _$jscoverage['core/EventBase.js'][129] = 0;
  _$jscoverage['core/EventBase.js'][132] = 0;
  _$jscoverage['core/EventBase.js'][148] = 0;
  _$jscoverage['core/EventBase.js'][149] = 0;
  _$jscoverage['core/EventBase.js'][150] = 0;
  _$jscoverage['core/EventBase.js'][151] = 0;
}
_$jscoverage['core/EventBase.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * UE&#37319;&#29992;&#30340;&#20107;&#20214;&#22522;&#31867;</span>","<span class=\"c\"> * @file</span>","<span class=\"c\"> * @module UE</span>","<span class=\"c\"> * @class EventBase</span>","<span class=\"c\"> * @since 1.2.6.1</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * UEditor&#20844;&#29992;&#31354;&#38388;&#65292;UEditor&#25152;&#26377;&#30340;&#21151;&#33021;&#37117;&#25346;&#36733;&#22312;&#35813;&#31354;&#38388;&#19979;</span>","<span class=\"c\"> * @unfile</span>","<span class=\"c\"> * @module UE</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * UE&#37319;&#29992;&#30340;&#20107;&#20214;&#22522;&#31867;&#65292;&#32487;&#25215;&#27492;&#31867;&#30340;&#23545;&#24212;&#31867;&#23558;&#33719;&#21462;addListener,removeListener,fireEvent&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * &#22312;UE&#20013;&#65292;Editor&#20197;&#21450;&#25152;&#26377;ui&#23454;&#20363;&#37117;&#32487;&#25215;&#20102;&#35813;&#31867;&#65292;&#25925;&#21487;&#20197;&#22312;&#23545;&#24212;&#30340;ui&#23545;&#35937;&#20197;&#21450;editor&#23545;&#35937;&#19978;&#20351;&#29992;&#19978;&#36848;&#26041;&#27861;&#12290;</span>","<span class=\"c\"> * @unfile</span>","<span class=\"c\"> * @module UE</span>","<span class=\"c\"> * @class EventBase</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#36890;&#36807;&#27492;&#26500;&#36896;&#22120;&#65292;&#23376;&#31867;&#21487;&#20197;&#32487;&#25215;EventBase&#33719;&#21462;&#20107;&#20214;&#30417;&#21548;&#30340;&#26041;&#27861;</span>","<span class=\"c\"> * @constructor</span>","<span class=\"c\"> * @example</span>","<span class=\"c\"> * ```javascript</span>","<span class=\"c\"> * UE.EventBase.call(editor);</span>","<span class=\"c\"> * ```</span>","<span class=\"c\"> */</span>","","<span class=\"k\">var</span> EventBase <span class=\"k\">=</span> UE<span class=\"k\">.</span>EventBase <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","EventBase<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#27880;&#20876;&#20107;&#20214;&#30417;&#21548;&#22120;</span>","<span class=\"c\">     * @method addListener</span>","<span class=\"c\">     * @param { String } types &#30417;&#21548;&#30340;&#20107;&#20214;&#21517;&#31216;&#65292;&#21516;&#26102;&#30417;&#21548;&#22810;&#20010;&#20107;&#20214;&#20351;&#29992;&#31354;&#26684;&#20998;&#38548;</span>","<span class=\"c\">     * @param { Function } fn &#30417;&#21548;&#30340;&#20107;&#20214;&#34987;&#35302;&#21457;&#26102;&#65292;&#20250;&#25191;&#34892;&#35813;&#22238;&#35843;&#20989;&#25968;</span>","<span class=\"c\">     * @waining &#20107;&#20214;&#34987;&#35302;&#21457;&#26102;&#65292;&#30417;&#21548;&#30340;&#20989;&#25968;&#20551;&#22914;&#36820;&#22238;&#30340;&#20540;&#24658;&#31561;&#20110;true&#65292;&#22238;&#35843;&#20989;&#25968;&#30340;&#38431;&#21015;&#20013;&#21518;&#38754;&#30340;&#20989;&#25968;&#23558;&#19981;&#25191;&#34892;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.addListener('selectionchange',function(){</span>","<span class=\"c\">     *      console.log(\"&#36873;&#21306;&#24050;&#32463;&#21464;&#21270;&#65281;\");</span>","<span class=\"c\">     * })</span>","<span class=\"c\">     * editor.addListener('beforegetcontent aftergetcontent',function(type){</span>","<span class=\"c\">     *         if(type == 'beforegetcontent'){</span>","<span class=\"c\">     *             //do something</span>","<span class=\"c\">     *         }else{</span>","<span class=\"c\">     *             //do something</span>","<span class=\"c\">     *         }</span>","<span class=\"c\">     *         console.log(this.getContent) // this&#26159;&#27880;&#20876;&#30340;&#20107;&#20214;&#30340;&#32534;&#36753;&#22120;&#23454;&#20363;</span>","<span class=\"c\">     * })</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     * @see UE.EventBase:fireEvent(String)</span>","<span class=\"c\">     */</span>","    addListener<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>types<span class=\"k\">,</span> listener<span class=\"k\">)</span> <span class=\"k\">{</span>","        types <span class=\"k\">=</span> utils<span class=\"k\">.</span>trim<span class=\"k\">(</span>types<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">);</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ti<span class=\"k\">;</span> ti <span class=\"k\">=</span> types<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","            getListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> ti<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">).</span>push<span class=\"k\">(</span>listener<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#31227;&#38500;&#20107;&#20214;&#30417;&#21548;&#22120;</span>","<span class=\"c\">     * @method removeListener</span>","<span class=\"c\">     * @param { String } types &#31227;&#38500;&#30340;&#20107;&#20214;&#21517;&#31216;&#65292;&#21516;&#26102;&#31227;&#38500;&#22810;&#20010;&#20107;&#20214;&#20351;&#29992;&#31354;&#26684;&#20998;&#38548;</span>","<span class=\"c\">     * @param { Function } fn &#31227;&#38500;&#30417;&#21548;&#20107;&#20214;&#30340;&#20989;&#25968;&#24341;&#29992;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * //changeCallback&#20026;&#26041;&#27861;&#20307;</span>","<span class=\"c\">     * editor.removeListener(\"selectionchange\",changeCallback);</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    removeListener<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">(</span>types<span class=\"k\">,</span> listener<span class=\"k\">)</span> <span class=\"k\">{</span>","        types <span class=\"k\">=</span> utils<span class=\"k\">.</span>trim<span class=\"k\">(</span>types<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">);</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ti<span class=\"k\">;</span> ti <span class=\"k\">=</span> types<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","            utils<span class=\"k\">.</span>removeItem<span class=\"k\">(</span>getListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> ti<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[],</span> listener<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span>","","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#35302;&#21457;&#20107;&#20214;</span>","<span class=\"c\">     * @method fireEvent</span>","<span class=\"c\">     * @param { String } types &#35302;&#21457;&#30340;&#20107;&#20214;&#21517;&#31216;&#65292;&#21516;&#26102;&#35302;&#21457;&#22810;&#20010;&#20107;&#20214;&#20351;&#29992;&#31354;&#26684;&#20998;&#38548;</span>","<span class=\"c\">     * @remind &#35813;&#26041;&#27861;&#20250;&#35302;&#21457;addListener</span>","<span class=\"c\">     * @return { * } &#36820;&#22238;&#35302;&#21457;&#20107;&#20214;&#30340;&#38431;&#21015;&#20013;&#65292;&#26368;&#21518;&#25191;&#34892;&#30340;&#22238;&#35843;&#20989;&#25968;&#30340;&#36820;&#22238;&#20540;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.fireEvent(\"selectionchange\");</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#35302;&#21457;&#20107;&#20214;</span>","<span class=\"c\">     * @method fireEvent</span>","<span class=\"c\">     * @param { String } types &#35302;&#21457;&#30340;&#20107;&#20214;&#21517;&#31216;&#65292;&#21516;&#26102;&#35302;&#21457;&#22810;&#20010;&#20107;&#20214;&#20351;&#29992;&#31354;&#26684;&#20998;&#38548;</span>","<span class=\"c\">     * @param { *... } options &#21487;&#36873;&#21442;&#25968;&#65292;&#21487;&#20197;&#20256;&#20837;&#19968;&#20010;&#25110;&#22810;&#20010;&#21442;&#25968;&#65292;&#20250;&#20256;&#32473;&#20107;&#20214;&#35302;&#21457;&#30340;&#22238;&#35843;&#20989;&#25968;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.fireEvent(\"selectionchange\");</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    fireEvent<span class=\"k\">:</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> types <span class=\"k\">=</span> arguments<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","        types <span class=\"k\">=</span> utils<span class=\"k\">.</span>trim<span class=\"k\">(</span>types<span class=\"k\">).</span>split<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">);</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ti<span class=\"k\">;</span> ti <span class=\"k\">=</span> types<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> listeners <span class=\"k\">=</span> getListener<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> ti<span class=\"k\">),</span>","                r<span class=\"k\">,</span> t<span class=\"k\">,</span> k<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>listeners<span class=\"k\">)</span> <span class=\"k\">{</span>","                k <span class=\"k\">=</span> listeners<span class=\"k\">.</span>length<span class=\"k\">;</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span>k<span class=\"k\">--)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>listeners<span class=\"k\">[</span>k<span class=\"k\">])</span><span class=\"k\">continue</span><span class=\"k\">;</span>","                    t <span class=\"k\">=</span> listeners<span class=\"k\">[</span>k<span class=\"k\">].</span>apply<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>t <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> t<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>t <span class=\"k\">!==</span> undefined<span class=\"k\">)</span> <span class=\"k\">{</span>","                        r <span class=\"k\">=</span> t<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>t <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span><span class=\"s\">'on'</span> <span class=\"k\">+</span> ti<span class=\"k\">.</span>toLowerCase<span class=\"k\">()])</span> <span class=\"k\">{</span>","                r <span class=\"k\">=</span> t<span class=\"k\">.</span>apply<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> r<span class=\"k\">;</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#33719;&#24471;&#23545;&#35937;&#25152;&#25317;&#26377;&#30417;&#21548;&#31867;&#22411;&#30340;&#25152;&#26377;&#30417;&#21548;&#22120;</span>","<span class=\"c\"> * @unfile</span>","<span class=\"c\"> * @module UE</span>","<span class=\"c\"> * @since 1.2.6.1</span>","<span class=\"c\"> * @method getListener</span>","<span class=\"c\"> * @public</span>","<span class=\"c\"> * @param { Object } obj  &#26597;&#35810;&#30417;&#21548;&#22120;&#30340;&#23545;&#35937;</span>","<span class=\"c\"> * @param { String } type &#20107;&#20214;&#31867;&#22411;</span>","<span class=\"c\"> * @param { Boolean } force  &#20026;true&#19988;&#24403;&#21069;&#25152;&#26377;type&#31867;&#22411;&#30340;&#20390;&#21548;&#22120;&#19981;&#23384;&#22312;&#26102;&#65292;&#21019;&#24314;&#19968;&#20010;&#31354;&#30417;&#21548;&#22120;&#25968;&#32452;</span>","<span class=\"c\"> * @return { Array } &#30417;&#21548;&#22120;&#25968;&#32452;</span>","<span class=\"c\"> */</span>","<span class=\"k\">function</span> getListener<span class=\"k\">(</span>obj<span class=\"k\">,</span> type<span class=\"k\">,</span> force<span class=\"k\">)</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> allListeners<span class=\"k\">;</span>","    type <span class=\"k\">=</span> type<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","    <span class=\"k\">return</span> <span class=\"k\">(</span> <span class=\"k\">(</span> allListeners <span class=\"k\">=</span> <span class=\"k\">(</span> obj<span class=\"k\">.</span>__allListeners <span class=\"k\">||</span> force <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> obj<span class=\"k\">.</span>__allListeners <span class=\"k\">=</span> <span class=\"k\">{}</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span>","        <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> allListeners<span class=\"k\">[</span>type<span class=\"k\">]</span> <span class=\"k\">||</span> force <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> allListeners<span class=\"k\">[</span>type<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","<span class=\"k\">}</span>"];
_$jscoverage['core/EventBase.js'][32]++;
var EventBase = (UE.EventBase = (function () {
}));
_$jscoverage['core/EventBase.js'][35]++;
EventBase.prototype = {addListener: (function (types, listener) {
  _$jscoverage['core/EventBase.js'][61]++;
  types = utils.trim(types).split(" ");
  _$jscoverage['core/EventBase.js'][62]++;
  for (var i = 0, ti; (ti = types[(i++)]);) {
    _$jscoverage['core/EventBase.js'][63]++;
    getListener(this, ti, true).push(listener);
}
}), removeListener: (function (types, listener) {
  _$jscoverage['core/EventBase.js'][80]++;
  types = utils.trim(types).split(" ");
  _$jscoverage['core/EventBase.js'][81]++;
  for (var i = 0, ti; (ti = types[(i++)]);) {
    _$jscoverage['core/EventBase.js'][82]++;
    utils.removeItem((getListener(this, ti) || []), listener);
}
}), fireEvent: (function () {
  _$jscoverage['core/EventBase.js'][110]++;
  var types = arguments[0];
  _$jscoverage['core/EventBase.js'][111]++;
  types = utils.trim(types).split(" ");
  _$jscoverage['core/EventBase.js'][112]++;
  for (var i = 0, ti; (ti = types[(i++)]);) {
    _$jscoverage['core/EventBase.js'][113]++;
    var listeners = getListener(this, ti), r, t, k;
    _$jscoverage['core/EventBase.js'][115]++;
    if (listeners) {
      _$jscoverage['core/EventBase.js'][116]++;
      k = listeners.length;
      _$jscoverage['core/EventBase.js'][117]++;
      while ((k--)) {
        _$jscoverage['core/EventBase.js'][118]++;
        if ((! listeners[k])) {
          _$jscoverage['core/EventBase.js'][118]++;
          continue;
        }
        _$jscoverage['core/EventBase.js'][119]++;
        t = listeners[k].apply(this, arguments);
        _$jscoverage['core/EventBase.js'][120]++;
        if ((t === true)) {
          _$jscoverage['core/EventBase.js'][121]++;
          return t;
        }
        _$jscoverage['core/EventBase.js'][123]++;
        if ((t !== undefined)) {
          _$jscoverage['core/EventBase.js'][124]++;
          r = t;
        }
}
    }
    _$jscoverage['core/EventBase.js'][128]++;
    if ((t = this[("on" + ti.toLowerCase())])) {
      _$jscoverage['core/EventBase.js'][129]++;
      r = t.apply(this, arguments);
    }
}
  _$jscoverage['core/EventBase.js'][132]++;
  return r;
})};
_$jscoverage['core/EventBase.js'][148]++;
function getListener(obj, type, force) {
  _$jscoverage['core/EventBase.js'][149]++;
  var allListeners;
  _$jscoverage['core/EventBase.js'][150]++;
  type = type.toLowerCase();
  _$jscoverage['core/EventBase.js'][151]++;
  return ((allListeners = (obj.__allListeners || (force && (obj.__allListeners = {})))) && (allListeners[type] || (force && (allListeners[type] = []))));
}
