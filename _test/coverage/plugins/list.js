/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/list.js']) {
  _$jscoverage['plugins/list.js'] = [];
  _$jscoverage['plugins/list.js'][7] = 0;
  _$jscoverage['plugins/list.js'][8] = 0;
  _$jscoverage['plugins/list.js'][14] = 0;
  _$jscoverage['plugins/list.js'][25] = 0;
  _$jscoverage['plugins/list.js'][50] = 0;
  _$jscoverage['plugins/list.js'][51] = 0;
  _$jscoverage['plugins/list.js'][52] = 0;
  _$jscoverage['plugins/list.js'][53] = 0;
  _$jscoverage['plugins/list.js'][55] = 0;
  _$jscoverage['plugins/list.js'][57] = 0;
  _$jscoverage['plugins/list.js'][61] = 0;
  _$jscoverage['plugins/list.js'][64] = 0;
  _$jscoverage['plugins/list.js'][65] = 0;
  _$jscoverage['plugins/list.js'][66] = 0;
  _$jscoverage['plugins/list.js'][70] = 0;
  _$jscoverage['plugins/list.js'][71] = 0;
  _$jscoverage['plugins/list.js'][72] = 0;
  _$jscoverage['plugins/list.js'][73] = 0;
  _$jscoverage['plugins/list.js'][74] = 0;
  _$jscoverage['plugins/list.js'][75] = 0;
  _$jscoverage['plugins/list.js'][77] = 0;
  _$jscoverage['plugins/list.js'][78] = 0;
  _$jscoverage['plugins/list.js'][80] = 0;
  _$jscoverage['plugins/list.js'][82] = 0;
  _$jscoverage['plugins/list.js'][84] = 0;
  _$jscoverage['plugins/list.js'][85] = 0;
  _$jscoverage['plugins/list.js'][86] = 0;
  _$jscoverage['plugins/list.js'][87] = 0;
  _$jscoverage['plugins/list.js'][89] = 0;
  _$jscoverage['plugins/list.js'][90] = 0;
  _$jscoverage['plugins/list.js'][91] = 0;
  _$jscoverage['plugins/list.js'][92] = 0;
  _$jscoverage['plugins/list.js'][94] = 0;
  _$jscoverage['plugins/list.js'][95] = 0;
  _$jscoverage['plugins/list.js'][96] = 0;
  _$jscoverage['plugins/list.js'][97] = 0;
  _$jscoverage['plugins/list.js'][100] = 0;
  _$jscoverage['plugins/list.js'][101] = 0;
  _$jscoverage['plugins/list.js'][103] = 0;
  _$jscoverage['plugins/list.js'][104] = 0;
  _$jscoverage['plugins/list.js'][105] = 0;
  _$jscoverage['plugins/list.js'][107] = 0;
  _$jscoverage['plugins/list.js'][108] = 0;
  _$jscoverage['plugins/list.js'][110] = 0;
  _$jscoverage['plugins/list.js'][113] = 0;
  _$jscoverage['plugins/list.js'][114] = 0;
  _$jscoverage['plugins/list.js'][115] = 0;
  _$jscoverage['plugins/list.js'][117] = 0;
  _$jscoverage['plugins/list.js'][120] = 0;
  _$jscoverage['plugins/list.js'][121] = 0;
  _$jscoverage['plugins/list.js'][122] = 0;
  _$jscoverage['plugins/list.js'][123] = 0;
  _$jscoverage['plugins/list.js'][125] = 0;
  _$jscoverage['plugins/list.js'][126] = 0;
  _$jscoverage['plugins/list.js'][127] = 0;
  _$jscoverage['plugins/list.js'][128] = 0;
  _$jscoverage['plugins/list.js'][129] = 0;
  _$jscoverage['plugins/list.js'][130] = 0;
  _$jscoverage['plugins/list.js'][131] = 0;
  _$jscoverage['plugins/list.js'][132] = 0;
  _$jscoverage['plugins/list.js'][133] = 0;
  _$jscoverage['plugins/list.js'][134] = 0;
  _$jscoverage['plugins/list.js'][135] = 0;
  _$jscoverage['plugins/list.js'][136] = 0;
  _$jscoverage['plugins/list.js'][138] = 0;
  _$jscoverage['plugins/list.js'][139] = 0;
  _$jscoverage['plugins/list.js'][140] = 0;
  _$jscoverage['plugins/list.js'][141] = 0;
  _$jscoverage['plugins/list.js'][142] = 0;
  _$jscoverage['plugins/list.js'][143] = 0;
  _$jscoverage['plugins/list.js'][153] = 0;
  _$jscoverage['plugins/list.js'][154] = 0;
  _$jscoverage['plugins/list.js'][155] = 0;
  _$jscoverage['plugins/list.js'][156] = 0;
  _$jscoverage['plugins/list.js'][158] = 0;
  _$jscoverage['plugins/list.js'][162] = 0;
  _$jscoverage['plugins/list.js'][163] = 0;
  _$jscoverage['plugins/list.js'][165] = 0;
  _$jscoverage['plugins/list.js'][166] = 0;
  _$jscoverage['plugins/list.js'][167] = 0;
  _$jscoverage['plugins/list.js'][168] = 0;
  _$jscoverage['plugins/list.js'][169] = 0;
  _$jscoverage['plugins/list.js'][170] = 0;
  _$jscoverage['plugins/list.js'][171] = 0;
  _$jscoverage['plugins/list.js'][172] = 0;
  _$jscoverage['plugins/list.js'][174] = 0;
  _$jscoverage['plugins/list.js'][175] = 0;
  _$jscoverage['plugins/list.js'][176] = 0;
  _$jscoverage['plugins/list.js'][178] = 0;
  _$jscoverage['plugins/list.js'][180] = 0;
  _$jscoverage['plugins/list.js'][181] = 0;
  _$jscoverage['plugins/list.js'][184] = 0;
  _$jscoverage['plugins/list.js'][185] = 0;
  _$jscoverage['plugins/list.js'][186] = 0;
  _$jscoverage['plugins/list.js'][187] = 0;
  _$jscoverage['plugins/list.js'][188] = 0;
  _$jscoverage['plugins/list.js'][189] = 0;
  _$jscoverage['plugins/list.js'][192] = 0;
  _$jscoverage['plugins/list.js'][198] = 0;
  _$jscoverage['plugins/list.js'][201] = 0;
  _$jscoverage['plugins/list.js'][202] = 0;
  _$jscoverage['plugins/list.js'][203] = 0;
  _$jscoverage['plugins/list.js'][204] = 0;
  _$jscoverage['plugins/list.js'][205] = 0;
  _$jscoverage['plugins/list.js'][206] = 0;
  _$jscoverage['plugins/list.js'][208] = 0;
  _$jscoverage['plugins/list.js'][209] = 0;
  _$jscoverage['plugins/list.js'][210] = 0;
  _$jscoverage['plugins/list.js'][211] = 0;
  _$jscoverage['plugins/list.js'][213] = 0;
  _$jscoverage['plugins/list.js'][218] = 0;
  _$jscoverage['plugins/list.js'][219] = 0;
  _$jscoverage['plugins/list.js'][223] = 0;
  _$jscoverage['plugins/list.js'][224] = 0;
  _$jscoverage['plugins/list.js'][227] = 0;
  _$jscoverage['plugins/list.js'][228] = 0;
  _$jscoverage['plugins/list.js'][229] = 0;
  _$jscoverage['plugins/list.js'][230] = 0;
  _$jscoverage['plugins/list.js'][233] = 0;
  _$jscoverage['plugins/list.js'][244] = 0;
  _$jscoverage['plugins/list.js'][245] = 0;
  _$jscoverage['plugins/list.js'][246] = 0;
  _$jscoverage['plugins/list.js'][247] = 0;
  _$jscoverage['plugins/list.js'][248] = 0;
  _$jscoverage['plugins/list.js'][249] = 0;
  _$jscoverage['plugins/list.js'][252] = 0;
  _$jscoverage['plugins/list.js'][254] = 0;
  _$jscoverage['plugins/list.js'][255] = 0;
  _$jscoverage['plugins/list.js'][256] = 0;
  _$jscoverage['plugins/list.js'][261] = 0;
  _$jscoverage['plugins/list.js'][262] = 0;
  _$jscoverage['plugins/list.js'][263] = 0;
  _$jscoverage['plugins/list.js'][267] = 0;
  _$jscoverage['plugins/list.js'][268] = 0;
  _$jscoverage['plugins/list.js'][269] = 0;
  _$jscoverage['plugins/list.js'][271] = 0;
  _$jscoverage['plugins/list.js'][272] = 0;
  _$jscoverage['plugins/list.js'][273] = 0;
  _$jscoverage['plugins/list.js'][274] = 0;
  _$jscoverage['plugins/list.js'][275] = 0;
  _$jscoverage['plugins/list.js'][276] = 0;
  _$jscoverage['plugins/list.js'][279] = 0;
  _$jscoverage['plugins/list.js'][282] = 0;
  _$jscoverage['plugins/list.js'][285] = 0;
  _$jscoverage['plugins/list.js'][286] = 0;
  _$jscoverage['plugins/list.js'][287] = 0;
  _$jscoverage['plugins/list.js'][289] = 0;
  _$jscoverage['plugins/list.js'][291] = 0;
  _$jscoverage['plugins/list.js'][293] = 0;
  _$jscoverage['plugins/list.js'][294] = 0;
  _$jscoverage['plugins/list.js'][295] = 0;
  _$jscoverage['plugins/list.js'][297] = 0;
  _$jscoverage['plugins/list.js'][299] = 0;
  _$jscoverage['plugins/list.js'][300] = 0;
  _$jscoverage['plugins/list.js'][301] = 0;
  _$jscoverage['plugins/list.js'][302] = 0;
  _$jscoverage['plugins/list.js'][304] = 0;
  _$jscoverage['plugins/list.js'][305] = 0;
  _$jscoverage['plugins/list.js'][307] = 0;
  _$jscoverage['plugins/list.js'][308] = 0;
  _$jscoverage['plugins/list.js'][311] = 0;
  _$jscoverage['plugins/list.js'][312] = 0;
  _$jscoverage['plugins/list.js'][313] = 0;
  _$jscoverage['plugins/list.js'][319] = 0;
  _$jscoverage['plugins/list.js'][320] = 0;
  _$jscoverage['plugins/list.js'][323] = 0;
  _$jscoverage['plugins/list.js'][324] = 0;
  _$jscoverage['plugins/list.js'][326] = 0;
  _$jscoverage['plugins/list.js'][327] = 0;
  _$jscoverage['plugins/list.js'][329] = 0;
  _$jscoverage['plugins/list.js'][330] = 0;
  _$jscoverage['plugins/list.js'][331] = 0;
  _$jscoverage['plugins/list.js'][333] = 0;
  _$jscoverage['plugins/list.js'][334] = 0;
  _$jscoverage['plugins/list.js'][335] = 0;
  _$jscoverage['plugins/list.js'][336] = 0;
  _$jscoverage['plugins/list.js'][340] = 0;
  _$jscoverage['plugins/list.js'][341] = 0;
  _$jscoverage['plugins/list.js'][342] = 0;
  _$jscoverage['plugins/list.js'][343] = 0;
  _$jscoverage['plugins/list.js'][346] = 0;
  _$jscoverage['plugins/list.js'][347] = 0;
  _$jscoverage['plugins/list.js'][351] = 0;
  _$jscoverage['plugins/list.js'][352] = 0;
  _$jscoverage['plugins/list.js'][353] = 0;
  _$jscoverage['plugins/list.js'][354] = 0;
  _$jscoverage['plugins/list.js'][355] = 0;
  _$jscoverage['plugins/list.js'][356] = 0;
  _$jscoverage['plugins/list.js'][357] = 0;
  _$jscoverage['plugins/list.js'][358] = 0;
  _$jscoverage['plugins/list.js'][360] = 0;
  _$jscoverage['plugins/list.js'][361] = 0;
  _$jscoverage['plugins/list.js'][363] = 0;
  _$jscoverage['plugins/list.js'][364] = 0;
  _$jscoverage['plugins/list.js'][365] = 0;
  _$jscoverage['plugins/list.js'][366] = 0;
  _$jscoverage['plugins/list.js'][367] = 0;
  _$jscoverage['plugins/list.js'][368] = 0;
  _$jscoverage['plugins/list.js'][372] = 0;
  _$jscoverage['plugins/list.js'][373] = 0;
  _$jscoverage['plugins/list.js'][374] = 0;
  _$jscoverage['plugins/list.js'][375] = 0;
  _$jscoverage['plugins/list.js'][377] = 0;
  _$jscoverage['plugins/list.js'][379] = 0;
  _$jscoverage['plugins/list.js'][380] = 0;
  _$jscoverage['plugins/list.js'][384] = 0;
  _$jscoverage['plugins/list.js'][386] = 0;
  _$jscoverage['plugins/list.js'][389] = 0;
  _$jscoverage['plugins/list.js'][391] = 0;
  _$jscoverage['plugins/list.js'][392] = 0;
  _$jscoverage['plugins/list.js'][393] = 0;
  _$jscoverage['plugins/list.js'][396] = 0;
  _$jscoverage['plugins/list.js'][399] = 0;
  _$jscoverage['plugins/list.js'][400] = 0;
  _$jscoverage['plugins/list.js'][401] = 0;
  _$jscoverage['plugins/list.js'][402] = 0;
  _$jscoverage['plugins/list.js'][403] = 0;
  _$jscoverage['plugins/list.js'][404] = 0;
  _$jscoverage['plugins/list.js'][407] = 0;
  _$jscoverage['plugins/list.js'][408] = 0;
  _$jscoverage['plugins/list.js'][410] = 0;
  _$jscoverage['plugins/list.js'][411] = 0;
  _$jscoverage['plugins/list.js'][412] = 0;
  _$jscoverage['plugins/list.js'][414] = 0;
  _$jscoverage['plugins/list.js'][415] = 0;
  _$jscoverage['plugins/list.js'][417] = 0;
  _$jscoverage['plugins/list.js'][418] = 0;
  _$jscoverage['plugins/list.js'][419] = 0;
  _$jscoverage['plugins/list.js'][423] = 0;
  _$jscoverage['plugins/list.js'][424] = 0;
  _$jscoverage['plugins/list.js'][425] = 0;
  _$jscoverage['plugins/list.js'][427] = 0;
  _$jscoverage['plugins/list.js'][428] = 0;
  _$jscoverage['plugins/list.js'][431] = 0;
  _$jscoverage['plugins/list.js'][432] = 0;
  _$jscoverage['plugins/list.js'][433] = 0;
  _$jscoverage['plugins/list.js'][434] = 0;
  _$jscoverage['plugins/list.js'][436] = 0;
  _$jscoverage['plugins/list.js'][437] = 0;
  _$jscoverage['plugins/list.js'][438] = 0;
  _$jscoverage['plugins/list.js'][442] = 0;
  _$jscoverage['plugins/list.js'][443] = 0;
  _$jscoverage['plugins/list.js'][444] = 0;
  _$jscoverage['plugins/list.js'][445] = 0;
  _$jscoverage['plugins/list.js'][446] = 0;
  _$jscoverage['plugins/list.js'][448] = 0;
  _$jscoverage['plugins/list.js'][449] = 0;
  _$jscoverage['plugins/list.js'][450] = 0;
  _$jscoverage['plugins/list.js'][451] = 0;
  _$jscoverage['plugins/list.js'][453] = 0;
  _$jscoverage['plugins/list.js'][454] = 0;
  _$jscoverage['plugins/list.js'][456] = 0;
  _$jscoverage['plugins/list.js'][458] = 0;
  _$jscoverage['plugins/list.js'][460] = 0;
  _$jscoverage['plugins/list.js'][461] = 0;
  _$jscoverage['plugins/list.js'][462] = 0;
  _$jscoverage['plugins/list.js'][463] = 0;
  _$jscoverage['plugins/list.js'][465] = 0;
  _$jscoverage['plugins/list.js'][466] = 0;
  _$jscoverage['plugins/list.js'][467] = 0;
  _$jscoverage['plugins/list.js'][468] = 0;
  _$jscoverage['plugins/list.js'][469] = 0;
  _$jscoverage['plugins/list.js'][470] = 0;
  _$jscoverage['plugins/list.js'][471] = 0;
  _$jscoverage['plugins/list.js'][472] = 0;
  _$jscoverage['plugins/list.js'][475] = 0;
  _$jscoverage['plugins/list.js'][477] = 0;
  _$jscoverage['plugins/list.js'][480] = 0;
  _$jscoverage['plugins/list.js'][483] = 0;
  _$jscoverage['plugins/list.js'][485] = 0;
  _$jscoverage['plugins/list.js'][486] = 0;
  _$jscoverage['plugins/list.js'][487] = 0;
  _$jscoverage['plugins/list.js'][488] = 0;
  _$jscoverage['plugins/list.js'][489] = 0;
  _$jscoverage['plugins/list.js'][490] = 0;
  _$jscoverage['plugins/list.js'][491] = 0;
  _$jscoverage['plugins/list.js'][493] = 0;
  _$jscoverage['plugins/list.js'][494] = 0;
  _$jscoverage['plugins/list.js'][495] = 0;
  _$jscoverage['plugins/list.js'][497] = 0;
  _$jscoverage['plugins/list.js'][498] = 0;
  _$jscoverage['plugins/list.js'][499] = 0;
  _$jscoverage['plugins/list.js'][500] = 0;
  _$jscoverage['plugins/list.js'][501] = 0;
  _$jscoverage['plugins/list.js'][504] = 0;
  _$jscoverage['plugins/list.js'][506] = 0;
  _$jscoverage['plugins/list.js'][510] = 0;
  _$jscoverage['plugins/list.js'][512] = 0;
  _$jscoverage['plugins/list.js'][513] = 0;
  _$jscoverage['plugins/list.js'][514] = 0;
  _$jscoverage['plugins/list.js'][516] = 0;
  _$jscoverage['plugins/list.js'][520] = 0;
  _$jscoverage['plugins/list.js'][521] = 0;
  _$jscoverage['plugins/list.js'][525] = 0;
  _$jscoverage['plugins/list.js'][528] = 0;
  _$jscoverage['plugins/list.js'][529] = 0;
  _$jscoverage['plugins/list.js'][530] = 0;
  _$jscoverage['plugins/list.js'][532] = 0;
  _$jscoverage['plugins/list.js'][533] = 0;
  _$jscoverage['plugins/list.js'][534] = 0;
  _$jscoverage['plugins/list.js'][535] = 0;
  _$jscoverage['plugins/list.js'][540] = 0;
  _$jscoverage['plugins/list.js'][542] = 0;
  _$jscoverage['plugins/list.js'][543] = 0;
  _$jscoverage['plugins/list.js'][544] = 0;
  _$jscoverage['plugins/list.js'][545] = 0;
  _$jscoverage['plugins/list.js'][546] = 0;
  _$jscoverage['plugins/list.js'][547] = 0;
  _$jscoverage['plugins/list.js'][548] = 0;
  _$jscoverage['plugins/list.js'][551] = 0;
  _$jscoverage['plugins/list.js'][552] = 0;
  _$jscoverage['plugins/list.js'][553] = 0;
  _$jscoverage['plugins/list.js'][557] = 0;
  _$jscoverage['plugins/list.js'][559] = 0;
  _$jscoverage['plugins/list.js'][560] = 0;
  _$jscoverage['plugins/list.js'][561] = 0;
  _$jscoverage['plugins/list.js'][562] = 0;
  _$jscoverage['plugins/list.js'][563] = 0;
  _$jscoverage['plugins/list.js'][565] = 0;
  _$jscoverage['plugins/list.js'][567] = 0;
  _$jscoverage['plugins/list.js'][570] = 0;
  _$jscoverage['plugins/list.js'][574] = 0;
  _$jscoverage['plugins/list.js'][575] = 0;
  _$jscoverage['plugins/list.js'][576] = 0;
  _$jscoverage['plugins/list.js'][578] = 0;
  _$jscoverage['plugins/list.js'][579] = 0;
  _$jscoverage['plugins/list.js'][581] = 0;
  _$jscoverage['plugins/list.js'][583] = 0;
  _$jscoverage['plugins/list.js'][584] = 0;
  _$jscoverage['plugins/list.js'][587] = 0;
  _$jscoverage['plugins/list.js'][589] = 0;
  _$jscoverage['plugins/list.js'][590] = 0;
  _$jscoverage['plugins/list.js'][592] = 0;
  _$jscoverage['plugins/list.js'][593] = 0;
  _$jscoverage['plugins/list.js'][595] = 0;
  _$jscoverage['plugins/list.js'][596] = 0;
  _$jscoverage['plugins/list.js'][598] = 0;
  _$jscoverage['plugins/list.js'][599] = 0;
  _$jscoverage['plugins/list.js'][600] = 0;
  _$jscoverage['plugins/list.js'][602] = 0;
  _$jscoverage['plugins/list.js'][603] = 0;
  _$jscoverage['plugins/list.js'][604] = 0;
  _$jscoverage['plugins/list.js'][607] = 0;
  _$jscoverage['plugins/list.js'][608] = 0;
  _$jscoverage['plugins/list.js'][609] = 0;
  _$jscoverage['plugins/list.js'][610] = 0;
  _$jscoverage['plugins/list.js'][611] = 0;
  _$jscoverage['plugins/list.js'][612] = 0;
  _$jscoverage['plugins/list.js'][617] = 0;
  _$jscoverage['plugins/list.js'][625] = 0;
  _$jscoverage['plugins/list.js'][627] = 0;
  _$jscoverage['plugins/list.js'][628] = 0;
  _$jscoverage['plugins/list.js'][629] = 0;
  _$jscoverage['plugins/list.js'][630] = 0;
  _$jscoverage['plugins/list.js'][632] = 0;
  _$jscoverage['plugins/list.js'][633] = 0;
  _$jscoverage['plugins/list.js'][634] = 0;
  _$jscoverage['plugins/list.js'][635] = 0;
  _$jscoverage['plugins/list.js'][636] = 0;
  _$jscoverage['plugins/list.js'][637] = 0;
  _$jscoverage['plugins/list.js'][638] = 0;
  _$jscoverage['plugins/list.js'][639] = 0;
  _$jscoverage['plugins/list.js'][640] = 0;
  _$jscoverage['plugins/list.js'][641] = 0;
  _$jscoverage['plugins/list.js'][642] = 0;
  _$jscoverage['plugins/list.js'][645] = 0;
  _$jscoverage['plugins/list.js'][646] = 0;
  _$jscoverage['plugins/list.js'][647] = 0;
  _$jscoverage['plugins/list.js'][650] = 0;
  _$jscoverage['plugins/list.js'][651] = 0;
  _$jscoverage['plugins/list.js'][653] = 0;
  _$jscoverage['plugins/list.js'][654] = 0;
  _$jscoverage['plugins/list.js'][655] = 0;
  _$jscoverage['plugins/list.js'][656] = 0;
  _$jscoverage['plugins/list.js'][658] = 0;
  _$jscoverage['plugins/list.js'][659] = 0;
  _$jscoverage['plugins/list.js'][661] = 0;
  _$jscoverage['plugins/list.js'][662] = 0;
  _$jscoverage['plugins/list.js'][666] = 0;
  _$jscoverage['plugins/list.js'][667] = 0;
  _$jscoverage['plugins/list.js'][669] = 0;
  _$jscoverage['plugins/list.js'][670] = 0;
  _$jscoverage['plugins/list.js'][672] = 0;
  _$jscoverage['plugins/list.js'][673] = 0;
  _$jscoverage['plugins/list.js'][675] = 0;
  _$jscoverage['plugins/list.js'][679] = 0;
  _$jscoverage['plugins/list.js'][680] = 0;
  _$jscoverage['plugins/list.js'][681] = 0;
  _$jscoverage['plugins/list.js'][682] = 0;
  _$jscoverage['plugins/list.js'][685] = 0;
  _$jscoverage['plugins/list.js'][686] = 0;
  _$jscoverage['plugins/list.js'][687] = 0;
  _$jscoverage['plugins/list.js'][691] = 0;
  _$jscoverage['plugins/list.js'][692] = 0;
  _$jscoverage['plugins/list.js'][693] = 0;
  _$jscoverage['plugins/list.js'][694] = 0;
  _$jscoverage['plugins/list.js'][695] = 0;
  _$jscoverage['plugins/list.js'][700] = 0;
  _$jscoverage['plugins/list.js'][701] = 0;
  _$jscoverage['plugins/list.js'][702] = 0;
  _$jscoverage['plugins/list.js'][703] = 0;
  _$jscoverage['plugins/list.js'][704] = 0;
  _$jscoverage['plugins/list.js'][705] = 0;
  _$jscoverage['plugins/list.js'][706] = 0;
  _$jscoverage['plugins/list.js'][710] = 0;
  _$jscoverage['plugins/list.js'][711] = 0;
  _$jscoverage['plugins/list.js'][714] = 0;
  _$jscoverage['plugins/list.js'][715] = 0;
  _$jscoverage['plugins/list.js'][716] = 0;
  _$jscoverage['plugins/list.js'][720] = 0;
  _$jscoverage['plugins/list.js'][721] = 0;
  _$jscoverage['plugins/list.js'][722] = 0;
  _$jscoverage['plugins/list.js'][723] = 0;
  _$jscoverage['plugins/list.js'][724] = 0;
  _$jscoverage['plugins/list.js'][737] = 0;
  _$jscoverage['plugins/list.js'][738] = 0;
  _$jscoverage['plugins/list.js'][739] = 0;
  _$jscoverage['plugins/list.js'][740] = 0;
  _$jscoverage['plugins/list.js'][741] = 0;
  _$jscoverage['plugins/list.js'][742] = 0;
  _$jscoverage['plugins/list.js'][747] = 0;
  _$jscoverage['plugins/list.js'][749] = 0;
  _$jscoverage['plugins/list.js'][752] = 0;
  _$jscoverage['plugins/list.js'][753] = 0;
  _$jscoverage['plugins/list.js'][754] = 0;
  _$jscoverage['plugins/list.js'][755] = 0;
  _$jscoverage['plugins/list.js'][756] = 0;
  _$jscoverage['plugins/list.js'][757] = 0;
  _$jscoverage['plugins/list.js'][759] = 0;
  _$jscoverage['plugins/list.js'][760] = 0;
  _$jscoverage['plugins/list.js'][766] = 0;
  _$jscoverage['plugins/list.js'][767] = 0;
  _$jscoverage['plugins/list.js'][769] = 0;
  _$jscoverage['plugins/list.js'][770] = 0;
  _$jscoverage['plugins/list.js'][771] = 0;
  _$jscoverage['plugins/list.js'][772] = 0;
  _$jscoverage['plugins/list.js'][773] = 0;
  _$jscoverage['plugins/list.js'][776] = 0;
  _$jscoverage['plugins/list.js'][777] = 0;
  _$jscoverage['plugins/list.js'][778] = 0;
  _$jscoverage['plugins/list.js'][779] = 0;
  _$jscoverage['plugins/list.js'][780] = 0;
  _$jscoverage['plugins/list.js'][781] = 0;
  _$jscoverage['plugins/list.js'][782] = 0;
  _$jscoverage['plugins/list.js'][783] = 0;
  _$jscoverage['plugins/list.js'][784] = 0;
  _$jscoverage['plugins/list.js'][785] = 0;
  _$jscoverage['plugins/list.js'][786] = 0;
  _$jscoverage['plugins/list.js'][787] = 0;
  _$jscoverage['plugins/list.js'][790] = 0;
  _$jscoverage['plugins/list.js'][791] = 0;
  _$jscoverage['plugins/list.js'][792] = 0;
  _$jscoverage['plugins/list.js'][793] = 0;
  _$jscoverage['plugins/list.js'][794] = 0;
  _$jscoverage['plugins/list.js'][795] = 0;
  _$jscoverage['plugins/list.js'][798] = 0;
  _$jscoverage['plugins/list.js'][799] = 0;
  _$jscoverage['plugins/list.js'][800] = 0;
  _$jscoverage['plugins/list.js'][801] = 0;
  _$jscoverage['plugins/list.js'][802] = 0;
  _$jscoverage['plugins/list.js'][803] = 0;
  _$jscoverage['plugins/list.js'][805] = 0;
  _$jscoverage['plugins/list.js'][808] = 0;
  _$jscoverage['plugins/list.js'][809] = 0;
  _$jscoverage['plugins/list.js'][810] = 0;
  _$jscoverage['plugins/list.js'][811] = 0;
  _$jscoverage['plugins/list.js'][812] = 0;
  _$jscoverage['plugins/list.js'][813] = 0;
  _$jscoverage['plugins/list.js'][814] = 0;
  _$jscoverage['plugins/list.js'][815] = 0;
  _$jscoverage['plugins/list.js'][816] = 0;
  _$jscoverage['plugins/list.js'][817] = 0;
  _$jscoverage['plugins/list.js'][818] = 0;
  _$jscoverage['plugins/list.js'][819] = 0;
  _$jscoverage['plugins/list.js'][823] = 0;
  _$jscoverage['plugins/list.js'][825] = 0;
  _$jscoverage['plugins/list.js'][827] = 0;
  _$jscoverage['plugins/list.js'][829] = 0;
  _$jscoverage['plugins/list.js'][830] = 0;
  _$jscoverage['plugins/list.js'][833] = 0;
  _$jscoverage['plugins/list.js'][834] = 0;
  _$jscoverage['plugins/list.js'][835] = 0;
  _$jscoverage['plugins/list.js'][840] = 0;
  _$jscoverage['plugins/list.js'][841] = 0;
  _$jscoverage['plugins/list.js'][842] = 0;
  _$jscoverage['plugins/list.js'][843] = 0;
  _$jscoverage['plugins/list.js'][845] = 0;
  _$jscoverage['plugins/list.js'][846] = 0;
  _$jscoverage['plugins/list.js'][848] = 0;
  _$jscoverage['plugins/list.js'][921] = 0;
  _$jscoverage['plugins/list.js'][925] = 0;
  _$jscoverage['plugins/list.js'][926] = 0;
  _$jscoverage['plugins/list.js'][928] = 0;
  _$jscoverage['plugins/list.js'][931] = 0;
  _$jscoverage['plugins/list.js'][937] = 0;
  _$jscoverage['plugins/list.js'][938] = 0;
  _$jscoverage['plugins/list.js'][946] = 0;
  _$jscoverage['plugins/list.js'][947] = 0;
  _$jscoverage['plugins/list.js'][948] = 0;
  _$jscoverage['plugins/list.js'][949] = 0;
  _$jscoverage['plugins/list.js'][951] = 0;
  _$jscoverage['plugins/list.js'][953] = 0;
  _$jscoverage['plugins/list.js'][954] = 0;
  _$jscoverage['plugins/list.js'][955] = 0;
  _$jscoverage['plugins/list.js'][956] = 0;
  _$jscoverage['plugins/list.js'][957] = 0;
  _$jscoverage['plugins/list.js'][958] = 0;
  _$jscoverage['plugins/list.js'][959] = 0;
  _$jscoverage['plugins/list.js'][960] = 0;
  _$jscoverage['plugins/list.js'][962] = 0;
  _$jscoverage['plugins/list.js'][964] = 0;
  _$jscoverage['plugins/list.js'][966] = 0;
  _$jscoverage['plugins/list.js'][967] = 0;
  _$jscoverage['plugins/list.js'][968] = 0;
  _$jscoverage['plugins/list.js'][969] = 0;
  _$jscoverage['plugins/list.js'][970] = 0;
  _$jscoverage['plugins/list.js'][971] = 0;
  _$jscoverage['plugins/list.js'][973] = 0;
  _$jscoverage['plugins/list.js'][975] = 0;
  _$jscoverage['plugins/list.js'][976] = 0;
  _$jscoverage['plugins/list.js'][977] = 0;
  _$jscoverage['plugins/list.js'][978] = 0;
  _$jscoverage['plugins/list.js'][980] = 0;
  _$jscoverage['plugins/list.js'][981] = 0;
  _$jscoverage['plugins/list.js'][983] = 0;
  _$jscoverage['plugins/list.js'][984] = 0;
  _$jscoverage['plugins/list.js'][985] = 0;
  _$jscoverage['plugins/list.js'][986] = 0;
  _$jscoverage['plugins/list.js'][987] = 0;
  _$jscoverage['plugins/list.js'][988] = 0;
  _$jscoverage['plugins/list.js'][989] = 0;
  _$jscoverage['plugins/list.js'][994] = 0;
  _$jscoverage['plugins/list.js'][995] = 0;
  _$jscoverage['plugins/list.js'][1000] = 0;
  _$jscoverage['plugins/list.js'][1002] = 0;
  _$jscoverage['plugins/list.js'][1003] = 0;
  _$jscoverage['plugins/list.js'][1004] = 0;
  _$jscoverage['plugins/list.js'][1005] = 0;
  _$jscoverage['plugins/list.js'][1008] = 0;
  _$jscoverage['plugins/list.js'][1009] = 0;
  _$jscoverage['plugins/list.js'][1010] = 0;
  _$jscoverage['plugins/list.js'][1011] = 0;
  _$jscoverage['plugins/list.js'][1014] = 0;
  _$jscoverage['plugins/list.js'][1015] = 0;
  _$jscoverage['plugins/list.js'][1016] = 0;
  _$jscoverage['plugins/list.js'][1017] = 0;
  _$jscoverage['plugins/list.js'][1018] = 0;
  _$jscoverage['plugins/list.js'][1020] = 0;
  _$jscoverage['plugins/list.js'][1022] = 0;
  _$jscoverage['plugins/list.js'][1023] = 0;
  _$jscoverage['plugins/list.js'][1024] = 0;
  _$jscoverage['plugins/list.js'][1026] = 0;
  _$jscoverage['plugins/list.js'][1028] = 0;
  _$jscoverage['plugins/list.js'][1029] = 0;
  _$jscoverage['plugins/list.js'][1030] = 0;
  _$jscoverage['plugins/list.js'][1031] = 0;
  _$jscoverage['plugins/list.js'][1033] = 0;
  _$jscoverage['plugins/list.js'][1035] = 0;
  _$jscoverage['plugins/list.js'][1038] = 0;
  _$jscoverage['plugins/list.js'][1040] = 0;
  _$jscoverage['plugins/list.js'][1041] = 0;
  _$jscoverage['plugins/list.js'][1042] = 0;
  _$jscoverage['plugins/list.js'][1043] = 0;
  _$jscoverage['plugins/list.js'][1045] = 0;
  _$jscoverage['plugins/list.js'][1047] = 0;
  _$jscoverage['plugins/list.js'][1050] = 0;
  _$jscoverage['plugins/list.js'][1052] = 0;
  _$jscoverage['plugins/list.js'][1053] = 0;
  _$jscoverage['plugins/list.js'][1054] = 0;
  _$jscoverage['plugins/list.js'][1055] = 0;
  _$jscoverage['plugins/list.js'][1056] = 0;
  _$jscoverage['plugins/list.js'][1058] = 0;
  _$jscoverage['plugins/list.js'][1059] = 0;
  _$jscoverage['plugins/list.js'][1060] = 0;
  _$jscoverage['plugins/list.js'][1061] = 0;
  _$jscoverage['plugins/list.js'][1062] = 0;
  _$jscoverage['plugins/list.js'][1064] = 0;
  _$jscoverage['plugins/list.js'][1066] = 0;
  _$jscoverage['plugins/list.js'][1067] = 0;
  _$jscoverage['plugins/list.js'][1068] = 0;
  _$jscoverage['plugins/list.js'][1069] = 0;
  _$jscoverage['plugins/list.js'][1071] = 0;
  _$jscoverage['plugins/list.js'][1073] = 0;
  _$jscoverage['plugins/list.js'][1075] = 0;
  _$jscoverage['plugins/list.js'][1077] = 0;
  _$jscoverage['plugins/list.js'][1080] = 0;
  _$jscoverage['plugins/list.js'][1082] = 0;
  _$jscoverage['plugins/list.js'][1083] = 0;
  _$jscoverage['plugins/list.js'][1084] = 0;
  _$jscoverage['plugins/list.js'][1085] = 0;
  _$jscoverage['plugins/list.js'][1086] = 0;
  _$jscoverage['plugins/list.js'][1087] = 0;
  _$jscoverage['plugins/list.js'][1090] = 0;
  _$jscoverage['plugins/list.js'][1096] = 0;
  _$jscoverage['plugins/list.js'][1097] = 0;
  _$jscoverage['plugins/list.js'][1099] = 0;
  _$jscoverage['plugins/list.js'][1100] = 0;
  _$jscoverage['plugins/list.js'][1102] = 0;
  _$jscoverage['plugins/list.js'][1103] = 0;
  _$jscoverage['plugins/list.js'][1106] = 0;
  _$jscoverage['plugins/list.js'][1108] = 0;
  _$jscoverage['plugins/list.js'][1114] = 0;
  _$jscoverage['plugins/list.js'][1116] = 0;
  _$jscoverage['plugins/list.js'][1117] = 0;
  _$jscoverage['plugins/list.js'][1118] = 0;
  _$jscoverage['plugins/list.js'][1119] = 0;
  _$jscoverage['plugins/list.js'][1121] = 0;
  _$jscoverage['plugins/list.js'][1122] = 0;
  _$jscoverage['plugins/list.js'][1123] = 0;
  _$jscoverage['plugins/list.js'][1124] = 0;
  _$jscoverage['plugins/list.js'][1127] = 0;
  _$jscoverage['plugins/list.js'][1128] = 0;
  _$jscoverage['plugins/list.js'][1130] = 0;
  _$jscoverage['plugins/list.js'][1131] = 0;
  _$jscoverage['plugins/list.js'][1132] = 0;
  _$jscoverage['plugins/list.js'][1133] = 0;
  _$jscoverage['plugins/list.js'][1137] = 0;
  _$jscoverage['plugins/list.js'][1138] = 0;
  _$jscoverage['plugins/list.js'][1139] = 0;
  _$jscoverage['plugins/list.js'][1140] = 0;
  _$jscoverage['plugins/list.js'][1141] = 0;
  _$jscoverage['plugins/list.js'][1144] = 0;
  _$jscoverage['plugins/list.js'][1146] = 0;
  _$jscoverage['plugins/list.js'][1148] = 0;
  _$jscoverage['plugins/list.js'][1150] = 0;
  _$jscoverage['plugins/list.js'][1151] = 0;
  _$jscoverage['plugins/list.js'][1152] = 0;
  _$jscoverage['plugins/list.js'][1153] = 0;
  _$jscoverage['plugins/list.js'][1154] = 0;
  _$jscoverage['plugins/list.js'][1156] = 0;
  _$jscoverage['plugins/list.js'][1158] = 0;
  _$jscoverage['plugins/list.js'][1160] = 0;
  _$jscoverage['plugins/list.js'][1163] = 0;
  _$jscoverage['plugins/list.js'][1164] = 0;
  _$jscoverage['plugins/list.js'][1165] = 0;
  _$jscoverage['plugins/list.js'][1166] = 0;
  _$jscoverage['plugins/list.js'][1167] = 0;
  _$jscoverage['plugins/list.js'][1169] = 0;
  _$jscoverage['plugins/list.js'][1171] = 0;
  _$jscoverage['plugins/list.js'][1172] = 0;
  _$jscoverage['plugins/list.js'][1173] = 0;
  _$jscoverage['plugins/list.js'][1176] = 0;
  _$jscoverage['plugins/list.js'][1180] = 0;
  _$jscoverage['plugins/list.js'][1181] = 0;
  _$jscoverage['plugins/list.js'][1182] = 0;
  _$jscoverage['plugins/list.js'][1183] = 0;
  _$jscoverage['plugins/list.js'][1184] = 0;
  _$jscoverage['plugins/list.js'][1186] = 0;
  _$jscoverage['plugins/list.js'][1187] = 0;
  _$jscoverage['plugins/list.js'][1188] = 0;
  _$jscoverage['plugins/list.js'][1190] = 0;
  _$jscoverage['plugins/list.js'][1194] = 0;
  _$jscoverage['plugins/list.js'][1195] = 0;
  _$jscoverage['plugins/list.js'][1197] = 0;
  _$jscoverage['plugins/list.js'][1198] = 0;
  _$jscoverage['plugins/list.js'][1199] = 0;
  _$jscoverage['plugins/list.js'][1200] = 0;
  _$jscoverage['plugins/list.js'][1202] = 0;
  _$jscoverage['plugins/list.js'][1203] = 0;
  _$jscoverage['plugins/list.js'][1204] = 0;
  _$jscoverage['plugins/list.js'][1205] = 0;
  _$jscoverage['plugins/list.js'][1207] = 0;
}
_$jscoverage['plugins/list.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * &#26377;&#24207;&#21015;&#34920;,&#26080;&#24207;&#21015;&#34920;&#25554;&#20214;</span>","<span class=\"c\"> * @file</span>","<span class=\"c\"> * @since 1.2.6.1</span>","<span class=\"c\"> */</span>","","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'list'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","        notExchange <span class=\"k\">=</span> <span class=\"k\">{</span>","            <span class=\"s\">'TD'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","            <span class=\"s\">'PRE'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","            <span class=\"s\">'BLOCKQUOTE'</span><span class=\"k\">:</span><span class=\"s\">1</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> customStyle <span class=\"k\">=</span> <span class=\"k\">{</span>","        <span class=\"s\">'cn'</span> <span class=\"k\">:</span> <span class=\"s\">'cn-1-'</span><span class=\"k\">,</span>","        <span class=\"s\">'cn1'</span> <span class=\"k\">:</span> <span class=\"s\">'cn-2-'</span><span class=\"k\">,</span>","        <span class=\"s\">'cn2'</span> <span class=\"k\">:</span> <span class=\"s\">'cn-3-'</span><span class=\"k\">,</span>","        <span class=\"s\">'num'</span><span class=\"k\">:</span>  <span class=\"s\">'num-1-'</span><span class=\"k\">,</span>","        <span class=\"s\">'num1'</span> <span class=\"k\">:</span> <span class=\"s\">'num-2-'</span><span class=\"k\">,</span>","        <span class=\"s\">'num2'</span> <span class=\"k\">:</span> <span class=\"s\">'num-3-'</span><span class=\"k\">,</span>","        <span class=\"s\">'dash'</span>  <span class=\"k\">:</span> <span class=\"s\">'dash'</span><span class=\"k\">,</span>","        <span class=\"s\">'dot'</span><span class=\"k\">:</span><span class=\"s\">'dot'</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    me<span class=\"k\">.</span>setOpt<span class=\"k\">(</span> <span class=\"k\">{</span>","        <span class=\"s\">'insertorderedlist'</span><span class=\"k\">:</span><span class=\"k\">{</span>","            <span class=\"s\">'num'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'num1'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'num2'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'cn'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'cn1'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'cn2'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'decimal'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'lower-alpha'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'lower-roman'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'upper-alpha'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'upper-roman'</span><span class=\"k\">:</span><span class=\"s\">''</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        <span class=\"s\">'insertunorderedlist'</span><span class=\"k\">:</span><span class=\"k\">{</span>","            <span class=\"s\">'circle'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'disc'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'square'</span><span class=\"k\">:</span><span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'dash'</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">,</span>","            <span class=\"s\">'dot'</span><span class=\"k\">:</span><span class=\"s\">''</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        listDefaultPaddingLeft <span class=\"k\">:</span> <span class=\"s\">'30'</span><span class=\"k\">,</span>","        listiconpath <span class=\"k\">:</span> <span class=\"s\">'http://bs.baidu.com/listicon/'</span><span class=\"k\">,</span>","        maxListLevel <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"c\">//-1&#19981;&#38480;&#21046;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">function</span> listToArray<span class=\"k\">(</span>list<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> arr <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> list<span class=\"k\">)</span><span class=\"k\">{</span>","            arr<span class=\"k\">.</span>push<span class=\"k\">(</span>p<span class=\"k\">)</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> arr<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">var</span> listStyle <span class=\"k\">=</span> <span class=\"k\">{</span>","        <span class=\"s\">'OL'</span><span class=\"k\">:</span>listToArray<span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>insertorderedlist<span class=\"k\">),</span>","        <span class=\"s\">'UL'</span><span class=\"k\">:</span>listToArray<span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>insertunorderedlist<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> liiconpath <span class=\"k\">=</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>listiconpath<span class=\"k\">;</span>","","    <span class=\"c\">//&#26681;&#25454;&#29992;&#25143;&#37197;&#32622;&#65292;&#35843;&#25972;customStyle</span>","    <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> s <span class=\"k\">in</span> customStyle<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(!</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>insertorderedlist<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>s<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>insertunorderedlist<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>s<span class=\"k\">))</span><span class=\"k\">{</span>","            <span class=\"k\">delete</span> customStyle<span class=\"k\">[</span>s<span class=\"k\">];</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    me<span class=\"k\">.</span>ready<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> customCss <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> customStyle<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>p <span class=\"k\">==</span> <span class=\"s\">'dash'</span> <span class=\"k\">||</span> p <span class=\"k\">==</span> <span class=\"s\">'dot'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span> <span class=\"k\">+</span> customStyle<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">'{background-image:url('</span> <span class=\"k\">+</span> liiconpath <span class=\"k\">+</span>customStyle<span class=\"k\">[</span>p<span class=\"k\">]+</span><span class=\"s\">'.gif)}'</span><span class=\"k\">);</span>","                customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'ul.custom_'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'{list-style:none;}ul.custom_'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">' li{background-position:0 3px;background-repeat:no-repeat}'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>i<span class=\"k\">&lt;</span><span class=\"s\">99</span><span class=\"k\">;</span>i<span class=\"k\">++)</span><span class=\"k\">{</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span> <span class=\"k\">+</span> customStyle<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">'{background-image:url('</span> <span class=\"k\">+</span> liiconpath <span class=\"k\">+</span> <span class=\"s\">'list-'</span><span class=\"k\">+</span>customStyle<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">+</span> i <span class=\"k\">+</span> <span class=\"s\">'.gif)}'</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","                customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'ol.custom_'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'{list-style:none;}ol.custom_'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">' li{background-position:0 3px;background-repeat:no-repeat}'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">switch</span><span class=\"k\">(</span>p<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">case</span> <span class=\"s\">'cn'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-1{padding-left:25px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-2{padding-left:40px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-3{padding-left:55px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'cn1'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-1{padding-left:30px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-2{padding-left:40px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-3{padding-left:55px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'cn2'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-1{padding-left:40px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-2{padding-left:55px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-3{padding-left:68px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'num'</span><span class=\"k\">:</span>","                <span class=\"k\">case</span> <span class=\"s\">'num1'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-1{padding-left:25px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'num2'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-1{padding-left:35px}'</span><span class=\"k\">);</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft-2{padding-left:40px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'dash'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft{padding-left:35px}'</span><span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'dot'</span><span class=\"k\">:</span>","                    customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'li.list-'</span><span class=\"k\">+</span>p<span class=\"k\">+</span><span class=\"s\">'-paddingleft{padding-left:20px}'</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'.list-paddingleft-1{padding-left:0}'</span><span class=\"k\">);</span>","        customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'.list-paddingleft-2{padding-left:'</span><span class=\"k\">+</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>listDefaultPaddingLeft<span class=\"k\">+</span><span class=\"s\">'px}'</span><span class=\"k\">);</span>","        customCss<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">'.list-paddingleft-3{padding-left:'</span><span class=\"k\">+</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>listDefaultPaddingLeft<span class=\"k\">*</span><span class=\"s\">2</span><span class=\"k\">+</span><span class=\"s\">'px}'</span><span class=\"k\">);</span>","        <span class=\"c\">//&#22914;&#26524;&#19981;&#32473;&#23485;&#24230;&#20250;&#22312;&#33258;&#23450;&#24212;&#26679;&#24335;&#37324;&#20986;&#29616;&#28378;&#21160;&#26465;</span>","        utils<span class=\"k\">.</span>cssRule<span class=\"k\">(</span><span class=\"s\">'list'</span><span class=\"k\">,</span> <span class=\"s\">'ol,ul{margin:0;pading:0;'</span><span class=\"k\">+(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">''</span> <span class=\"k\">:</span> <span class=\"s\">'width:95%'</span><span class=\"k\">)+</span><span class=\"s\">'}li{clear:both;}'</span><span class=\"k\">+</span>customCss<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">'</span><span class=\"t\">\\n</span><span class=\"s\">'</span><span class=\"k\">),</span> me<span class=\"k\">.</span>document<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"c\">//&#21333;&#29420;&#22788;&#29702;&#21098;&#20999;&#30340;&#38382;&#39064;</span>","    me<span class=\"k\">.</span>ready<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        domUtils<span class=\"k\">.</span>on<span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">,</span><span class=\"s\">'cut'</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>li<span class=\"k\">;</span>","                <span class=\"c\">//trace:3416</span>","                <span class=\"k\">if</span><span class=\"k\">(!</span>rng<span class=\"k\">.</span>collapsed<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span><span class=\"s\">'li'</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">))</span><span class=\"k\">{</span>","                        <span class=\"k\">if</span><span class=\"k\">(!</span>li<span class=\"k\">.</span>nextSibling <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>li<span class=\"k\">))</span><span class=\"k\">{</span>","                            <span class=\"k\">var</span> pn <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>node<span class=\"k\">;</span>","                            <span class=\"k\">if</span><span class=\"k\">(</span>node <span class=\"k\">=</span> pn<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span><span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>pn<span class=\"k\">);</span>","                                rng<span class=\"k\">.</span>setStartAtLast<span class=\"k\">(</span>node<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                                rng<span class=\"k\">.</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                            <span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>node <span class=\"k\">=</span> pn<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span><span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>pn<span class=\"k\">);</span>","                                rng<span class=\"k\">.</span>setStartAtFirst<span class=\"k\">(</span>node<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                                rng<span class=\"k\">.</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                                <span class=\"k\">var</span> tmpNode <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span>tmpNode<span class=\"k\">);</span>","                                pn<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span>pn<span class=\"k\">);</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>pn<span class=\"k\">);</span>","                                rng<span class=\"k\">.</span>setStart<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                                rng<span class=\"k\">.</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span><span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">function</span> getStyle<span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> cls <span class=\"k\">=</span> node<span class=\"k\">.</span>className<span class=\"k\">;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">/custom_/</span><span class=\"k\">))</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> cls<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/custom_(\\w+)/</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">]</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> domUtils<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">)</span>","","    <span class=\"k\">}</span>","","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'beforepaste'</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>type<span class=\"k\">,</span>html<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","            rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>li<span class=\"k\">;</span>","        <span class=\"k\">var</span> root <span class=\"k\">=</span> UE<span class=\"k\">.</span>htmlparser<span class=\"k\">(</span>html<span class=\"k\">.</span>html<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span><span class=\"s\">'li'</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">))</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> list <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>tagName <span class=\"k\">=</span> list<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'OL'</span> <span class=\"k\">?</span> <span class=\"s\">'ul'</span><span class=\"k\">:</span><span class=\"s\">'ol'</span><span class=\"k\">;</span>","            utils<span class=\"k\">.</span>each<span class=\"k\">(</span>root<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span>tagName<span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>n<span class=\"k\">)</span><span class=\"k\">{</span>","                n<span class=\"k\">.</span>tagName <span class=\"k\">=</span> list<span class=\"k\">.</span>tagName<span class=\"k\">;</span>","                n<span class=\"k\">.</span>setAttr<span class=\"k\">();</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>n<span class=\"k\">.</span>parentNode <span class=\"k\">===</span> root<span class=\"k\">)</span><span class=\"k\">{</span>","                    type <span class=\"k\">=</span> getStyle<span class=\"k\">(</span>list<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>list<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'OL'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">)</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    <span class=\"k\">var</span> className <span class=\"k\">=</span> n<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>className <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/custom_/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>className<span class=\"k\">))</span><span class=\"k\">{</span>","                        type <span class=\"k\">=</span> className<span class=\"k\">.</span>match<span class=\"k\">(</span><span class=\"s\">/custom_(\\w+)/</span><span class=\"k\">)[</span><span class=\"s\">1</span><span class=\"k\">]</span>","                    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                        type <span class=\"k\">=</span> n<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>getStyle<span class=\"k\">(</span><span class=\"s\">'list-style-type'</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">if</span><span class=\"k\">(!</span>type<span class=\"k\">)</span><span class=\"k\">{</span>","                        type <span class=\"k\">=</span> list<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'OL'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">var</span> index <span class=\"k\">=</span> utils<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">],</span> type<span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>n<span class=\"k\">.</span>parentNode <span class=\"k\">!==</span> root<span class=\"k\">)</span>","                    index <span class=\"k\">=</span> index <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">==</span> listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">].</span>length <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> index <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">var</span> currentStyle <span class=\"k\">=</span> listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">][</span>index<span class=\"k\">];</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>customStyle<span class=\"k\">[</span>currentStyle<span class=\"k\">])</span><span class=\"k\">{</span>","                    n<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">,</span> <span class=\"s\">'custom_'</span> <span class=\"k\">+</span> currentStyle<span class=\"k\">)</span>","","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    n<span class=\"k\">.</span>setStyle<span class=\"k\">(</span><span class=\"s\">'list-style-type'</span><span class=\"k\">,</span>currentStyle<span class=\"k\">)</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">)</span>","","        <span class=\"k\">}</span>","","        html<span class=\"k\">.</span>html <span class=\"k\">=</span> root<span class=\"k\">.</span>toHtml<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"c\">//&#36827;&#20837;&#32534;&#36753;&#22120;&#30340;li&#35201;&#22871;p&#26631;&#31614;</span>","    me<span class=\"k\">.</span>addInputRule<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>root<span class=\"k\">)</span><span class=\"k\">{</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>root<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> tmpP <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>ci<span class=\"k\">;</span>ci<span class=\"k\">=</span>li<span class=\"k\">.</span>children<span class=\"k\">[</span>i<span class=\"k\">];)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>ci<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'text'</span> <span class=\"k\">||</span> dtd<span class=\"k\">.</span>p<span class=\"k\">[</span>ci<span class=\"k\">.</span>tagName<span class=\"k\">])</span><span class=\"k\">{</span>","                    tmpP<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>ci<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>tmpP<span class=\"k\">.</span>firstChild<span class=\"k\">())</span><span class=\"k\">{</span>","                        li<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>tmpP<span class=\"k\">,</span>ci<span class=\"k\">);</span>","                        tmpP <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                        i <span class=\"k\">=</span> i <span class=\"k\">+</span> <span class=\"s\">2</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                        i<span class=\"k\">++;</span>","                    <span class=\"k\">}</span>","","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>tmpP<span class=\"k\">.</span>firstChild<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>tmpP<span class=\"k\">.</span>parentNode <span class=\"k\">||</span> <span class=\"k\">!</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">())</span><span class=\"k\">{</span>","                li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpP<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"c\">//trace:3357</span>","            <span class=\"c\">//p&#19981;&#33021;&#20026;&#31354;</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>tmpP<span class=\"k\">.</span>firstChild<span class=\"k\">())</span> <span class=\"k\">{</span>","                tmpP<span class=\"k\">.</span>innerHTML<span class=\"k\">(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'&amp;nbsp;'</span> <span class=\"k\">:</span> <span class=\"s\">'&lt;br/&gt;'</span><span class=\"k\">)</span>","            <span class=\"k\">}</span>","            <span class=\"c\">//&#21435;&#25481;&#26411;&#23614;&#30340;&#31354;&#30333;</span>","            <span class=\"k\">var</span> p <span class=\"k\">=</span> li<span class=\"k\">.</span>firstChild<span class=\"k\">();</span>","            <span class=\"k\">var</span> lastChild <span class=\"k\">=</span> p<span class=\"k\">.</span>lastChild<span class=\"k\">();</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>lastChild <span class=\"k\">&amp;&amp;</span> lastChild<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'text'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/^\\s*$/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>lastChild<span class=\"k\">.</span>data<span class=\"k\">))</span><span class=\"k\">{</span>","                p<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>lastChild<span class=\"k\">)</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> orderlisttype <span class=\"k\">=</span> <span class=\"k\">{</span>","                <span class=\"s\">'num1'</span><span class=\"k\">:</span><span class=\"s\">/^\\d+\\)/</span><span class=\"k\">,</span>","                <span class=\"s\">'decimal'</span><span class=\"k\">:</span><span class=\"s\">/^\\d+\\./</span><span class=\"k\">,</span>","                <span class=\"s\">'lower-alpha'</span><span class=\"k\">:</span><span class=\"s\">/^[a-z]+\\)/</span><span class=\"k\">,</span>","                <span class=\"s\">'upper-alpha'</span><span class=\"k\">:</span><span class=\"s\">/^[A-Z]+\\./</span><span class=\"k\">,</span>","                <span class=\"s\">'cn'</span><span class=\"k\">:</span><span class=\"s\">/^[\\u4E00\\u4E8C\\u4E09\\u56DB\\u516d\\u4e94\\u4e03\\u516b\\u4e5d]+[\\u3001]/</span><span class=\"k\">,</span>","                <span class=\"s\">'cn2'</span><span class=\"k\">:</span><span class=\"s\">/^\\([\\u4E00\\u4E8C\\u4E09\\u56DB\\u516d\\u4e94\\u4e03\\u516b\\u4e5d]+\\)/</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            unorderlisttype <span class=\"k\">=</span> <span class=\"k\">{</span>","                <span class=\"s\">'square'</span><span class=\"k\">:</span><span class=\"s\">'n'</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">function</span> checkListType<span class=\"k\">(</span>content<span class=\"k\">,</span>container<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> span <span class=\"k\">=</span> container<span class=\"k\">.</span>firstChild<span class=\"k\">();</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>span <span class=\"k\">&amp;&amp;</span>  span<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'element'</span> <span class=\"k\">&amp;&amp;</span> span<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'span'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/Wingdings|Symbol/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>span<span class=\"k\">.</span>getStyle<span class=\"k\">(</span><span class=\"s\">'font-family'</span><span class=\"k\">)))</span><span class=\"k\">{</span>","                <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> unorderlisttype<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>unorderlisttype<span class=\"k\">[</span>p<span class=\"k\">]</span> <span class=\"k\">==</span> span<span class=\"k\">.</span>data<span class=\"k\">)</span><span class=\"k\">{</span>","                        <span class=\"k\">return</span> p","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> <span class=\"s\">'disc'</span>","            <span class=\"k\">}</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> p <span class=\"k\">in</span> orderlisttype<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>orderlisttype<span class=\"k\">[</span>p<span class=\"k\">].</span>test<span class=\"k\">(</span>content<span class=\"k\">))</span><span class=\"k\">{</span>","                    <span class=\"k\">return</span> p<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>root<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"s\">'MsoListParagraph'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">return</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">//word&#31896;&#36148;&#36807;&#26469;&#30340;&#20250;&#24102;&#26377;margin&#35201;&#21435;&#25481;,&#20294;&#36825;&#26679;&#20063;&#21487;&#33021;&#20250;&#35823;&#21629;&#20013;&#19968;&#20123;&#22830;&#35270;</span>","            node<span class=\"k\">.</span>setStyle<span class=\"k\">(</span><span class=\"s\">'margin'</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">);</span>","            node<span class=\"k\">.</span>setStyle<span class=\"k\">(</span><span class=\"s\">'margin-left'</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">);</span>","            node<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">);</span>","","            <span class=\"k\">function</span> appendLi<span class=\"k\">(</span>list<span class=\"k\">,</span>p<span class=\"k\">,</span>type<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>list<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'ol'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>browser<span class=\"k\">.</span>ie<span class=\"k\">)</span><span class=\"k\">{</span>","                        <span class=\"k\">var</span> first <span class=\"k\">=</span> p<span class=\"k\">.</span>firstChild<span class=\"k\">();</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>first<span class=\"k\">.</span>type <span class=\"k\">==</span><span class=\"s\">'element'</span> <span class=\"k\">&amp;&amp;</span> first<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'span'</span> <span class=\"k\">&amp;&amp;</span> orderlisttype<span class=\"k\">[</span>type<span class=\"k\">].</span>test<span class=\"k\">(</span>first<span class=\"k\">.</span>innerText<span class=\"k\">()))</span><span class=\"k\">{</span>","                            p<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>first<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                        p<span class=\"k\">.</span>innerHTML<span class=\"k\">(</span>p<span class=\"k\">.</span>innerHTML<span class=\"k\">().</span>replace<span class=\"k\">(</span>orderlisttype<span class=\"k\">[</span>type<span class=\"k\">],</span><span class=\"s\">''</span><span class=\"k\">));</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    p<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>p<span class=\"k\">.</span>firstChild<span class=\"k\">())</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">var</span> li <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">);</span>","                li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> tmp <span class=\"k\">=</span> node<span class=\"k\">,</span>type<span class=\"k\">,</span>cacheNode <span class=\"k\">=</span> node<span class=\"k\">;</span>","","            <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>tagName <span class=\"k\">!=</span> <span class=\"s\">'li'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>type <span class=\"k\">=</span> checkListType<span class=\"k\">(</span>node<span class=\"k\">.</span>innerText<span class=\"k\">(),</span>node<span class=\"k\">)))</span><span class=\"k\">{</span>","","                <span class=\"k\">var</span> list <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>insertorderedlist<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span>type<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">'ol'</span> <span class=\"k\">:</span> <span class=\"s\">'ul'</span><span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>customStyle<span class=\"k\">[</span>type<span class=\"k\">])</span><span class=\"k\">{</span>","                    list<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">,</span><span class=\"s\">'custom_'</span><span class=\"k\">+</span>type<span class=\"k\">)</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    list<span class=\"k\">.</span>setStyle<span class=\"k\">(</span><span class=\"s\">'list-style-type'</span><span class=\"k\">,</span>type<span class=\"k\">)</span>","                <span class=\"k\">}</span>","                <span class=\"k\">while</span><span class=\"k\">(</span>node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>tagName <span class=\"k\">!=</span> <span class=\"s\">'li'</span> <span class=\"k\">&amp;&amp;</span> checkListType<span class=\"k\">(</span>node<span class=\"k\">.</span>innerText<span class=\"k\">(),</span>node<span class=\"k\">))</span><span class=\"k\">{</span>","                    tmp <span class=\"k\">=</span> node<span class=\"k\">.</span>nextSibling<span class=\"k\">();</span>","                    <span class=\"k\">if</span><span class=\"k\">(!</span>tmp<span class=\"k\">)</span><span class=\"k\">{</span>","                        node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>list<span class=\"k\">,</span>node<span class=\"k\">)</span>","                    <span class=\"k\">}</span>","                    appendLi<span class=\"k\">(</span>list<span class=\"k\">,</span>node<span class=\"k\">,</span>type<span class=\"k\">);</span>","                    node <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span><span class=\"k\">(!</span>list<span class=\"k\">.</span>parentNode <span class=\"k\">&amp;&amp;</span> node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">)</span><span class=\"k\">{</span>","                    node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>list<span class=\"k\">,</span>node<span class=\"k\">)</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> span <span class=\"k\">=</span> cacheNode<span class=\"k\">.</span>firstChild<span class=\"k\">();</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>span <span class=\"k\">&amp;&amp;</span> span<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'element'</span> <span class=\"k\">&amp;&amp;</span> span<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'span'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/^\\s*(&amp;nbsp;)+\\s*$/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>span<span class=\"k\">.</span>innerText<span class=\"k\">()))</span><span class=\"k\">{</span>","                span<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>span<span class=\"k\">)</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">//&#35843;&#25972;&#32034;&#24341;&#26631;&#31614;</span>","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        adjustListStyle<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"k\">function</span> adjustListStyle<span class=\"k\">(</span>doc<span class=\"k\">,</span>ignore<span class=\"k\">)</span><span class=\"k\">{</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>doc<span class=\"k\">,</span><span class=\"s\">'ol ul'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","","            <span class=\"k\">if</span><span class=\"k\">(!</span>domUtils<span class=\"k\">.</span>inDoc<span class=\"k\">(</span>node<span class=\"k\">,</span>doc<span class=\"k\">))</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> parent <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>parent<span class=\"k\">.</span>tagName <span class=\"k\">==</span> node<span class=\"k\">.</span>tagName<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> nodeStyleType <span class=\"k\">=</span> getStyle<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'OL'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">),</span>","                    parentStyleType <span class=\"k\">=</span> getStyle<span class=\"k\">(</span>parent<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>parent<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'OL'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>nodeStyleType <span class=\"k\">==</span> parentStyleType<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">var</span> styleIndex <span class=\"k\">=</span> utils<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>listStyle<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">],</span> nodeStyleType<span class=\"k\">);</span>","                    styleIndex <span class=\"k\">=</span> styleIndex <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">==</span> listStyle<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">].</span>length <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> styleIndex <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    setListStyle<span class=\"k\">(</span>node<span class=\"k\">,</span>listStyle<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">][</span>styleIndex<span class=\"k\">])</span>","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>type <span class=\"k\">=</span> <span class=\"s\">2</span><span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">/custom_/</span><span class=\"k\">))</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(!(</span><span class=\"s\">/[ou]l/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>parent<span class=\"k\">.</span>tagName<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>parent<span class=\"k\">,</span><span class=\"s\">/custom_/</span><span class=\"k\">)))</span><span class=\"k\">{</span>","                    type <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">/[ou]l/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>parent<span class=\"k\">.</span>tagName<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>parent<span class=\"k\">,</span><span class=\"s\">/custom_/</span><span class=\"k\">))</span><span class=\"k\">{</span>","                    type <span class=\"k\">=</span> <span class=\"s\">3</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">var</span> style <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">);</span>","            style <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"s\">'list-style-type:'</span> <span class=\"k\">+</span> style<span class=\"k\">);</span>","            node<span class=\"k\">.</span>className <span class=\"k\">=</span> utils<span class=\"k\">.</span>trim<span class=\"k\">(</span>node<span class=\"k\">.</span>className<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/list-paddingleft-\\w+/</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">))</span> <span class=\"k\">+</span> <span class=\"s\">' list-paddingleft-'</span> <span class=\"k\">+</span> type<span class=\"k\">;</span>","            utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">'li'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","                li<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(!</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>li<span class=\"k\">.</span>parentNode <span class=\"k\">!==</span> node<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                index<span class=\"k\">++;</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>hasClass<span class=\"k\">(</span>node<span class=\"k\">,</span><span class=\"s\">/custom_/</span><span class=\"k\">)</span> <span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">var</span> paddingLeft <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">,</span>currentStyle <span class=\"k\">=</span> getStyle<span class=\"k\">(</span>node<span class=\"k\">);</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'OL'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>currentStyle<span class=\"k\">)</span><span class=\"k\">{</span>","                            <span class=\"k\">switch</span><span class=\"k\">(</span>currentStyle<span class=\"k\">)</span><span class=\"k\">{</span>","                                <span class=\"k\">case</span> <span class=\"s\">'cn'</span> <span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">'cn1'</span><span class=\"k\">:</span>","                                <span class=\"k\">case</span> <span class=\"s\">'cn2'</span><span class=\"k\">:</span>","                                    <span class=\"k\">if</span><span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">10</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>index <span class=\"k\">%</span> <span class=\"s\">10</span> <span class=\"k\">==</span> <span class=\"s\">0</span> <span class=\"k\">||</span> index <span class=\"k\">&gt;</span> <span class=\"s\">10</span> <span class=\"k\">&amp;&amp;</span> index <span class=\"k\">&lt;</span> <span class=\"s\">20</span><span class=\"k\">))</span><span class=\"k\">{</span>","                                        paddingLeft <span class=\"k\">=</span> <span class=\"s\">2</span>","                                    <span class=\"k\">}</span><span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">20</span><span class=\"k\">)</span><span class=\"k\">{</span>","                                        paddingLeft <span class=\"k\">=</span> <span class=\"s\">3</span>","                                    <span class=\"k\">}</span>","                                    <span class=\"k\">break</span><span class=\"k\">;</span>","                                <span class=\"k\">case</span> <span class=\"s\">'num2'</span> <span class=\"k\">:</span>","                                    <span class=\"k\">if</span><span class=\"k\">(</span>index <span class=\"k\">&gt;</span> <span class=\"s\">9</span><span class=\"k\">)</span><span class=\"k\">{</span>","                                        paddingLeft <span class=\"k\">=</span> <span class=\"s\">2</span>","                                    <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        li<span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">'list-'</span><span class=\"k\">+</span>customStyle<span class=\"k\">[</span>currentStyle<span class=\"k\">]+</span> index <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> <span class=\"s\">'list-'</span><span class=\"k\">+</span>currentStyle<span class=\"k\">+</span><span class=\"s\">'-paddingleft-'</span> <span class=\"k\">+</span> paddingLeft<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                        li<span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">'list-'</span><span class=\"k\">+</span>customStyle<span class=\"k\">[</span>currentStyle<span class=\"k\">]</span>  <span class=\"k\">+</span> <span class=\"s\">' '</span> <span class=\"k\">+</span> <span class=\"s\">'list-'</span><span class=\"k\">+</span>currentStyle<span class=\"k\">+</span><span class=\"s\">'-paddingleft'</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    li<span class=\"k\">.</span>className <span class=\"k\">=</span> li<span class=\"k\">.</span>className<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/list-[\\w\\-]+/gi</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">var</span> className <span class=\"k\">=</span> li<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>className <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>className<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\s/g</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">))</span><span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>removeAttributes<span class=\"k\">(</span>li<span class=\"k\">,</span><span class=\"s\">'class'</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">!</span>ignore <span class=\"k\">&amp;&amp;</span> adjustList<span class=\"k\">(</span>node<span class=\"k\">,</span>node<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">(),</span>getStyle<span class=\"k\">(</span>node<span class=\"k\">)||</span>domUtils<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">),</span><span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span>","    <span class=\"k\">function</span> adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span> tag<span class=\"k\">,</span> style<span class=\"k\">,</span>ignoreEmpty<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nextList <span class=\"k\">=</span> list<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>nextList <span class=\"k\">&amp;&amp;</span> nextList<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> nextList<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> tag <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>getStyle<span class=\"k\">(</span>nextList<span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>nextList<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>tag <span class=\"k\">==</span> <span class=\"s\">'ol'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">))</span> <span class=\"k\">==</span> style<span class=\"k\">)</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>moveChild<span class=\"k\">(</span>nextList<span class=\"k\">,</span> list<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>nextList<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length <span class=\"k\">==</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>nextList<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>nextList <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isFillChar<span class=\"k\">(</span>nextList<span class=\"k\">))</span><span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>nextList<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> preList <span class=\"k\">=</span> list<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>preList <span class=\"k\">&amp;&amp;</span> preList<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> preList<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> tag <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>getStyle<span class=\"k\">(</span>preList<span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>getStyle<span class=\"k\">(</span>preList<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>tag <span class=\"k\">==</span> <span class=\"s\">'ol'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">))</span> <span class=\"k\">==</span> style<span class=\"k\">)</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>moveChild<span class=\"k\">(</span>list<span class=\"k\">,</span> preList<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>preList <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isFillChar<span class=\"k\">(</span>preList<span class=\"k\">))</span><span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>preList<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">!</span>ignoreEmpty <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>list<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>list<span class=\"k\">);</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>getStyle<span class=\"k\">(</span>list<span class=\"k\">))</span><span class=\"k\">{</span>","            adjustListStyle<span class=\"k\">(</span>list<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">)</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> setListStyle<span class=\"k\">(</span>list<span class=\"k\">,</span>style<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>customStyle<span class=\"k\">[</span>style<span class=\"k\">])</span><span class=\"k\">{</span>","            list<span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">'custom_'</span> <span class=\"k\">+</span> style<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">try</span><span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>setStyle<span class=\"k\">(</span>list<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">,</span> style<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span><span class=\"k\">{}</span>","    <span class=\"k\">}</span>","    <span class=\"k\">function</span> clearEmptySibling<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tmpNode <span class=\"k\">=</span> node<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>tmpNode <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>tmpNode<span class=\"k\">))</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        tmpNode <span class=\"k\">=</span> node<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>tmpNode <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>tmpNode<span class=\"k\">))</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'keydown'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">function</span> preventAndSave<span class=\"k\">()</span> <span class=\"k\">{</span>","            evt<span class=\"k\">.</span>preventDefault <span class=\"k\">?</span> evt<span class=\"k\">.</span>preventDefault<span class=\"k\">()</span> <span class=\"k\">:</span> <span class=\"k\">(</span>evt<span class=\"k\">.</span>returnValue <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">);</span>","            me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","            me<span class=\"k\">.</span>undoManger <span class=\"k\">&amp;&amp;</span> me<span class=\"k\">.</span>undoManger<span class=\"k\">.</span>save<span class=\"k\">();</span>","        <span class=\"k\">}</span>","        <span class=\"k\">function</span> findList<span class=\"k\">(</span>node<span class=\"k\">,</span>filterFn<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">while</span><span class=\"k\">(</span>node <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBody<span class=\"k\">(</span>node<span class=\"k\">))</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>filterFn<span class=\"k\">(</span>node<span class=\"k\">))</span><span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">null</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/[ou]l/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>node<span class=\"k\">.</span>tagName<span class=\"k\">))</span><span class=\"k\">{</span>","                    <span class=\"k\">return</span> node<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                node <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> keyCode <span class=\"k\">=</span> evt<span class=\"k\">.</span>keyCode <span class=\"k\">||</span> evt<span class=\"k\">.</span>which<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">13</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>evt<span class=\"k\">.</span>shiftKey<span class=\"k\">)</span> <span class=\"k\">{</span><span class=\"c\">//&#22238;&#36710;</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                parent <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParent<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">),</span>","                li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span><span class=\"s\">'li'</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>parent <span class=\"k\">&amp;&amp;</span> parent<span class=\"k\">.</span>tagName <span class=\"k\">!=</span> <span class=\"s\">'PRE'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> html <span class=\"k\">=</span> parent<span class=\"k\">.</span>innerHTML<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"k\">new</span> RegExp<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>fillChar<span class=\"k\">,</span> <span class=\"s\">'g'</span><span class=\"k\">),</span><span class=\"s\">''</span><span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(</span><span class=\"s\">/^\\s*1\\s*\\.[^\\d]/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>html<span class=\"k\">))</span><span class=\"k\">{</span>","                    parent<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> html<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/^\\s*1\\s*\\./</span><span class=\"k\">,</span><span class=\"s\">''</span><span class=\"k\">);</span>","                    rng<span class=\"k\">.</span>setStartAtLast<span class=\"k\">(</span>parent<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">).</span>select<span class=\"k\">();</span>","                    me<span class=\"k\">.</span>__hasEnterExecCommand <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                    me<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'insertorderedlist'</span><span class=\"k\">);</span>","                    me<span class=\"k\">.</span>__hasEnterExecCommand <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                start <span class=\"k\">=</span> findList<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'TABLE'</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">),</span>","                end <span class=\"k\">=</span> range<span class=\"k\">.</span>collapsed <span class=\"k\">?</span> start <span class=\"k\">:</span> findList<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'TABLE'</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">===</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span> <span class=\"k\">{</span>","                    start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    end <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">===</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                        range<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","                        li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>li<span class=\"k\">))</span> <span class=\"k\">{</span>","","                            pre <span class=\"k\">=</span> li<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","                            next <span class=\"k\">=</span> li<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                            p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","","                            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> p<span class=\"k\">);</span>","                            parentList <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>pre <span class=\"k\">&amp;&amp;</span> next<span class=\"k\">)</span> <span class=\"k\">{</span>","                                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>next<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">).</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(!</span>pre <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>next <span class=\"k\">||</span> <span class=\"k\">!</span>pre<span class=\"k\">)</span> <span class=\"k\">{</span>","","                                    parentList<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span> parentList<span class=\"k\">);</span>","","","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    li<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span> parentList<span class=\"k\">.</span>nextSibling<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","                                <span class=\"k\">if</span> <span class=\"k\">(!</span>parentList<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>parentList<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>p<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">();</span>","","","                            <span class=\"k\">}</span>","                            preventAndSave<span class=\"k\">();</span>","                            <span class=\"k\">return</span><span class=\"k\">;</span>","","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> tmpRange <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">(),</span>","                            bk <span class=\"k\">=</span> tmpRange<span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">).</span>createBookmark<span class=\"k\">();</span>","","                        range<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","                        tmpRange<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">);</span>","                        <span class=\"k\">var</span> li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>tmpRange<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","                        clearEmptySibling<span class=\"k\">(</span>li<span class=\"k\">);</span>","                        tmpRange<span class=\"k\">.</span>select<span class=\"k\">();</span>","                        preventAndSave<span class=\"k\">();</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","","                li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>li<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>li<span class=\"k\">))</span> <span class=\"k\">{</span>","                        bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">();</span>","                        <span class=\"k\">var</span> parentList <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">!==</span> parentList<span class=\"k\">.</span>lastChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>breakParent<span class=\"k\">(</span>li<span class=\"k\">,</span> parentList<span class=\"k\">);</span>","                            clearEmptySibling<span class=\"k\">(</span>li<span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                            parentList<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>li<span class=\"k\">,</span> parentList<span class=\"k\">.</span>nextSibling<span class=\"k\">);</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>parentList<span class=\"k\">))</span> <span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>parentList<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"c\">//&#23884;&#22871;&#19981;&#22788;&#29702;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>dtd<span class=\"k\">.</span>$list<span class=\"k\">[</span>li<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>tagName<span class=\"k\">])</span> <span class=\"k\">{</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(!</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">))</span> <span class=\"k\">{</span>","                                p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                li<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span> li<span class=\"k\">);</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","","","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> first <span class=\"k\">=</span> li<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>first <span class=\"k\">||</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>first<span class=\"k\">))</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","","                            <span class=\"k\">!</span>li<span class=\"k\">.</span>firstChild <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> p<span class=\"k\">);</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","","                                p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                            first <span class=\"k\">=</span> p<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">var</span> span <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'span'</span><span class=\"k\">);</span>","","                        range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>span<span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>breakParent<span class=\"k\">(</span>span<span class=\"k\">,</span> li<span class=\"k\">);</span>","","                        <span class=\"k\">var</span> nextLi <span class=\"k\">=</span> span<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                        first <span class=\"k\">=</span> nextLi<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>first<span class=\"k\">)</span> <span class=\"k\">{</span>","                            p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","","                            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> p<span class=\"k\">);</span>","                            nextLi<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                            first <span class=\"k\">=</span> p<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>first<span class=\"k\">))</span> <span class=\"k\">{</span>","                            first<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> first<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>first<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">).</span>shrinkBoundary<span class=\"k\">().</span>select<span class=\"k\">();</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>span<span class=\"k\">);</span>","                        <span class=\"k\">var</span> pre <span class=\"k\">=</span> nextLi<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>pre <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>pre<span class=\"k\">))</span> <span class=\"k\">{</span>","                            pre<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">'&lt;p&gt;&lt;/p&gt;'</span><span class=\"k\">;</span>","                            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> pre<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                    <span class=\"k\">}</span>","<span class=\"c\">//                        }</span>","                    preventAndSave<span class=\"k\">();</span>","                <span class=\"k\">}</span>","","","            <span class=\"k\">}</span>","","","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">8</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">//&#20462;&#20013;ie&#20013;li&#19979;&#30340;&#38382;&#39064;</span>","            range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>range<span class=\"k\">.</span>collapsed <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isStartInblock<span class=\"k\">(</span>range<span class=\"k\">))</span> <span class=\"k\">{</span>","                tmpRange <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">().</span>trimBoundary<span class=\"k\">();</span>","                li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"c\">//&#35201;&#22312;li&#30340;&#26368;&#24038;&#36793;&#65292;&#25165;&#33021;&#22788;&#29702;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isStartInblock<span class=\"k\">(</span>tmpRange<span class=\"k\">))</span> <span class=\"k\">{</span>","                    start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'p'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">!==</span> li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> parentList <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>start<span class=\"k\">,[</span><span class=\"s\">'ol'</span><span class=\"k\">,</span><span class=\"s\">'ul'</span><span class=\"k\">]);</span>","                        domUtils<span class=\"k\">.</span>breakParent<span class=\"k\">(</span>start<span class=\"k\">,</span>parentList<span class=\"k\">);</span>","                        clearEmptySibling<span class=\"k\">(</span>start<span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                        range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>start<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>pre <span class=\"k\">=</span> li<span class=\"k\">.</span>previousSibling<span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">46</span> <span class=\"k\">&amp;&amp;</span> li<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"c\">//&#26377;&#21487;&#33021;&#19978;&#36793;&#30340;&#20804;&#24351;&#33410;&#28857;&#26159;&#20010;2&#32423;&#33756;&#21333;&#65292;&#35201;&#36861;&#21152;&#21040;2&#32423;&#33756;&#21333;&#30340;&#26368;&#21518;&#30340;li</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>dtd<span class=\"k\">.</span>$list<span class=\"k\">[</span>pre<span class=\"k\">.</span>tagName<span class=\"k\">])</span> <span class=\"k\">{</span>","                            pre <span class=\"k\">=</span> pre<span class=\"k\">.</span>lastChild<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        me<span class=\"k\">.</span>undoManger <span class=\"k\">&amp;&amp;</span> me<span class=\"k\">.</span>undoManger<span class=\"k\">.</span>save<span class=\"k\">();</span>","                        first <span class=\"k\">=</span> li<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>first<span class=\"k\">))</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>first<span class=\"k\">))</span> <span class=\"k\">{</span>","<span class=\"c\">//                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);</span>","                                pre<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>first<span class=\"k\">);</span>","                                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>first<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                                <span class=\"c\">//first&#19981;&#26159;&#21807;&#19968;&#30340;&#33410;&#28857;</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    pre<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                                span <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'span'</span><span class=\"k\">);</span>","                                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>span<span class=\"k\">);</span>","                                <span class=\"c\">//&#21028;&#26029;pre&#26159;&#21542;&#26159;&#31354;&#30340;&#33410;&#28857;,&#22914;&#26524;&#26159;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&#31867;&#22411;&#30340;&#31354;&#33410;&#28857;&#65292;&#24178;&#25481;p&#26631;&#31614;&#38450;&#27490;&#23427;&#21344;&#20301;</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>pre<span class=\"k\">))</span> <span class=\"k\">{</span>","                                    pre<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                                <span class=\"k\">}</span>","                                domUtils<span class=\"k\">.</span>moveChild<span class=\"k\">(</span>li<span class=\"k\">,</span> pre<span class=\"k\">);</span>","                                range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>span<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">).</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>span<span class=\"k\">);</span>","","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>li<span class=\"k\">))</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                pre<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>p<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">();</span>","<span class=\"c\">//                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                range<span class=\"k\">.</span>setEnd<span class=\"k\">(</span>pre<span class=\"k\">,</span> pre<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length<span class=\"k\">).</span>collapse<span class=\"k\">().</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    pre<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","","                    <span class=\"k\">}</span>","                    <span class=\"c\">//trace:980</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>li <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>li<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> parentList <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                        <span class=\"k\">var</span> bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">();</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>parentList<span class=\"k\">.</span>parentNode<span class=\"k\">,</span><span class=\"s\">'ol ul'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                            parentList<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>li<span class=\"k\">,</span>parentList<span class=\"k\">);</span>","                            <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>parentList<span class=\"k\">))</span><span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>parentList<span class=\"k\">)</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","","                            <span class=\"k\">while</span><span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","                                parentList<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">,</span>parentList<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>li<span class=\"k\">);</span>","                            <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>parentList<span class=\"k\">))</span><span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>parentList<span class=\"k\">)</span>","                            <span class=\"k\">}</span>","","                        <span class=\"k\">}</span>","                        range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","","                    <span class=\"k\">}</span>","","","                <span class=\"k\">}</span>","","","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'keyup'</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>type<span class=\"k\">,</span> evt<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> keyCode <span class=\"k\">=</span> evt<span class=\"k\">.</span>keyCode <span class=\"k\">||</span> evt<span class=\"k\">.</span>which<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">8</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>list<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>list <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,[</span><span class=\"s\">'ol'</span><span class=\"k\">,</span> <span class=\"s\">'ul'</span><span class=\"k\">],</span><span class=\"k\">true</span><span class=\"k\">))</span><span class=\"k\">{</span>","                adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span>list<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">(),</span>getStyle<span class=\"k\">(</span>list<span class=\"k\">)||</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>list<span class=\"k\">,</span><span class=\"s\">'list-style-type'</span><span class=\"k\">),</span><span class=\"k\">true</span><span class=\"k\">)</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"c\">//&#22788;&#29702;tab&#38190;</span>","    me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'tabkeydown'</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","","        <span class=\"k\">var</span> range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","","        <span class=\"c\">//&#25511;&#21046;&#32423;&#25968;</span>","        <span class=\"k\">function</span> checkLevel<span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>maxListLevel <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> level <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>levelNum <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">while</span><span class=\"k\">(</span><span class=\"s\">/[ou]l/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>level<span class=\"k\">.</span>tagName<span class=\"k\">))</span><span class=\"k\">{</span>","                    levelNum<span class=\"k\">++;</span>","                    level <span class=\"k\">=</span> level<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>levelNum <span class=\"k\">&gt;=</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>maxListLevel<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"c\">//&#21482;&#20197;&#24320;&#22987;&#20026;&#20934;</span>","        <span class=\"c\">//todo &#21518;&#32493;&#25913;&#36827;</span>","        <span class=\"k\">var</span> li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'li'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","","            <span class=\"k\">var</span> bk<span class=\"k\">;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>checkLevel<span class=\"k\">(</span>li<span class=\"k\">))</span>","                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">var</span> parentLi <span class=\"k\">=</span> li<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>","                    list <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span>parentLi<span class=\"k\">.</span>tagName<span class=\"k\">),</span>","                    index <span class=\"k\">=</span> utils<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">],</span> getStyle<span class=\"k\">(</span>parentLi<span class=\"k\">)||</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>parentLi<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">));</span>","                index <span class=\"k\">=</span> index <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">==</span> listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">].</span>length <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> index <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">var</span> currentStyle <span class=\"k\">=</span> listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">][</span>index<span class=\"k\">];</span>","                setListStyle<span class=\"k\">(</span>list<span class=\"k\">,</span>currentStyle<span class=\"k\">);</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isStartInblock<span class=\"k\">(</span>range<span class=\"k\">))</span><span class=\"k\">{</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                    bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">();</span>","                    parentLi<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>list<span class=\"k\">,</span> li<span class=\"k\">);</span>","                    list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">);</span>","                    adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span>list<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">(),</span>currentStyle<span class=\"k\">);</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                    range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">();</span>","                <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>closeList<span class=\"k\">,</span>parents <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParents<span class=\"k\">(</span>li<span class=\"k\">),</span>ci<span class=\"k\">;</span>ci<span class=\"k\">=</span>parents<span class=\"k\">[</span>i<span class=\"k\">++];)</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>ci<span class=\"k\">,</span><span class=\"s\">'ol ul'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                        closeList <span class=\"k\">=</span> ci<span class=\"k\">;</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">var</span> current <span class=\"k\">=</span> li<span class=\"k\">;</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>bk<span class=\"k\">.</span>end<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">while</span><span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!(</span>domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>current<span class=\"k\">,</span> bk<span class=\"k\">.</span>end<span class=\"k\">)</span> <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_FOLLOWING<span class=\"k\">))</span><span class=\"k\">{</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>checkLevel<span class=\"k\">(</span>current<span class=\"k\">))</span><span class=\"k\">{</span>","                            current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> node <span class=\"k\">!==</span> closeList<span class=\"k\">}</span><span class=\"k\">);</span>","                            <span class=\"k\">continue</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">var</span> parentLi <span class=\"k\">=</span> current<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>","                            list <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span>parentLi<span class=\"k\">.</span>tagName<span class=\"k\">),</span>","                            index <span class=\"k\">=</span> utils<span class=\"k\">.</span>indexOf<span class=\"k\">(</span>listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">],</span> getStyle<span class=\"k\">(</span>parentLi<span class=\"k\">)||</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>parentLi<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">));</span>","                        <span class=\"k\">var</span> currentIndex <span class=\"k\">=</span> index <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">==</span> listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">].</span>length <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> index <span class=\"k\">+</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                        <span class=\"k\">var</span> currentStyle <span class=\"k\">=</span> listStyle<span class=\"k\">[</span>list<span class=\"k\">.</span>tagName<span class=\"k\">][</span>currentIndex<span class=\"k\">];</span>","                        setListStyle<span class=\"k\">(</span>list<span class=\"k\">,</span>currentStyle<span class=\"k\">);</span>","                        parentLi<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>list<span class=\"k\">,</span> current<span class=\"k\">);</span>","                        <span class=\"k\">while</span><span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!(</span>domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>current<span class=\"k\">,</span> bk<span class=\"k\">.</span>end<span class=\"k\">)</span> <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_FOLLOWING<span class=\"k\">))</span><span class=\"k\">{</span>","                            li <span class=\"k\">=</span> current<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                            list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>current<span class=\"k\">);</span>","                            <span class=\"k\">if</span><span class=\"k\">(!</span>li <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>li<span class=\"k\">,</span><span class=\"s\">'ol ul'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                                <span class=\"k\">if</span><span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","                                    <span class=\"k\">while</span><span class=\"k\">(</span>li <span class=\"k\">=</span> li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","                                        <span class=\"k\">if</span><span class=\"k\">(</span>li<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'LI'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                                            <span class=\"k\">break</span><span class=\"k\">;</span>","                                        <span class=\"k\">}</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                                    li <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span><span class=\"k\">false</span><span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> node <span class=\"k\">!==</span> closeList<span class=\"k\">}</span><span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                <span class=\"k\">break</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                            current <span class=\"k\">=</span> li<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span>list<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">(),</span>currentStyle<span class=\"k\">);</span>","                        current <span class=\"k\">=</span> li<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">function</span> getLi<span class=\"k\">(</span>start<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">while</span><span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBody<span class=\"k\">(</span>start<span class=\"k\">))</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>start<span class=\"k\">.</span>nodeName <span class=\"k\">==</span> <span class=\"s\">'TABLE'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>start<span class=\"k\">.</span>nodeName <span class=\"k\">==</span> <span class=\"s\">'LI'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">return</span> start","            <span class=\"k\">}</span>","            start <span class=\"k\">=</span> start<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#36816;&#34892;&#26377;&#24207;&#21015;&#34920;&#21629;&#20196;</span>","<span class=\"c\">     * @command insertorderedlist</span>","<span class=\"c\">     * @method execCommand</span>","<span class=\"c\">     * @param { String } command &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @param { String } style &#25554;&#20837;&#30340;&#26377;&#24207;&#21015;&#34920;&#31867;&#22411;&#65292;&#20540;&#20026;&#65306;decimal,lower-alpha,lower-roman,upper-alpha,upper-roman</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.execCommand( 'insertunorderedlist','decimal');</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#26597;&#35810;&#24403;&#21069;&#36873;&#21306;&#20869;&#23481;&#26159;&#21542;&#26377;&#24207;&#21015;&#34920;</span>","<span class=\"c\">     * @command insertorderedlist</span>","<span class=\"c\">     * @method queryCommandState</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { int } &#22914;&#26524;&#24403;&#21069;&#36873;&#21306;&#26159;&#26377;&#24207;&#21015;&#34920;&#36820;&#22238;1&#65292;&#21542;&#21017;&#36820;&#22238;0</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.queryCommandState( 'insertorderedlist' );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#26597;&#35810;&#24403;&#21069;&#36873;&#21306;&#20869;&#23481;&#26159;&#21542;&#26377;&#24207;&#21015;&#34920;</span>","<span class=\"c\">     * @command insertorderedlist</span>","<span class=\"c\">     * @method queryCommandValue</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { String } &#36820;&#22238;&#24403;&#21069;&#26377;&#24207;&#21015;&#34920;&#30340;&#31867;&#22411;&#65292;&#20540;&#20026;null&#25110;decimal,lower-alpha,lower-roman,upper-alpha,upper-roman</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.queryCommandValue( 'insertorderedlist' );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#36816;&#34892;&#26080;&#24207;&#21015;&#34920;&#21629;&#20196;</span>","<span class=\"c\">     * @command insertunorderedlist</span>","<span class=\"c\">     * @method execCommand</span>","<span class=\"c\">     * @param { String } command &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @param { String } style &#25554;&#20837;&#30340;&#26080;&#24207;&#21015;&#34920;&#31867;&#22411;&#65292;&#20540;&#20026;&#65306;circle,disc,square</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.execCommand( 'insertunorderedlist','circle');</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#26597;&#35810;&#24403;&#21069;&#26159;&#21542;&#26377;word&#25991;&#26723;&#31896;&#36148;&#36827;&#26469;&#30340;&#22270;&#29255;</span>","<span class=\"c\">     * @command insertunorderedlist</span>","<span class=\"c\">     * @method insertunorderedlist</span>","<span class=\"c\">     * @param { String } command &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { int } &#22914;&#26524;&#24403;&#21069;&#36873;&#21306;&#26159;&#26080;&#24207;&#21015;&#34920;&#36820;&#22238;1&#65292;&#21542;&#21017;&#36820;&#22238;0</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.queryCommandState( 'insertunorderedlist' );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#26597;&#35810;&#24403;&#21069;&#36873;&#21306;&#20869;&#23481;&#26159;&#21542;&#26377;&#24207;&#21015;&#34920;</span>","<span class=\"c\">     * @command insertunorderedlist</span>","<span class=\"c\">     * @method queryCommandValue</span>","<span class=\"c\">     * @param { String } command &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { String } &#36820;&#22238;&#24403;&#21069;&#26080;&#24207;&#21015;&#34920;&#30340;&#31867;&#22411;&#65292;&#20540;&#20026;null&#25110;circle,disc,square</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.queryCommandValue( 'insertunorderedlist' );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    me<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'insertorderedlist'</span><span class=\"k\">]</span> <span class=\"k\">=</span>","    me<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'insertunorderedlist'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","            execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>command<span class=\"k\">,</span> style<span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>style<span class=\"k\">)</span> <span class=\"k\">{</span>","                    style <span class=\"k\">=</span> command<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'insertorderedlist'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                    range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                    filterFn <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span>   node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> node<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">!=</span> <span class=\"s\">'br'</span> <span class=\"k\">:</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span>node<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","                    tag <span class=\"k\">=</span> command<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'insertorderedlist'</span> <span class=\"k\">?</span> <span class=\"s\">'ol'</span> <span class=\"k\">:</span> <span class=\"s\">'ul'</span><span class=\"k\">,</span>","                    frag <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span>","                <span class=\"c\">//&#21435;&#25481;&#26159;&#22240;&#20026;&#20250;&#20986;&#29616;&#36873;&#21040;&#26411;&#23614;&#65292;&#23548;&#33268;adjustmentBoundary&#32553;&#21040;ol/ul&#30340;&#20301;&#32622;</span>","                <span class=\"c\">//range.shrinkBoundary();//.adjustmentBoundary();</span>","                range<span class=\"k\">.</span>adjustmentBoundary<span class=\"k\">().</span>shrinkBoundary<span class=\"k\">();</span>","                <span class=\"k\">var</span> bko <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">),</span>","                    start <span class=\"k\">=</span> getLi<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>bko<span class=\"k\">.</span>start<span class=\"k\">)),</span>","                    modifyStart <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    end <span class=\"k\">=</span>  getLi<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>bko<span class=\"k\">.</span>end<span class=\"k\">)),</span>","                    modifyEnd <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    startParent<span class=\"k\">,</span> endParent<span class=\"k\">,</span>","                    list<span class=\"k\">,</span> tmp<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">||</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                    start <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>startParent <span class=\"k\">=</span> start<span class=\"k\">.</span>parentNode<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>bko<span class=\"k\">.</span>end<span class=\"k\">)</span> <span class=\"k\">{</span>","                        end <span class=\"k\">=</span> start<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>endParent <span class=\"k\">=</span> end<span class=\"k\">.</span>parentNode<span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>startParent <span class=\"k\">===</span> endParent<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span>start <span class=\"k\">!==</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                            tmp <span class=\"k\">=</span> start<span class=\"k\">;</span>","                            start <span class=\"k\">=</span> start<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                            <span class=\"k\">if</span> <span class=\"k\">(!</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>tmp<span class=\"k\">.</span>firstChild<span class=\"k\">))</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>tmp<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmp<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                tmp<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmp<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        tmp <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'span'</span><span class=\"k\">);</span>","                        startParent<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>tmp<span class=\"k\">,</span> end<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>end<span class=\"k\">.</span>firstChild<span class=\"k\">))</span> <span class=\"k\">{</span>","                            p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span>end<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>end<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            end<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>end<span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>breakParent<span class=\"k\">(</span>tmp<span class=\"k\">,</span> startParent<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>tmp<span class=\"k\">.</span>previousSibling<span class=\"k\">))</span> <span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmp<span class=\"k\">.</span>previousSibling<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>tmp<span class=\"k\">.</span>nextSibling<span class=\"k\">))</span> <span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmp<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">var</span> nodeStyle <span class=\"k\">=</span> getStyle<span class=\"k\">(</span>startParent<span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>startParent<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>command<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'insertorderedlist'</span> <span class=\"k\">?</span> <span class=\"s\">'decimal'</span> <span class=\"k\">:</span> <span class=\"s\">'disc'</span><span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>startParent<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> tag <span class=\"k\">&amp;&amp;</span> nodeStyle <span class=\"k\">==</span> style<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">,</span> tmpFrag <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span> ci <span class=\"k\">=</span> frag<span class=\"k\">.</span>childNodes<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>ci<span class=\"k\">,</span><span class=\"s\">'ol ul'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                                    utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>ci<span class=\"k\">,</span><span class=\"s\">'li'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>li<span class=\"k\">)</span><span class=\"k\">{</span>","                                        <span class=\"k\">while</span><span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","                                            tmpFrag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                        <span class=\"k\">}</span>","","                                    <span class=\"k\">}</span><span class=\"k\">);</span>","                                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                                    <span class=\"k\">while</span> <span class=\"k\">(</span>ci<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                        tmpFrag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>ci<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","","                            <span class=\"k\">}</span>","                            tmp<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>tmpFrag<span class=\"k\">,</span> tmp<span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            list <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span>tag<span class=\"k\">);</span>","                            setListStyle<span class=\"k\">(</span>list<span class=\"k\">,</span>style<span class=\"k\">);</span>","                            list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>frag<span class=\"k\">);</span>","                            tmp<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>list<span class=\"k\">,</span> tmp<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmp<span class=\"k\">);</span>","                        list <span class=\"k\">&amp;&amp;</span> adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span> tag<span class=\"k\">,</span> style<span class=\"k\">);</span>","                        range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bko<span class=\"k\">).</span>select<span class=\"k\">();</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"c\">//&#24320;&#22987;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>start<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span>start<span class=\"k\">)</span> <span class=\"k\">{</span>","                            tmp <span class=\"k\">=</span> start<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"s\">'ol ul'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                                frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>start<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> tmpfrag <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">(),</span>","                                    hasBlock <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">))</span> <span class=\"k\">{</span>","                                        hasBlock <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","                                    tmpfrag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                <span class=\"k\">if</span> <span class=\"k\">(!</span>hasBlock<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">var</span> tmpP <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                    tmpP<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpfrag<span class=\"k\">);</span>","                                    frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpP<span class=\"k\">);</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpfrag<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>start<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","","                            start <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        startParent<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>frag<span class=\"k\">,</span> startParent<span class=\"k\">.</span>nextSibling<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>startParent<span class=\"k\">))</span> <span class=\"k\">{</span>","                            range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>startParent<span class=\"k\">);</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>startParent<span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            range<span class=\"k\">.</span>setStartAfter<span class=\"k\">(</span>startParent<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        modifyStart <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>end <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>inDoc<span class=\"k\">(</span>endParent<span class=\"k\">,</span> me<span class=\"k\">.</span>document<span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"c\">//&#32467;&#26463;</span>","                        start <span class=\"k\">=</span> endParent<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">!==</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                            tmp <span class=\"k\">=</span> start<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isTagNode<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"s\">'ol ul'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                                frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>start<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                tmpfrag <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span>","                                hasBlock <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">))</span> <span class=\"k\">{</span>","                                        hasBlock <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","                                    tmpfrag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>start<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                <span class=\"k\">if</span> <span class=\"k\">(!</span>hasBlock<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    tmpP <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                    tmpP<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpfrag<span class=\"k\">);</span>","                                    frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpP<span class=\"k\">);</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpfrag<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>start<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            start <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">var</span> tmpDiv <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>createElement<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">'div'</span><span class=\"k\">,</span> <span class=\"k\">{</span>","                            <span class=\"s\">'tmpDiv'</span><span class=\"k\">:</span><span class=\"s\">1</span>","                        <span class=\"k\">}</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>moveChild<span class=\"k\">(</span>end<span class=\"k\">,</span> tmpDiv<span class=\"k\">);</span>","","                        frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpDiv<span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>end<span class=\"k\">);</span>","                        endParent<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>frag<span class=\"k\">,</span> endParent<span class=\"k\">);</span>","                        range<span class=\"k\">.</span>setEndBefore<span class=\"k\">(</span>endParent<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>endParent<span class=\"k\">))</span> <span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>endParent<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        modifyEnd <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>modifyStart<span class=\"k\">)</span> <span class=\"k\">{</span>","                    range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>bko<span class=\"k\">.</span>start<span class=\"k\">));</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>bko<span class=\"k\">.</span>end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>modifyEnd<span class=\"k\">)</span> <span class=\"k\">{</span>","                    range<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span>bko<span class=\"k\">.</span>end<span class=\"k\">));</span>","                <span class=\"k\">}</span>","                range<span class=\"k\">.</span>enlarge<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> notExchange<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">];</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","","                frag <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">();</span>","","                <span class=\"k\">var</span> bk <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">(),</span>","                    current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>bk<span class=\"k\">.</span>start<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">),</span>","                    tmpRange <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">(),</span>","                    tmpNode<span class=\"k\">,</span>","                    block <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">;</span>","","                <span class=\"k\">while</span> <span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> current <span class=\"k\">!==</span> bk<span class=\"k\">.</span>end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span>current<span class=\"k\">,</span> bk<span class=\"k\">.</span>end<span class=\"k\">)</span> <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_PRECEDING<span class=\"k\">))</span> <span class=\"k\">{</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>current<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">||</span> dtd<span class=\"k\">.</span>li<span class=\"k\">[</span>current<span class=\"k\">.</span>tagName<span class=\"k\">])</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>current<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> dtd<span class=\"k\">.</span>$list<span class=\"k\">[</span>current<span class=\"k\">.</span>tagName<span class=\"k\">])</span> <span class=\"k\">{</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span>current<span class=\"k\">.</span>firstChild<span class=\"k\">)</span> <span class=\"k\">{</span>","                                frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>current<span class=\"k\">.</span>firstChild<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            tmpNode <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>current<span class=\"k\">);</span>","                            current <span class=\"k\">=</span> tmpNode<span class=\"k\">;</span>","                            <span class=\"k\">continue</span><span class=\"k\">;</span>","","                        <span class=\"k\">}</span>","                        tmpNode <span class=\"k\">=</span> current<span class=\"k\">;</span>","                        tmpRange<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>current<span class=\"k\">);</span>","","                        <span class=\"k\">while</span> <span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> current <span class=\"k\">!==</span> bk<span class=\"k\">.</span>end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>block<span class=\"k\">(</span>current<span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>isBookmarkNode<span class=\"k\">(</span>current<span class=\"k\">)</span> <span class=\"k\">))</span> <span class=\"k\">{</span>","                            tmpNode <span class=\"k\">=</span> current<span class=\"k\">;</span>","                            current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> <span class=\"k\">!</span>notExchange<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">];</span>","                            <span class=\"k\">}</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span>current <span class=\"k\">&amp;&amp;</span> block<span class=\"k\">(</span>current<span class=\"k\">))</span> <span class=\"k\">{</span>","                            tmp <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>tmp <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isBookmarkNode<span class=\"k\">(</span>tmp<span class=\"k\">))</span> <span class=\"k\">{</span>","                                current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>tmp<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","                                tmpNode <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        tmpRange<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","","                        current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","","                        <span class=\"k\">var</span> li <span class=\"k\">=</span> range<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'li'</span><span class=\"k\">);</span>","","                        li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpRange<span class=\"k\">.</span>extractContents<span class=\"k\">());</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>li<span class=\"k\">))</span><span class=\"k\">{</span>","                            <span class=\"k\">var</span> tmpNode <span class=\"k\">=</span> range<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                            <span class=\"k\">while</span><span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span><span class=\"k\">{</span>","                                tmpNode<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">.</span>firstChild<span class=\"k\">)</span>","                            <span class=\"k\">}</span>","                            li<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        frag<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>li<span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span>current<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> filterFn<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                list <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span>tag<span class=\"k\">);</span>","                setListStyle<span class=\"k\">(</span>list<span class=\"k\">,</span>style<span class=\"k\">);</span>","                list<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>frag<span class=\"k\">);</span>","                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>list<span class=\"k\">);</span>","                <span class=\"c\">//&#24403;&#21069;list&#19978;&#19979;&#30475;&#33021;&#21542;&#21512;&#24182;</span>","                adjustList<span class=\"k\">(</span>list<span class=\"k\">,</span> tag<span class=\"k\">,</span> style<span class=\"k\">);</span>","                <span class=\"c\">//&#21435;&#25481;&#20887;&#20313;&#30340;tmpDiv</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">,</span> tmpDivs <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>list<span class=\"k\">,</span> <span class=\"s\">'div'</span><span class=\"k\">);</span> ci <span class=\"k\">=</span> tmpDivs<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>ci<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'tmpDiv'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>ci<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bko<span class=\"k\">).</span>select<span class=\"k\">();</span>","","            <span class=\"k\">}</span><span class=\"k\">,</span>","            queryCommandState<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>command<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> tag <span class=\"k\">=</span> command<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'insertorderedlist'</span> <span class=\"k\">?</span> <span class=\"s\">'ol'</span> <span class=\"k\">:</span> <span class=\"s\">'ul'</span><span class=\"k\">;</span>","                <span class=\"k\">var</span> path <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getStartElementPath<span class=\"k\">();</span>","                <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>ci<span class=\"k\">;</span>ci <span class=\"k\">=</span> path<span class=\"k\">[</span>i<span class=\"k\">++];)</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>ci<span class=\"k\">.</span>nodeName <span class=\"k\">==</span> <span class=\"s\">'TABLE'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"s\">0</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>tag <span class=\"k\">==</span> ci<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">())</span><span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"s\">1</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"k\">}</span><span class=\"k\">,</span>","            queryCommandValue<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>command<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> tag <span class=\"k\">=</span> command<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">==</span> <span class=\"s\">'insertorderedlist'</span> <span class=\"k\">?</span> <span class=\"s\">'ol'</span> <span class=\"k\">:</span> <span class=\"s\">'ul'</span><span class=\"k\">;</span>","                <span class=\"k\">var</span> path <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getStartElementPath<span class=\"k\">(),</span>","                    node<span class=\"k\">;</span>","                <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i<span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>ci<span class=\"k\">;</span>ci <span class=\"k\">=</span> path<span class=\"k\">[</span>i<span class=\"k\">++];)</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>ci<span class=\"k\">.</span>nodeName <span class=\"k\">==</span> <span class=\"s\">'TABLE'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                        node <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>tag <span class=\"k\">==</span> ci<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">())</span><span class=\"k\">{</span>","                        node <span class=\"k\">=</span> ci<span class=\"k\">;</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> node <span class=\"k\">?</span> getStyle<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">'list-style-type'</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>",""];
_$jscoverage['plugins/list.js'][7]++;
UE.plugins.list = (function () {
  _$jscoverage['plugins/list.js'][8]++;
  var me = this, notExchange = {"TD": 1, "PRE": 1, "BLOCKQUOTE": 1};
  _$jscoverage['plugins/list.js'][14]++;
  var customStyle = {"cn": "cn-1-", "cn1": "cn-2-", "cn2": "cn-3-", "num": "num-1-", "num1": "num-2-", "num2": "num-3-", "dash": "dash", "dot": "dot"};
  _$jscoverage['plugins/list.js'][25]++;
  me.setOpt({"insertorderedlist": {"num": "", "num1": "", "num2": "", "cn": "", "cn1": "", "cn2": "", "decimal": "", "lower-alpha": "", "lower-roman": "", "upper-alpha": "", "upper-roman": ""}, "insertunorderedlist": {"circle": "", "disc": "", "square": "", "dash": "", "dot": ""}, listDefaultPaddingLeft: "30", listiconpath: "http://bs.baidu.com/listicon/", maxListLevel: -1});
  _$jscoverage['plugins/list.js'][50]++;
  function listToArray(list) {
    _$jscoverage['plugins/list.js'][51]++;
    var arr = [];
    _$jscoverage['plugins/list.js'][52]++;
    for (var p in list) {
      _$jscoverage['plugins/list.js'][53]++;
      arr.push(p);
}
    _$jscoverage['plugins/list.js'][55]++;
    return arr;
}
  _$jscoverage['plugins/list.js'][57]++;
  var listStyle = {"OL": listToArray(me.options.insertorderedlist), "UL": listToArray(me.options.insertunorderedlist)};
  _$jscoverage['plugins/list.js'][61]++;
  var liiconpath = me.options.listiconpath;
  _$jscoverage['plugins/list.js'][64]++;
  for (var s in customStyle) {
    _$jscoverage['plugins/list.js'][65]++;
    if (((! me.options.insertorderedlist.hasOwnProperty(s)) && (! me.options.insertunorderedlist.hasOwnProperty(s)))) {
      _$jscoverage['plugins/list.js'][66]++;
      (delete customStyle[s]);
    }
}
  _$jscoverage['plugins/list.js'][70]++;
  me.ready((function () {
  _$jscoverage['plugins/list.js'][71]++;
  var customCss = [];
  _$jscoverage['plugins/list.js'][72]++;
  for (var p in customStyle) {
    _$jscoverage['plugins/list.js'][73]++;
    if (((p == "dash") || (p == "dot"))) {
      _$jscoverage['plugins/list.js'][74]++;
      customCss.push(("li.list-" + customStyle[p] + "{background-image:url(" + liiconpath + customStyle[p] + ".gif)}"));
      _$jscoverage['plugins/list.js'][75]++;
      customCss.push(("ul.custom_" + p + "{list-style:none;}ul.custom_" + p + " li{background-position:0 3px;background-repeat:no-repeat}"));
    }
    else {
      _$jscoverage['plugins/list.js'][77]++;
      for (var i = 0; (i < 99); (i++)) {
        _$jscoverage['plugins/list.js'][78]++;
        customCss.push(("li.list-" + customStyle[p] + i + "{background-image:url(" + liiconpath + "list-" + customStyle[p] + i + ".gif)}"));
}
      _$jscoverage['plugins/list.js'][80]++;
      customCss.push(("ol.custom_" + p + "{list-style:none;}ol.custom_" + p + " li{background-position:0 3px;background-repeat:no-repeat}"));
    }
    _$jscoverage['plugins/list.js'][82]++;
    switch (p) {
    case "cn":
      _$jscoverage['plugins/list.js'][84]++;
      customCss.push(("li.list-" + p + "-paddingleft-1{padding-left:25px}"));
      _$jscoverage['plugins/list.js'][85]++;
      customCss.push(("li.list-" + p + "-paddingleft-2{padding-left:40px}"));
      _$jscoverage['plugins/list.js'][86]++;
      customCss.push(("li.list-" + p + "-paddingleft-3{padding-left:55px}"));
      _$jscoverage['plugins/list.js'][87]++;
      break;
    case "cn1":
      _$jscoverage['plugins/list.js'][89]++;
      customCss.push(("li.list-" + p + "-paddingleft-1{padding-left:30px}"));
      _$jscoverage['plugins/list.js'][90]++;
      customCss.push(("li.list-" + p + "-paddingleft-2{padding-left:40px}"));
      _$jscoverage['plugins/list.js'][91]++;
      customCss.push(("li.list-" + p + "-paddingleft-3{padding-left:55px}"));
      _$jscoverage['plugins/list.js'][92]++;
      break;
    case "cn2":
      _$jscoverage['plugins/list.js'][94]++;
      customCss.push(("li.list-" + p + "-paddingleft-1{padding-left:40px}"));
      _$jscoverage['plugins/list.js'][95]++;
      customCss.push(("li.list-" + p + "-paddingleft-2{padding-left:55px}"));
      _$jscoverage['plugins/list.js'][96]++;
      customCss.push(("li.list-" + p + "-paddingleft-3{padding-left:68px}"));
      _$jscoverage['plugins/list.js'][97]++;
      break;
    case "num":
    case "num1":
      _$jscoverage['plugins/list.js'][100]++;
      customCss.push(("li.list-" + p + "-paddingleft-1{padding-left:25px}"));
      _$jscoverage['plugins/list.js'][101]++;
      break;
    case "num2":
      _$jscoverage['plugins/list.js'][103]++;
      customCss.push(("li.list-" + p + "-paddingleft-1{padding-left:35px}"));
      _$jscoverage['plugins/list.js'][104]++;
      customCss.push(("li.list-" + p + "-paddingleft-2{padding-left:40px}"));
      _$jscoverage['plugins/list.js'][105]++;
      break;
    case "dash":
      _$jscoverage['plugins/list.js'][107]++;
      customCss.push(("li.list-" + p + "-paddingleft{padding-left:35px}"));
      _$jscoverage['plugins/list.js'][108]++;
      break;
    case "dot":
      _$jscoverage['plugins/list.js'][110]++;
      customCss.push(("li.list-" + p + "-paddingleft{padding-left:20px}"));
    }
}
  _$jscoverage['plugins/list.js'][113]++;
  customCss.push(".list-paddingleft-1{padding-left:0}");
  _$jscoverage['plugins/list.js'][114]++;
  customCss.push((".list-paddingleft-2{padding-left:" + me.options.listDefaultPaddingLeft + "px}"));
  _$jscoverage['plugins/list.js'][115]++;
  customCss.push((".list-paddingleft-3{padding-left:" + (me.options.listDefaultPaddingLeft * 2) + "px}"));
  _$jscoverage['plugins/list.js'][117]++;
  utils.cssRule("list", ("ol,ul{margin:0;pading:0;" + (browser.ie? "": "width:95%") + "}li{clear:both;}" + customCss.join("\n")), me.document);
}));
  _$jscoverage['plugins/list.js'][120]++;
  me.ready((function () {
  _$jscoverage['plugins/list.js'][121]++;
  domUtils.on(me.body, "cut", (function () {
  _$jscoverage['plugins/list.js'][122]++;
  setTimeout((function () {
  _$jscoverage['plugins/list.js'][123]++;
  var rng = me.selection.getRange(), li;
  _$jscoverage['plugins/list.js'][125]++;
  if ((! rng.collapsed)) {
    _$jscoverage['plugins/list.js'][126]++;
    if ((li = domUtils.findParentByTagName(rng.startContainer, "li", true))) {
      _$jscoverage['plugins/list.js'][127]++;
      if (((! li.nextSibling) && domUtils.isEmptyBlock(li))) {
        _$jscoverage['plugins/list.js'][128]++;
        var pn = li.parentNode, node;
        _$jscoverage['plugins/list.js'][129]++;
        if ((node = pn.previousSibling)) {
          _$jscoverage['plugins/list.js'][130]++;
          domUtils.remove(pn);
          _$jscoverage['plugins/list.js'][131]++;
          rng.setStartAtLast(node).collapse(true);
          _$jscoverage['plugins/list.js'][132]++;
          rng.select(true);
        }
        else {
          _$jscoverage['plugins/list.js'][133]++;
          if ((node = pn.nextSibling)) {
            _$jscoverage['plugins/list.js'][134]++;
            domUtils.remove(pn);
            _$jscoverage['plugins/list.js'][135]++;
            rng.setStartAtFirst(node).collapse(true);
            _$jscoverage['plugins/list.js'][136]++;
            rng.select(true);
          }
          else {
            _$jscoverage['plugins/list.js'][138]++;
            var tmpNode = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][139]++;
            domUtils.fillNode(me.document, tmpNode);
            _$jscoverage['plugins/list.js'][140]++;
            pn.parentNode.insertBefore(tmpNode, pn);
            _$jscoverage['plugins/list.js'][141]++;
            domUtils.remove(pn);
            _$jscoverage['plugins/list.js'][142]++;
            rng.setStart(tmpNode, 0).collapse(true);
            _$jscoverage['plugins/list.js'][143]++;
            rng.select(true);
          }
        }
      }
    }
  }
}));
}));
}));
  _$jscoverage['plugins/list.js'][153]++;
  function getStyle(node) {
    _$jscoverage['plugins/list.js'][154]++;
    var cls = node.className;
    _$jscoverage['plugins/list.js'][155]++;
    if (domUtils.hasClass(node, /custom_/)) {
      _$jscoverage['plugins/list.js'][156]++;
      return cls.match(/custom_(\w+)/)[1];
    }
    _$jscoverage['plugins/list.js'][158]++;
    return domUtils.getStyle(node, "list-style-type");
}
  _$jscoverage['plugins/list.js'][162]++;
  me.addListener("beforepaste", (function (type, html) {
  _$jscoverage['plugins/list.js'][163]++;
  var me = this, rng = me.selection.getRange(), li;
  _$jscoverage['plugins/list.js'][165]++;
  var root = UE.htmlparser(html.html, true);
  _$jscoverage['plugins/list.js'][166]++;
  if ((li = domUtils.findParentByTagName(rng.startContainer, "li", true))) {
    _$jscoverage['plugins/list.js'][167]++;
    var list = li.parentNode, tagName = ((list.tagName == "OL")? "ul": "ol");
    _$jscoverage['plugins/list.js'][168]++;
    utils.each(root.getNodesByTagName(tagName), (function (n) {
  _$jscoverage['plugins/list.js'][169]++;
  n.tagName = list.tagName;
  _$jscoverage['plugins/list.js'][170]++;
  n.setAttr();
  _$jscoverage['plugins/list.js'][171]++;
  if ((n.parentNode === root)) {
    _$jscoverage['plugins/list.js'][172]++;
    type = (getStyle(list) || ((list.tagName == "OL")? "decimal": "disc"));
  }
  else {
    _$jscoverage['plugins/list.js'][174]++;
    var className = n.parentNode.getAttr("class");
    _$jscoverage['plugins/list.js'][175]++;
    if ((className && /custom_/.test(className))) {
      _$jscoverage['plugins/list.js'][176]++;
      type = className.match(/custom_(\w+)/)[1];
    }
    else {
      _$jscoverage['plugins/list.js'][178]++;
      type = n.parentNode.getStyle("list-style-type");
    }
    _$jscoverage['plugins/list.js'][180]++;
    if ((! type)) {
      _$jscoverage['plugins/list.js'][181]++;
      type = ((list.tagName == "OL")? "decimal": "disc");
    }
  }
  _$jscoverage['plugins/list.js'][184]++;
  var index = utils.indexOf(listStyle[list.tagName], type);
  _$jscoverage['plugins/list.js'][185]++;
  if ((n.parentNode !== root)) {
    _$jscoverage['plugins/list.js'][186]++;
    index = (((index + 1) == listStyle[list.tagName].length)? 0: (index + 1));
  }
  _$jscoverage['plugins/list.js'][187]++;
  var currentStyle = listStyle[list.tagName][index];
  _$jscoverage['plugins/list.js'][188]++;
  if (customStyle[currentStyle]) {
    _$jscoverage['plugins/list.js'][189]++;
    n.setAttr("class", ("custom_" + currentStyle));
  }
  else {
    _$jscoverage['plugins/list.js'][192]++;
    n.setStyle("list-style-type", currentStyle);
  }
}));
  }
  _$jscoverage['plugins/list.js'][198]++;
  html.html = root.toHtml();
}));
  _$jscoverage['plugins/list.js'][201]++;
  me.addInputRule((function (root) {
  _$jscoverage['plugins/list.js'][202]++;
  utils.each(root.getNodesByTagName("li"), (function (li) {
  _$jscoverage['plugins/list.js'][203]++;
  var tmpP = UE.uNode.createElement("p");
  _$jscoverage['plugins/list.js'][204]++;
  for (var i = 0, ci; (ci = li.children[i]);) {
    _$jscoverage['plugins/list.js'][205]++;
    if (((ci.type == "text") || dtd.p[ci.tagName])) {
      _$jscoverage['plugins/list.js'][206]++;
      tmpP.appendChild(ci);
    }
    else {
      _$jscoverage['plugins/list.js'][208]++;
      if (tmpP.firstChild()) {
        _$jscoverage['plugins/list.js'][209]++;
        li.insertBefore(tmpP, ci);
        _$jscoverage['plugins/list.js'][210]++;
        tmpP = UE.uNode.createElement("p");
        _$jscoverage['plugins/list.js'][211]++;
        i = (i + 2);
      }
      else {
        _$jscoverage['plugins/list.js'][213]++;
        (i++);
      }
    }
}
  _$jscoverage['plugins/list.js'][218]++;
  if (((tmpP.firstChild() && (! tmpP.parentNode)) || (! li.firstChild()))) {
    _$jscoverage['plugins/list.js'][219]++;
    li.appendChild(tmpP);
  }
  _$jscoverage['plugins/list.js'][223]++;
  if ((! tmpP.firstChild())) {
    _$jscoverage['plugins/list.js'][224]++;
    tmpP.innerHTML((browser.ie? "&nbsp;": "<br/>"));
  }
  _$jscoverage['plugins/list.js'][227]++;
  var p = li.firstChild();
  _$jscoverage['plugins/list.js'][228]++;
  var lastChild = p.lastChild();
  _$jscoverage['plugins/list.js'][229]++;
  if ((lastChild && (lastChild.type == "text") && /^\s*$/.test(lastChild.data))) {
    _$jscoverage['plugins/list.js'][230]++;
    p.removeChild(lastChild);
  }
}));
  _$jscoverage['plugins/list.js'][233]++;
  var orderlisttype = {"num1": /^\d+\)/, "decimal": /^\d+\./, "lower-alpha": /^[a-z]+\)/, "upper-alpha": /^[A-Z]+\./, "cn": /^[\u4E00\u4E8C\u4E09\u56DB\u516d\u4e94\u4e03\u516b\u4e5d]+[\u3001]/, "cn2": /^\([\u4E00\u4E8C\u4E09\u56DB\u516d\u4e94\u4e03\u516b\u4e5d]+\)/}, unorderlisttype = {"square": "n"};
  _$jscoverage['plugins/list.js'][244]++;
  function checkListType(content, container) {
    _$jscoverage['plugins/list.js'][245]++;
    var span = container.firstChild();
    _$jscoverage['plugins/list.js'][246]++;
    if ((span && (span.type == "element") && (span.tagName == "span") && /Wingdings|Symbol/.test(span.getStyle("font-family")))) {
      _$jscoverage['plugins/list.js'][247]++;
      for (var p in unorderlisttype) {
        _$jscoverage['plugins/list.js'][248]++;
        if ((unorderlisttype[p] == span.data)) {
          _$jscoverage['plugins/list.js'][249]++;
          return p;
        }
}
      _$jscoverage['plugins/list.js'][252]++;
      return "disc";
    }
    _$jscoverage['plugins/list.js'][254]++;
    for (var p = p in orderlisttype) {
      _$jscoverage['plugins/list.js'][255]++;
      if (orderlisttype[p].test(content)) {
        _$jscoverage['plugins/list.js'][256]++;
        return p;
      }
}
}
  _$jscoverage['plugins/list.js'][261]++;
  utils.each(root.getNodesByTagName("p"), (function (node) {
  _$jscoverage['plugins/list.js'][262]++;
  if ((node.getAttr("class") != "MsoListParagraph")) {
    _$jscoverage['plugins/list.js'][263]++;
    return;
  }
  _$jscoverage['plugins/list.js'][267]++;
  node.setStyle("margin", "");
  _$jscoverage['plugins/list.js'][268]++;
  node.setStyle("margin-left", "");
  _$jscoverage['plugins/list.js'][269]++;
  node.setAttr("class", "");
  _$jscoverage['plugins/list.js'][271]++;
  function appendLi(list, p, type) {
    _$jscoverage['plugins/list.js'][272]++;
    if ((list.tagName == "ol")) {
      _$jscoverage['plugins/list.js'][273]++;
      if (browser.ie) {
        _$jscoverage['plugins/list.js'][274]++;
        var first = p.firstChild();
        _$jscoverage['plugins/list.js'][275]++;
        if (((first.type == "element") && (first.tagName == "span") && orderlisttype[type].test(first.innerText()))) {
          _$jscoverage['plugins/list.js'][276]++;
          p.removeChild(first);
        }
      }
      else {
        _$jscoverage['plugins/list.js'][279]++;
        p.innerHTML(p.innerHTML().replace(orderlisttype[type], ""));
      }
    }
    else {
      _$jscoverage['plugins/list.js'][282]++;
      p.removeChild(p.firstChild());
    }
    _$jscoverage['plugins/list.js'][285]++;
    var li = UE.uNode.createElement("li");
    _$jscoverage['plugins/list.js'][286]++;
    li.appendChild(p);
    _$jscoverage['plugins/list.js'][287]++;
    list.appendChild(li);
}
  _$jscoverage['plugins/list.js'][289]++;
  var tmp = node, type, cacheNode = node;
  _$jscoverage['plugins/list.js'][291]++;
  if (((node.parentNode.tagName != "li") && (type = checkListType(node.innerText(), node)))) {
    _$jscoverage['plugins/list.js'][293]++;
    var list = UE.uNode.createElement((me.options.insertorderedlist.hasOwnProperty(type)? "ol": "ul"));
    _$jscoverage['plugins/list.js'][294]++;
    if (customStyle[type]) {
      _$jscoverage['plugins/list.js'][295]++;
      list.setAttr("class", ("custom_" + type));
    }
    else {
      _$jscoverage['plugins/list.js'][297]++;
      list.setStyle("list-style-type", type);
    }
    _$jscoverage['plugins/list.js'][299]++;
    while ((node && (node.parentNode.tagName != "li") && checkListType(node.innerText(), node))) {
      _$jscoverage['plugins/list.js'][300]++;
      tmp = node.nextSibling();
      _$jscoverage['plugins/list.js'][301]++;
      if ((! tmp)) {
        _$jscoverage['plugins/list.js'][302]++;
        node.parentNode.insertBefore(list, node);
      }
      _$jscoverage['plugins/list.js'][304]++;
      appendLi(list, node, type);
      _$jscoverage['plugins/list.js'][305]++;
      node = tmp;
}
    _$jscoverage['plugins/list.js'][307]++;
    if (((! list.parentNode) && node && node.parentNode)) {
      _$jscoverage['plugins/list.js'][308]++;
      node.parentNode.insertBefore(list, node);
    }
  }
  _$jscoverage['plugins/list.js'][311]++;
  var span = cacheNode.firstChild();
  _$jscoverage['plugins/list.js'][312]++;
  if ((span && (span.type == "element") && (span.tagName == "span") && /^\s*(&nbsp;)+\s*$/.test(span.innerText()))) {
    _$jscoverage['plugins/list.js'][313]++;
    span.parentNode.removeChild(span);
  }
}));
}));
  _$jscoverage['plugins/list.js'][319]++;
  me.addListener("contentchange", (function () {
  _$jscoverage['plugins/list.js'][320]++;
  adjustListStyle(me.document);
}));
  _$jscoverage['plugins/list.js'][323]++;
  function adjustListStyle(doc, ignore) {
    _$jscoverage['plugins/list.js'][324]++;
    utils.each(domUtils.getElementsByTagName(doc, "ol ul"), (function (node) {
  _$jscoverage['plugins/list.js'][326]++;
  if ((! domUtils.inDoc(node, doc))) {
    _$jscoverage['plugins/list.js'][327]++;
    return;
  }
  _$jscoverage['plugins/list.js'][329]++;
  var parent = node.parentNode;
  _$jscoverage['plugins/list.js'][330]++;
  if ((parent.tagName == node.tagName)) {
    _$jscoverage['plugins/list.js'][331]++;
    var nodeStyleType = (getStyle(node) || ((node.tagName == "OL")? "decimal": "disc")), parentStyleType = (getStyle(parent) || ((parent.tagName == "OL")? "decimal": "disc"));
    _$jscoverage['plugins/list.js'][333]++;
    if ((nodeStyleType == parentStyleType)) {
      _$jscoverage['plugins/list.js'][334]++;
      var styleIndex = utils.indexOf(listStyle[node.tagName], nodeStyleType);
      _$jscoverage['plugins/list.js'][335]++;
      styleIndex = (((styleIndex + 1) == listStyle[node.tagName].length)? 0: (styleIndex + 1));
      _$jscoverage['plugins/list.js'][336]++;
      setListStyle(node, listStyle[node.tagName][styleIndex]);
    }
  }
  _$jscoverage['plugins/list.js'][340]++;
  var index = 0, type = 2;
  _$jscoverage['plugins/list.js'][341]++;
  if (domUtils.hasClass(node, /custom_/)) {
    _$jscoverage['plugins/list.js'][342]++;
    if ((! (/[ou]l/i.test(parent.tagName) && domUtils.hasClass(parent, /custom_/)))) {
      _$jscoverage['plugins/list.js'][343]++;
      type = 1;
    }
  }
  else {
    _$jscoverage['plugins/list.js'][346]++;
    if ((/[ou]l/i.test(parent.tagName) && domUtils.hasClass(parent, /custom_/))) {
      _$jscoverage['plugins/list.js'][347]++;
      type = 3;
    }
  }
  _$jscoverage['plugins/list.js'][351]++;
  var style = domUtils.getStyle(node, "list-style-type");
  _$jscoverage['plugins/list.js'][352]++;
  (style && (node.style.cssText = ("list-style-type:" + style)));
  _$jscoverage['plugins/list.js'][353]++;
  node.className = (utils.trim(node.className.replace(/list-paddingleft-\w+/, "")) + " list-paddingleft-" + type);
  _$jscoverage['plugins/list.js'][354]++;
  utils.each(domUtils.getElementsByTagName(node, "li"), (function (li) {
  _$jscoverage['plugins/list.js'][355]++;
  (li.style.cssText && (li.style.cssText = ""));
  _$jscoverage['plugins/list.js'][356]++;
  if ((! li.firstChild)) {
    _$jscoverage['plugins/list.js'][357]++;
    domUtils.remove(li);
    _$jscoverage['plugins/list.js'][358]++;
    return;
  }
  _$jscoverage['plugins/list.js'][360]++;
  if ((li.parentNode !== node)) {
    _$jscoverage['plugins/list.js'][361]++;
    return;
  }
  _$jscoverage['plugins/list.js'][363]++;
  (index++);
  _$jscoverage['plugins/list.js'][364]++;
  if (domUtils.hasClass(node, /custom_/)) {
    _$jscoverage['plugins/list.js'][365]++;
    var paddingLeft = 1, currentStyle = getStyle(node);
    _$jscoverage['plugins/list.js'][366]++;
    if ((node.tagName == "OL")) {
      _$jscoverage['plugins/list.js'][367]++;
      if (currentStyle) {
        _$jscoverage['plugins/list.js'][368]++;
        switch (currentStyle) {
        case "cn":
        case "cn1":
        case "cn2":
          _$jscoverage['plugins/list.js'][372]++;
          if (((index > 10) && (((index % 10) == 0) || ((index > 10) && (index < 20))))) {
            _$jscoverage['plugins/list.js'][373]++;
            paddingLeft = 2;
          }
          else {
            _$jscoverage['plugins/list.js'][374]++;
            if ((index > 20)) {
              _$jscoverage['plugins/list.js'][375]++;
              paddingLeft = 3;
            }
          }
          _$jscoverage['plugins/list.js'][377]++;
          break;
        case "num2":
          _$jscoverage['plugins/list.js'][379]++;
          if ((index > 9)) {
            _$jscoverage['plugins/list.js'][380]++;
            paddingLeft = 2;
          }
        }
      }
      _$jscoverage['plugins/list.js'][384]++;
      li.className = ("list-" + customStyle[currentStyle] + index + " " + "list-" + currentStyle + "-paddingleft-" + paddingLeft);
    }
    else {
      _$jscoverage['plugins/list.js'][386]++;
      li.className = ("list-" + customStyle[currentStyle] + " " + "list-" + currentStyle + "-paddingleft");
    }
  }
  else {
    _$jscoverage['plugins/list.js'][389]++;
    li.className = li.className.replace(/list-[\w\-]+/gi, "");
  }
  _$jscoverage['plugins/list.js'][391]++;
  var className = li.getAttribute("class");
  _$jscoverage['plugins/list.js'][392]++;
  if (((className !== null) && (! className.replace(/\s/g, "")))) {
    _$jscoverage['plugins/list.js'][393]++;
    domUtils.removeAttributes(li, "class");
  }
}));
  _$jscoverage['plugins/list.js'][396]++;
  ((! ignore) && adjustList(node, node.tagName.toLowerCase(), (getStyle(node) || domUtils.getStyle(node, "list-style-type")), true));
}));
}
  _$jscoverage['plugins/list.js'][399]++;
  function adjustList(list, tag, style, ignoreEmpty) {
    _$jscoverage['plugins/list.js'][400]++;
    var nextList = list.nextSibling;
    _$jscoverage['plugins/list.js'][401]++;
    if ((nextList && (nextList.nodeType == 1) && (nextList.tagName.toLowerCase() == tag) && ((getStyle(nextList) || domUtils.getStyle(nextList, "list-style-type") || ((tag == "ol")? "decimal": "disc")) == style))) {
      _$jscoverage['plugins/list.js'][402]++;
      domUtils.moveChild(nextList, list);
      _$jscoverage['plugins/list.js'][403]++;
      if ((nextList.childNodes.length == 0)) {
        _$jscoverage['plugins/list.js'][404]++;
        domUtils.remove(nextList);
      }
    }
    _$jscoverage['plugins/list.js'][407]++;
    if ((nextList && domUtils.isFillChar(nextList))) {
      _$jscoverage['plugins/list.js'][408]++;
      domUtils.remove(nextList);
    }
    _$jscoverage['plugins/list.js'][410]++;
    var preList = list.previousSibling;
    _$jscoverage['plugins/list.js'][411]++;
    if ((preList && (preList.nodeType == 1) && (preList.tagName.toLowerCase() == tag) && ((getStyle(preList) || domUtils.getStyle(preList, "list-style-type") || ((tag == "ol")? "decimal": "disc")) == style))) {
      _$jscoverage['plugins/list.js'][412]++;
      domUtils.moveChild(list, preList);
    }
    _$jscoverage['plugins/list.js'][414]++;
    if ((preList && domUtils.isFillChar(preList))) {
      _$jscoverage['plugins/list.js'][415]++;
      domUtils.remove(preList);
    }
    _$jscoverage['plugins/list.js'][417]++;
    ((! ignoreEmpty) && domUtils.isEmptyBlock(list) && domUtils.remove(list));
    _$jscoverage['plugins/list.js'][418]++;
    if (getStyle(list)) {
      _$jscoverage['plugins/list.js'][419]++;
      adjustListStyle(list.ownerDocument, true);
    }
}
  _$jscoverage['plugins/list.js'][423]++;
  function setListStyle(list, style) {
    _$jscoverage['plugins/list.js'][424]++;
    if (customStyle[style]) {
      _$jscoverage['plugins/list.js'][425]++;
      list.className = ("custom_" + style);
    }
    _$jscoverage['plugins/list.js'][427]++;
    try {
      _$jscoverage['plugins/list.js'][428]++;
      domUtils.setStyle(list, "list-style-type", style);
    }
    catch (e) {
    }
}
  _$jscoverage['plugins/list.js'][431]++;
  function clearEmptySibling(node) {
    _$jscoverage['plugins/list.js'][432]++;
    var tmpNode = node.previousSibling;
    _$jscoverage['plugins/list.js'][433]++;
    if ((tmpNode && domUtils.isEmptyBlock(tmpNode))) {
      _$jscoverage['plugins/list.js'][434]++;
      domUtils.remove(tmpNode);
    }
    _$jscoverage['plugins/list.js'][436]++;
    tmpNode = node.nextSibling;
    _$jscoverage['plugins/list.js'][437]++;
    if ((tmpNode && domUtils.isEmptyBlock(tmpNode))) {
      _$jscoverage['plugins/list.js'][438]++;
      domUtils.remove(tmpNode);
    }
}
  _$jscoverage['plugins/list.js'][442]++;
  me.addListener("keydown", (function (type, evt) {
  _$jscoverage['plugins/list.js'][443]++;
  function preventAndSave() {
    _$jscoverage['plugins/list.js'][444]++;
    (evt.preventDefault? evt.preventDefault(): (evt.returnValue = false));
    _$jscoverage['plugins/list.js'][445]++;
    me.fireEvent("contentchange");
    _$jscoverage['plugins/list.js'][446]++;
    (me.undoManger && me.undoManger.save());
}
  _$jscoverage['plugins/list.js'][448]++;
  function findList(node, filterFn) {
    _$jscoverage['plugins/list.js'][449]++;
    while ((node && (! domUtils.isBody(node)))) {
      _$jscoverage['plugins/list.js'][450]++;
      if (filterFn(node)) {
        _$jscoverage['plugins/list.js'][451]++;
        return null;
      }
      _$jscoverage['plugins/list.js'][453]++;
      if (((node.nodeType == 1) && /[ou]l/i.test(node.tagName))) {
        _$jscoverage['plugins/list.js'][454]++;
        return node;
      }
      _$jscoverage['plugins/list.js'][456]++;
      node = node.parentNode;
}
    _$jscoverage['plugins/list.js'][458]++;
    return null;
}
  _$jscoverage['plugins/list.js'][460]++;
  var keyCode = (evt.keyCode || evt.which);
  _$jscoverage['plugins/list.js'][461]++;
  if (((keyCode == 13) && (! evt.shiftKey))) {
    _$jscoverage['plugins/list.js'][462]++;
    var rng = me.selection.getRange(), parent = domUtils.findParent(rng.startContainer, (function (node) {
  _$jscoverage['plugins/list.js'][463]++;
  return domUtils.isBlockElm(node);
}), true), li = domUtils.findParentByTagName(rng.startContainer, "li", true);
    _$jscoverage['plugins/list.js'][465]++;
    if ((parent && (parent.tagName != "PRE") && (! li))) {
      _$jscoverage['plugins/list.js'][466]++;
      var html = parent.innerHTML.replace(new RegExp(domUtils.fillChar, "g"), "");
      _$jscoverage['plugins/list.js'][467]++;
      if (/^\s*1\s*\.[^\d]/.test(html)) {
        _$jscoverage['plugins/list.js'][468]++;
        parent.innerHTML = html.replace(/^\s*1\s*\./, "");
        _$jscoverage['plugins/list.js'][469]++;
        rng.setStartAtLast(parent).collapse(true).select();
        _$jscoverage['plugins/list.js'][470]++;
        me.__hasEnterExecCommand = true;
        _$jscoverage['plugins/list.js'][471]++;
        me.execCommand("insertorderedlist");
        _$jscoverage['plugins/list.js'][472]++;
        me.__hasEnterExecCommand = false;
      }
    }
    _$jscoverage['plugins/list.js'][475]++;
    var range = me.selection.getRange(), start = findList(range.startContainer, (function (node) {
  _$jscoverage['plugins/list.js'][477]++;
  return (node.tagName == "TABLE");
})), end = (range.collapsed? start: findList(range.endContainer, (function (node) {
  _$jscoverage['plugins/list.js'][480]++;
  return (node.tagName == "TABLE");
})));
    _$jscoverage['plugins/list.js'][483]++;
    if ((start && end && (start === end))) {
      _$jscoverage['plugins/list.js'][485]++;
      if ((! range.collapsed)) {
        _$jscoverage['plugins/list.js'][486]++;
        start = domUtils.findParentByTagName(range.startContainer, "li", true);
        _$jscoverage['plugins/list.js'][487]++;
        end = domUtils.findParentByTagName(range.endContainer, "li", true);
        _$jscoverage['plugins/list.js'][488]++;
        if ((start && end && (start === end))) {
          _$jscoverage['plugins/list.js'][489]++;
          range.deleteContents();
          _$jscoverage['plugins/list.js'][490]++;
          li = domUtils.findParentByTagName(range.startContainer, "li", true);
          _$jscoverage['plugins/list.js'][491]++;
          if ((li && domUtils.isEmptyBlock(li))) {
            _$jscoverage['plugins/list.js'][493]++;
            pre = li.previousSibling;
            _$jscoverage['plugins/list.js'][494]++;
            next = li.nextSibling;
            _$jscoverage['plugins/list.js'][495]++;
            p = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][497]++;
            domUtils.fillNode(me.document, p);
            _$jscoverage['plugins/list.js'][498]++;
            parentList = li.parentNode;
            _$jscoverage['plugins/list.js'][499]++;
            if ((pre && next)) {
              _$jscoverage['plugins/list.js'][500]++;
              range.setStart(next, 0).collapse(true).select(true);
              _$jscoverage['plugins/list.js'][501]++;
              domUtils.remove(li);
            }
            else {
              _$jscoverage['plugins/list.js'][504]++;
              if ((((! pre) && (! next)) || (! pre))) {
                _$jscoverage['plugins/list.js'][506]++;
                parentList.parentNode.insertBefore(p, parentList);
              }
              else {
                _$jscoverage['plugins/list.js'][510]++;
                li.parentNode.parentNode.insertBefore(p, parentList.nextSibling);
              }
              _$jscoverage['plugins/list.js'][512]++;
              domUtils.remove(li);
              _$jscoverage['plugins/list.js'][513]++;
              if ((! parentList.firstChild)) {
                _$jscoverage['plugins/list.js'][514]++;
                domUtils.remove(parentList);
              }
              _$jscoverage['plugins/list.js'][516]++;
              range.setStart(p, 0).setCursor();
            }
            _$jscoverage['plugins/list.js'][520]++;
            preventAndSave();
            _$jscoverage['plugins/list.js'][521]++;
            return;
          }
        }
        else {
          _$jscoverage['plugins/list.js'][525]++;
          var tmpRange = range.cloneRange(), bk = tmpRange.collapse(false).createBookmark();
          _$jscoverage['plugins/list.js'][528]++;
          range.deleteContents();
          _$jscoverage['plugins/list.js'][529]++;
          tmpRange.moveToBookmark(bk);
          _$jscoverage['plugins/list.js'][530]++;
          var li = domUtils.findParentByTagName(tmpRange.startContainer, "li", true);
          _$jscoverage['plugins/list.js'][532]++;
          clearEmptySibling(li);
          _$jscoverage['plugins/list.js'][533]++;
          tmpRange.select();
          _$jscoverage['plugins/list.js'][534]++;
          preventAndSave();
          _$jscoverage['plugins/list.js'][535]++;
          return;
        }
      }
      _$jscoverage['plugins/list.js'][540]++;
      li = domUtils.findParentByTagName(range.startContainer, "li", true);
      _$jscoverage['plugins/list.js'][542]++;
      if (li) {
        _$jscoverage['plugins/list.js'][543]++;
        if (domUtils.isEmptyBlock(li)) {
          _$jscoverage['plugins/list.js'][544]++;
          bk = range.createBookmark();
          _$jscoverage['plugins/list.js'][545]++;
          var parentList = li.parentNode;
          _$jscoverage['plugins/list.js'][546]++;
          if ((li !== parentList.lastChild)) {
            _$jscoverage['plugins/list.js'][547]++;
            domUtils.breakParent(li, parentList);
            _$jscoverage['plugins/list.js'][548]++;
            clearEmptySibling(li);
          }
          else {
            _$jscoverage['plugins/list.js'][551]++;
            parentList.parentNode.insertBefore(li, parentList.nextSibling);
            _$jscoverage['plugins/list.js'][552]++;
            if (domUtils.isEmptyNode(parentList)) {
              _$jscoverage['plugins/list.js'][553]++;
              domUtils.remove(parentList);
            }
          }
          _$jscoverage['plugins/list.js'][557]++;
          if ((! dtd.$list[li.parentNode.tagName])) {
            _$jscoverage['plugins/list.js'][559]++;
            if ((! domUtils.isBlockElm(li.firstChild))) {
              _$jscoverage['plugins/list.js'][560]++;
              p = me.document.createElement("p");
              _$jscoverage['plugins/list.js'][561]++;
              li.parentNode.insertBefore(p, li);
              _$jscoverage['plugins/list.js'][562]++;
              while (li.firstChild) {
                _$jscoverage['plugins/list.js'][563]++;
                p.appendChild(li.firstChild);
}
              _$jscoverage['plugins/list.js'][565]++;
              domUtils.remove(li);
            }
            else {
              _$jscoverage['plugins/list.js'][567]++;
              domUtils.remove(li, true);
            }
          }
          _$jscoverage['plugins/list.js'][570]++;
          range.moveToBookmark(bk).select();
        }
        else {
          _$jscoverage['plugins/list.js'][574]++;
          var first = li.firstChild;
          _$jscoverage['plugins/list.js'][575]++;
          if (((! first) || (! domUtils.isBlockElm(first)))) {
            _$jscoverage['plugins/list.js'][576]++;
            var p = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][578]++;
            ((! li.firstChild) && domUtils.fillNode(me.document, p));
            _$jscoverage['plugins/list.js'][579]++;
            while (li.firstChild) {
              _$jscoverage['plugins/list.js'][581]++;
              p.appendChild(li.firstChild);
}
            _$jscoverage['plugins/list.js'][583]++;
            li.appendChild(p);
            _$jscoverage['plugins/list.js'][584]++;
            first = p;
          }
          _$jscoverage['plugins/list.js'][587]++;
          var span = me.document.createElement("span");
          _$jscoverage['plugins/list.js'][589]++;
          range.insertNode(span);
          _$jscoverage['plugins/list.js'][590]++;
          domUtils.breakParent(span, li);
          _$jscoverage['plugins/list.js'][592]++;
          var nextLi = span.nextSibling;
          _$jscoverage['plugins/list.js'][593]++;
          first = nextLi.firstChild;
          _$jscoverage['plugins/list.js'][595]++;
          if ((! first)) {
            _$jscoverage['plugins/list.js'][596]++;
            p = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][598]++;
            domUtils.fillNode(me.document, p);
            _$jscoverage['plugins/list.js'][599]++;
            nextLi.appendChild(p);
            _$jscoverage['plugins/list.js'][600]++;
            first = p;
          }
          _$jscoverage['plugins/list.js'][602]++;
          if (domUtils.isEmptyNode(first)) {
            _$jscoverage['plugins/list.js'][603]++;
            first.innerHTML = "";
            _$jscoverage['plugins/list.js'][604]++;
            domUtils.fillNode(me.document, first);
          }
          _$jscoverage['plugins/list.js'][607]++;
          range.setStart(first, 0).collapse(true).shrinkBoundary().select();
          _$jscoverage['plugins/list.js'][608]++;
          domUtils.remove(span);
          _$jscoverage['plugins/list.js'][609]++;
          var pre = nextLi.previousSibling;
          _$jscoverage['plugins/list.js'][610]++;
          if ((pre && domUtils.isEmptyBlock(pre))) {
            _$jscoverage['plugins/list.js'][611]++;
            pre.innerHTML = "<p></p>";
            _$jscoverage['plugins/list.js'][612]++;
            domUtils.fillNode(me.document, pre.firstChild);
          }
        }
        _$jscoverage['plugins/list.js'][617]++;
        preventAndSave();
      }
    }
  }
  _$jscoverage['plugins/list.js'][625]++;
  if ((keyCode == 8)) {
    _$jscoverage['plugins/list.js'][627]++;
    range = me.selection.getRange();
    _$jscoverage['plugins/list.js'][628]++;
    if ((range.collapsed && domUtils.isStartInblock(range))) {
      _$jscoverage['plugins/list.js'][629]++;
      tmpRange = range.cloneRange().trimBoundary();
      _$jscoverage['plugins/list.js'][630]++;
      li = domUtils.findParentByTagName(range.startContainer, "li", true);
      _$jscoverage['plugins/list.js'][632]++;
      if ((li && domUtils.isStartInblock(tmpRange))) {
        _$jscoverage['plugins/list.js'][633]++;
        start = domUtils.findParentByTagName(range.startContainer, "p", true);
        _$jscoverage['plugins/list.js'][634]++;
        if ((start && (start !== li.firstChild))) {
          _$jscoverage['plugins/list.js'][635]++;
          var parentList = domUtils.findParentByTagName(start, ["ol", "ul"]);
          _$jscoverage['plugins/list.js'][636]++;
          domUtils.breakParent(start, parentList);
          _$jscoverage['plugins/list.js'][637]++;
          clearEmptySibling(start);
          _$jscoverage['plugins/list.js'][638]++;
          me.fireEvent("contentchange");
          _$jscoverage['plugins/list.js'][639]++;
          range.setStart(start, 0).setCursor(false, true);
          _$jscoverage['plugins/list.js'][640]++;
          me.fireEvent("saveScene");
          _$jscoverage['plugins/list.js'][641]++;
          domUtils.preventDefault(evt);
          _$jscoverage['plugins/list.js'][642]++;
          return;
        }
        _$jscoverage['plugins/list.js'][645]++;
        if ((li && (pre = li.previousSibling))) {
          _$jscoverage['plugins/list.js'][646]++;
          if (((keyCode == 46) && li.childNodes.length)) {
            _$jscoverage['plugins/list.js'][647]++;
            return;
          }
          _$jscoverage['plugins/list.js'][650]++;
          if (dtd.$list[pre.tagName]) {
            _$jscoverage['plugins/list.js'][651]++;
            pre = pre.lastChild;
          }
          _$jscoverage['plugins/list.js'][653]++;
          (me.undoManger && me.undoManger.save());
          _$jscoverage['plugins/list.js'][654]++;
          first = li.firstChild;
          _$jscoverage['plugins/list.js'][655]++;
          if (domUtils.isBlockElm(first)) {
            _$jscoverage['plugins/list.js'][656]++;
            if (domUtils.isEmptyNode(first)) {
              _$jscoverage['plugins/list.js'][658]++;
              pre.appendChild(first);
              _$jscoverage['plugins/list.js'][659]++;
              range.setStart(first, 0).setCursor(false, true);
              _$jscoverage['plugins/list.js'][661]++;
              while (li.firstChild) {
                _$jscoverage['plugins/list.js'][662]++;
                pre.appendChild(li.firstChild);
}
            }
            else {
              _$jscoverage['plugins/list.js'][666]++;
              span = me.document.createElement("span");
              _$jscoverage['plugins/list.js'][667]++;
              range.insertNode(span);
              _$jscoverage['plugins/list.js'][669]++;
              if (domUtils.isEmptyBlock(pre)) {
                _$jscoverage['plugins/list.js'][670]++;
                pre.innerHTML = "";
              }
              _$jscoverage['plugins/list.js'][672]++;
              domUtils.moveChild(li, pre);
              _$jscoverage['plugins/list.js'][673]++;
              range.setStartBefore(span).collapse(true).select(true);
              _$jscoverage['plugins/list.js'][675]++;
              domUtils.remove(span);
            }
          }
          else {
            _$jscoverage['plugins/list.js'][679]++;
            if (domUtils.isEmptyNode(li)) {
              _$jscoverage['plugins/list.js'][680]++;
              var p = me.document.createElement("p");
              _$jscoverage['plugins/list.js'][681]++;
              pre.appendChild(p);
              _$jscoverage['plugins/list.js'][682]++;
              range.setStart(p, 0).setCursor();
            }
            else {
              _$jscoverage['plugins/list.js'][685]++;
              range.setEnd(pre, pre.childNodes.length).collapse().select(true);
              _$jscoverage['plugins/list.js'][686]++;
              while (li.firstChild) {
                _$jscoverage['plugins/list.js'][687]++;
                pre.appendChild(li.firstChild);
}
            }
          }
          _$jscoverage['plugins/list.js'][691]++;
          domUtils.remove(li);
          _$jscoverage['plugins/list.js'][692]++;
          me.fireEvent("contentchange");
          _$jscoverage['plugins/list.js'][693]++;
          me.fireEvent("saveScene");
          _$jscoverage['plugins/list.js'][694]++;
          domUtils.preventDefault(evt);
          _$jscoverage['plugins/list.js'][695]++;
          return;
        }
        _$jscoverage['plugins/list.js'][700]++;
        if ((li && (! li.previousSibling))) {
          _$jscoverage['plugins/list.js'][701]++;
          var parentList = li.parentNode;
          _$jscoverage['plugins/list.js'][702]++;
          var bk = range.createBookmark();
          _$jscoverage['plugins/list.js'][703]++;
          if (domUtils.isTagNode(parentList.parentNode, "ol ul")) {
            _$jscoverage['plugins/list.js'][704]++;
            parentList.parentNode.insertBefore(li, parentList);
            _$jscoverage['plugins/list.js'][705]++;
            if (domUtils.isEmptyNode(parentList)) {
              _$jscoverage['plugins/list.js'][706]++;
              domUtils.remove(parentList);
            }
          }
          else {
            _$jscoverage['plugins/list.js'][710]++;
            while (li.firstChild) {
              _$jscoverage['plugins/list.js'][711]++;
              parentList.parentNode.insertBefore(li.firstChild, parentList);
}
            _$jscoverage['plugins/list.js'][714]++;
            domUtils.remove(li);
            _$jscoverage['plugins/list.js'][715]++;
            if (domUtils.isEmptyNode(parentList)) {
              _$jscoverage['plugins/list.js'][716]++;
              domUtils.remove(parentList);
            }
          }
          _$jscoverage['plugins/list.js'][720]++;
          range.moveToBookmark(bk).setCursor(false, true);
          _$jscoverage['plugins/list.js'][721]++;
          me.fireEvent("contentchange");
          _$jscoverage['plugins/list.js'][722]++;
          me.fireEvent("saveScene");
          _$jscoverage['plugins/list.js'][723]++;
          domUtils.preventDefault(evt);
          _$jscoverage['plugins/list.js'][724]++;
          return;
        }
      }
    }
  }
}));
  _$jscoverage['plugins/list.js'][737]++;
  me.addListener("keyup", (function (type, evt) {
  _$jscoverage['plugins/list.js'][738]++;
  var keyCode = (evt.keyCode || evt.which);
  _$jscoverage['plugins/list.js'][739]++;
  if ((keyCode == 8)) {
    _$jscoverage['plugins/list.js'][740]++;
    var rng = me.selection.getRange(), list;
    _$jscoverage['plugins/list.js'][741]++;
    if ((list = domUtils.findParentByTagName(rng.startContainer, ["ol", "ul"], true))) {
      _$jscoverage['plugins/list.js'][742]++;
      adjustList(list, list.tagName.toLowerCase(), (getStyle(list) || domUtils.getComputedStyle(list, "list-style-type")), true);
    }
  }
}));
  _$jscoverage['plugins/list.js'][747]++;
  me.addListener("tabkeydown", (function () {
  _$jscoverage['plugins/list.js'][749]++;
  var range = me.selection.getRange();
  _$jscoverage['plugins/list.js'][752]++;
  function checkLevel(li) {
    _$jscoverage['plugins/list.js'][753]++;
    if ((me.options.maxListLevel != -1)) {
      _$jscoverage['plugins/list.js'][754]++;
      var level = li.parentNode, levelNum = 0;
      _$jscoverage['plugins/list.js'][755]++;
      while (/[ou]l/i.test(level.tagName)) {
        _$jscoverage['plugins/list.js'][756]++;
        (levelNum++);
        _$jscoverage['plugins/list.js'][757]++;
        level = level.parentNode;
}
      _$jscoverage['plugins/list.js'][759]++;
      if ((levelNum >= me.options.maxListLevel)) {
        _$jscoverage['plugins/list.js'][760]++;
        return true;
      }
    }
}
  _$jscoverage['plugins/list.js'][766]++;
  var li = domUtils.findParentByTagName(range.startContainer, "li", true);
  _$jscoverage['plugins/list.js'][767]++;
  if (li) {
    _$jscoverage['plugins/list.js'][769]++;
    var bk;
    _$jscoverage['plugins/list.js'][770]++;
    if (range.collapsed) {
      _$jscoverage['plugins/list.js'][771]++;
      if (checkLevel(li)) {
        _$jscoverage['plugins/list.js'][772]++;
        return true;
      }
      _$jscoverage['plugins/list.js'][773]++;
      var parentLi = li.parentNode, list = me.document.createElement(parentLi.tagName), index = utils.indexOf(listStyle[list.tagName], (getStyle(parentLi) || domUtils.getComputedStyle(parentLi, "list-style-type")));
      _$jscoverage['plugins/list.js'][776]++;
      index = (((index + 1) == listStyle[list.tagName].length)? 0: (index + 1));
      _$jscoverage['plugins/list.js'][777]++;
      var currentStyle = listStyle[list.tagName][index];
      _$jscoverage['plugins/list.js'][778]++;
      setListStyle(list, currentStyle);
      _$jscoverage['plugins/list.js'][779]++;
      if (domUtils.isStartInblock(range)) {
        _$jscoverage['plugins/list.js'][780]++;
        me.fireEvent("saveScene");
        _$jscoverage['plugins/list.js'][781]++;
        bk = range.createBookmark();
        _$jscoverage['plugins/list.js'][782]++;
        parentLi.insertBefore(list, li);
        _$jscoverage['plugins/list.js'][783]++;
        list.appendChild(li);
        _$jscoverage['plugins/list.js'][784]++;
        adjustList(list, list.tagName.toLowerCase(), currentStyle);
        _$jscoverage['plugins/list.js'][785]++;
        me.fireEvent("contentchange");
        _$jscoverage['plugins/list.js'][786]++;
        range.moveToBookmark(bk).select(true);
        _$jscoverage['plugins/list.js'][787]++;
        return true;
      }
    }
    else {
      _$jscoverage['plugins/list.js'][790]++;
      me.fireEvent("saveScene");
      _$jscoverage['plugins/list.js'][791]++;
      bk = range.createBookmark();
      _$jscoverage['plugins/list.js'][792]++;
      for (var i = 0, closeList, parents = domUtils.findParents(li), ci; (ci = parents[(i++)]);) {
        _$jscoverage['plugins/list.js'][793]++;
        if (domUtils.isTagNode(ci, "ol ul")) {
          _$jscoverage['plugins/list.js'][794]++;
          closeList = ci;
          _$jscoverage['plugins/list.js'][795]++;
          break;
        }
}
      _$jscoverage['plugins/list.js'][798]++;
      var current = li;
      _$jscoverage['plugins/list.js'][799]++;
      if (bk.end) {
        _$jscoverage['plugins/list.js'][800]++;
        while ((current && (! (domUtils.getPosition(current, bk.end) & domUtils.POSITION_FOLLOWING)))) {
          _$jscoverage['plugins/list.js'][801]++;
          if (checkLevel(current)) {
            _$jscoverage['plugins/list.js'][802]++;
            current = domUtils.getNextDomNode(current, false, null, (function (node) {
  _$jscoverage['plugins/list.js'][802]++;
  return (node !== closeList);
}));
            _$jscoverage['plugins/list.js'][803]++;
            continue;
          }
          _$jscoverage['plugins/list.js'][805]++;
          var parentLi = current.parentNode, list = me.document.createElement(parentLi.tagName), index = utils.indexOf(listStyle[list.tagName], (getStyle(parentLi) || domUtils.getComputedStyle(parentLi, "list-style-type")));
          _$jscoverage['plugins/list.js'][808]++;
          var currentIndex = (((index + 1) == listStyle[list.tagName].length)? 0: (index + 1));
          _$jscoverage['plugins/list.js'][809]++;
          var currentStyle = listStyle[list.tagName][currentIndex];
          _$jscoverage['plugins/list.js'][810]++;
          setListStyle(list, currentStyle);
          _$jscoverage['plugins/list.js'][811]++;
          parentLi.insertBefore(list, current);
          _$jscoverage['plugins/list.js'][812]++;
          while ((current && (! (domUtils.getPosition(current, bk.end) & domUtils.POSITION_FOLLOWING)))) {
            _$jscoverage['plugins/list.js'][813]++;
            li = current.nextSibling;
            _$jscoverage['plugins/list.js'][814]++;
            list.appendChild(current);
            _$jscoverage['plugins/list.js'][815]++;
            if (((! li) || domUtils.isTagNode(li, "ol ul"))) {
              _$jscoverage['plugins/list.js'][816]++;
              if (li) {
                _$jscoverage['plugins/list.js'][817]++;
                while ((li = li.firstChild)) {
                  _$jscoverage['plugins/list.js'][818]++;
                  if ((li.tagName == "LI")) {
                    _$jscoverage['plugins/list.js'][819]++;
                    break;
                  }
}
              }
              else {
                _$jscoverage['plugins/list.js'][823]++;
                li = domUtils.getNextDomNode(current, false, null, (function (node) {
  _$jscoverage['plugins/list.js'][823]++;
  return (node !== closeList);
}));
              }
              _$jscoverage['plugins/list.js'][825]++;
              break;
            }
            _$jscoverage['plugins/list.js'][827]++;
            current = li;
}
          _$jscoverage['plugins/list.js'][829]++;
          adjustList(list, list.tagName.toLowerCase(), currentStyle);
          _$jscoverage['plugins/list.js'][830]++;
          current = li;
}
      }
      _$jscoverage['plugins/list.js'][833]++;
      me.fireEvent("contentchange");
      _$jscoverage['plugins/list.js'][834]++;
      range.moveToBookmark(bk).select();
      _$jscoverage['plugins/list.js'][835]++;
      return true;
    }
  }
}));
  _$jscoverage['plugins/list.js'][840]++;
  function getLi(start) {
    _$jscoverage['plugins/list.js'][841]++;
    while ((start && (! domUtils.isBody(start)))) {
      _$jscoverage['plugins/list.js'][842]++;
      if ((start.nodeName == "TABLE")) {
        _$jscoverage['plugins/list.js'][843]++;
        return null;
      }
      _$jscoverage['plugins/list.js'][845]++;
      if ((start.nodeName == "LI")) {
        _$jscoverage['plugins/list.js'][846]++;
        return start;
      }
      _$jscoverage['plugins/list.js'][848]++;
      start = start.parentNode;
}
}
  _$jscoverage['plugins/list.js'][921]++;
  me.commands.insertorderedlist = (me.commands.insertunorderedlist = {execCommand: (function (command, style) {
  _$jscoverage['plugins/list.js'][925]++;
  if ((! style)) {
    _$jscoverage['plugins/list.js'][926]++;
    style = ((command.toLowerCase() == "insertorderedlist")? "decimal": "disc");
  }
  _$jscoverage['plugins/list.js'][928]++;
  var me = this, range = this.selection.getRange(), filterFn = (function (node) {
  _$jscoverage['plugins/list.js'][931]++;
  return ((node.nodeType == 1)? (node.tagName.toLowerCase() != "br"): (! domUtils.isWhitespace(node)));
}), tag = ((command.toLowerCase() == "insertorderedlist")? "ol": "ul"), frag = me.document.createDocumentFragment();
  _$jscoverage['plugins/list.js'][937]++;
  range.adjustmentBoundary().shrinkBoundary();
  _$jscoverage['plugins/list.js'][938]++;
  var bko = range.createBookmark(true), start = getLi(me.document.getElementById(bko.start)), modifyStart = 0, end = getLi(me.document.getElementById(bko.end)), modifyEnd = 0, startParent, endParent, list, tmp;
  _$jscoverage['plugins/list.js'][946]++;
  if ((start || end)) {
    _$jscoverage['plugins/list.js'][947]++;
    (start && (startParent = start.parentNode));
    _$jscoverage['plugins/list.js'][948]++;
    if ((! bko.end)) {
      _$jscoverage['plugins/list.js'][949]++;
      end = start;
    }
    _$jscoverage['plugins/list.js'][951]++;
    (end && (endParent = end.parentNode));
    _$jscoverage['plugins/list.js'][953]++;
    if ((startParent === endParent)) {
      _$jscoverage['plugins/list.js'][954]++;
      while ((start !== end)) {
        _$jscoverage['plugins/list.js'][955]++;
        tmp = start;
        _$jscoverage['plugins/list.js'][956]++;
        start = start.nextSibling;
        _$jscoverage['plugins/list.js'][957]++;
        if ((! domUtils.isBlockElm(tmp.firstChild))) {
          _$jscoverage['plugins/list.js'][958]++;
          var p = me.document.createElement("p");
          _$jscoverage['plugins/list.js'][959]++;
          while (tmp.firstChild) {
            _$jscoverage['plugins/list.js'][960]++;
            p.appendChild(tmp.firstChild);
}
          _$jscoverage['plugins/list.js'][962]++;
          tmp.appendChild(p);
        }
        _$jscoverage['plugins/list.js'][964]++;
        frag.appendChild(tmp);
}
      _$jscoverage['plugins/list.js'][966]++;
      tmp = me.document.createElement("span");
      _$jscoverage['plugins/list.js'][967]++;
      startParent.insertBefore(tmp, end);
      _$jscoverage['plugins/list.js'][968]++;
      if ((! domUtils.isBlockElm(end.firstChild))) {
        _$jscoverage['plugins/list.js'][969]++;
        p = me.document.createElement("p");
        _$jscoverage['plugins/list.js'][970]++;
        while (end.firstChild) {
          _$jscoverage['plugins/list.js'][971]++;
          p.appendChild(end.firstChild);
}
        _$jscoverage['plugins/list.js'][973]++;
        end.appendChild(p);
      }
      _$jscoverage['plugins/list.js'][975]++;
      frag.appendChild(end);
      _$jscoverage['plugins/list.js'][976]++;
      domUtils.breakParent(tmp, startParent);
      _$jscoverage['plugins/list.js'][977]++;
      if (domUtils.isEmptyNode(tmp.previousSibling)) {
        _$jscoverage['plugins/list.js'][978]++;
        domUtils.remove(tmp.previousSibling);
      }
      _$jscoverage['plugins/list.js'][980]++;
      if (domUtils.isEmptyNode(tmp.nextSibling)) {
        _$jscoverage['plugins/list.js'][981]++;
        domUtils.remove(tmp.nextSibling);
      }
      _$jscoverage['plugins/list.js'][983]++;
      var nodeStyle = (getStyle(startParent) || domUtils.getComputedStyle(startParent, "list-style-type") || ((command.toLowerCase() == "insertorderedlist")? "decimal": "disc"));
      _$jscoverage['plugins/list.js'][984]++;
      if (((startParent.tagName.toLowerCase() == tag) && (nodeStyle == style))) {
        _$jscoverage['plugins/list.js'][985]++;
        for (var i = 0, ci, tmpFrag = me.document.createDocumentFragment(); (ci = frag.childNodes[(i++)]);) {
          _$jscoverage['plugins/list.js'][986]++;
          if (domUtils.isTagNode(ci, "ol ul")) {
            _$jscoverage['plugins/list.js'][987]++;
            utils.each(domUtils.getElementsByTagName(ci, "li"), (function (li) {
  _$jscoverage['plugins/list.js'][988]++;
  while (li.firstChild) {
    _$jscoverage['plugins/list.js'][989]++;
    tmpFrag.appendChild(li.firstChild);
}
}));
          }
          else {
            _$jscoverage['plugins/list.js'][994]++;
            while (ci.firstChild) {
              _$jscoverage['plugins/list.js'][995]++;
              tmpFrag.appendChild(ci.firstChild);
}
          }
}
        _$jscoverage['plugins/list.js'][1000]++;
        tmp.parentNode.insertBefore(tmpFrag, tmp);
      }
      else {
        _$jscoverage['plugins/list.js'][1002]++;
        list = me.document.createElement(tag);
        _$jscoverage['plugins/list.js'][1003]++;
        setListStyle(list, style);
        _$jscoverage['plugins/list.js'][1004]++;
        list.appendChild(frag);
        _$jscoverage['plugins/list.js'][1005]++;
        tmp.parentNode.insertBefore(list, tmp);
      }
      _$jscoverage['plugins/list.js'][1008]++;
      domUtils.remove(tmp);
      _$jscoverage['plugins/list.js'][1009]++;
      (list && adjustList(list, tag, style));
      _$jscoverage['plugins/list.js'][1010]++;
      range.moveToBookmark(bko).select();
      _$jscoverage['plugins/list.js'][1011]++;
      return;
    }
    _$jscoverage['plugins/list.js'][1014]++;
    if (start) {
      _$jscoverage['plugins/list.js'][1015]++;
      while (start) {
        _$jscoverage['plugins/list.js'][1016]++;
        tmp = start.nextSibling;
        _$jscoverage['plugins/list.js'][1017]++;
        if (domUtils.isTagNode(start, "ol ul")) {
          _$jscoverage['plugins/list.js'][1018]++;
          frag.appendChild(start);
        }
        else {
          _$jscoverage['plugins/list.js'][1020]++;
          var tmpfrag = me.document.createDocumentFragment(), hasBlock = 0;
          _$jscoverage['plugins/list.js'][1022]++;
          while (start.firstChild) {
            _$jscoverage['plugins/list.js'][1023]++;
            if (domUtils.isBlockElm(start.firstChild)) {
              _$jscoverage['plugins/list.js'][1024]++;
              hasBlock = 1;
            }
            _$jscoverage['plugins/list.js'][1026]++;
            tmpfrag.appendChild(start.firstChild);
}
          _$jscoverage['plugins/list.js'][1028]++;
          if ((! hasBlock)) {
            _$jscoverage['plugins/list.js'][1029]++;
            var tmpP = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][1030]++;
            tmpP.appendChild(tmpfrag);
            _$jscoverage['plugins/list.js'][1031]++;
            frag.appendChild(tmpP);
          }
          else {
            _$jscoverage['plugins/list.js'][1033]++;
            frag.appendChild(tmpfrag);
          }
          _$jscoverage['plugins/list.js'][1035]++;
          domUtils.remove(start);
        }
        _$jscoverage['plugins/list.js'][1038]++;
        start = tmp;
}
      _$jscoverage['plugins/list.js'][1040]++;
      startParent.parentNode.insertBefore(frag, startParent.nextSibling);
      _$jscoverage['plugins/list.js'][1041]++;
      if (domUtils.isEmptyNode(startParent)) {
        _$jscoverage['plugins/list.js'][1042]++;
        range.setStartBefore(startParent);
        _$jscoverage['plugins/list.js'][1043]++;
        domUtils.remove(startParent);
      }
      else {
        _$jscoverage['plugins/list.js'][1045]++;
        range.setStartAfter(startParent);
      }
      _$jscoverage['plugins/list.js'][1047]++;
      modifyStart = 1;
    }
    _$jscoverage['plugins/list.js'][1050]++;
    if ((end && domUtils.inDoc(endParent, me.document))) {
      _$jscoverage['plugins/list.js'][1052]++;
      start = endParent.firstChild;
      _$jscoverage['plugins/list.js'][1053]++;
      while ((start && (start !== end))) {
        _$jscoverage['plugins/list.js'][1054]++;
        tmp = start.nextSibling;
        _$jscoverage['plugins/list.js'][1055]++;
        if (domUtils.isTagNode(start, "ol ul")) {
          _$jscoverage['plugins/list.js'][1056]++;
          frag.appendChild(start);
        }
        else {
          _$jscoverage['plugins/list.js'][1058]++;
          tmpfrag = me.document.createDocumentFragment();
          _$jscoverage['plugins/list.js'][1059]++;
          hasBlock = 0;
          _$jscoverage['plugins/list.js'][1060]++;
          while (start.firstChild) {
            _$jscoverage['plugins/list.js'][1061]++;
            if (domUtils.isBlockElm(start.firstChild)) {
              _$jscoverage['plugins/list.js'][1062]++;
              hasBlock = 1;
            }
            _$jscoverage['plugins/list.js'][1064]++;
            tmpfrag.appendChild(start.firstChild);
}
          _$jscoverage['plugins/list.js'][1066]++;
          if ((! hasBlock)) {
            _$jscoverage['plugins/list.js'][1067]++;
            tmpP = me.document.createElement("p");
            _$jscoverage['plugins/list.js'][1068]++;
            tmpP.appendChild(tmpfrag);
            _$jscoverage['plugins/list.js'][1069]++;
            frag.appendChild(tmpP);
          }
          else {
            _$jscoverage['plugins/list.js'][1071]++;
            frag.appendChild(tmpfrag);
          }
          _$jscoverage['plugins/list.js'][1073]++;
          domUtils.remove(start);
        }
        _$jscoverage['plugins/list.js'][1075]++;
        start = tmp;
}
      _$jscoverage['plugins/list.js'][1077]++;
      var tmpDiv = domUtils.createElement(me.document, "div", {"tmpDiv": 1});
      _$jscoverage['plugins/list.js'][1080]++;
      domUtils.moveChild(end, tmpDiv);
      _$jscoverage['plugins/list.js'][1082]++;
      frag.appendChild(tmpDiv);
      _$jscoverage['plugins/list.js'][1083]++;
      domUtils.remove(end);
      _$jscoverage['plugins/list.js'][1084]++;
      endParent.parentNode.insertBefore(frag, endParent);
      _$jscoverage['plugins/list.js'][1085]++;
      range.setEndBefore(endParent);
      _$jscoverage['plugins/list.js'][1086]++;
      if (domUtils.isEmptyNode(endParent)) {
        _$jscoverage['plugins/list.js'][1087]++;
        domUtils.remove(endParent);
      }
      _$jscoverage['plugins/list.js'][1090]++;
      modifyEnd = 1;
    }
  }
  _$jscoverage['plugins/list.js'][1096]++;
  if ((! modifyStart)) {
    _$jscoverage['plugins/list.js'][1097]++;
    range.setStartBefore(me.document.getElementById(bko.start));
  }
  _$jscoverage['plugins/list.js'][1099]++;
  if ((bko.end && (! modifyEnd))) {
    _$jscoverage['plugins/list.js'][1100]++;
    range.setEndAfter(me.document.getElementById(bko.end));
  }
  _$jscoverage['plugins/list.js'][1102]++;
  range.enlarge(true, (function (node) {
  _$jscoverage['plugins/list.js'][1103]++;
  return notExchange[node.tagName];
}));
  _$jscoverage['plugins/list.js'][1106]++;
  frag = me.document.createDocumentFragment();
  _$jscoverage['plugins/list.js'][1108]++;
  var bk = range.createBookmark(), current = domUtils.getNextDomNode(bk.start, false, filterFn), tmpRange = range.cloneRange(), tmpNode, block = domUtils.isBlockElm;
  _$jscoverage['plugins/list.js'][1114]++;
  while ((current && (current !== bk.end) && (domUtils.getPosition(current, bk.end) & domUtils.POSITION_PRECEDING))) {
    _$jscoverage['plugins/list.js'][1116]++;
    if (((current.nodeType == 3) || dtd.li[current.tagName])) {
      _$jscoverage['plugins/list.js'][1117]++;
      if (((current.nodeType == 1) && dtd.$list[current.tagName])) {
        _$jscoverage['plugins/list.js'][1118]++;
        while (current.firstChild) {
          _$jscoverage['plugins/list.js'][1119]++;
          frag.appendChild(current.firstChild);
}
        _$jscoverage['plugins/list.js'][1121]++;
        tmpNode = domUtils.getNextDomNode(current, false, filterFn);
        _$jscoverage['plugins/list.js'][1122]++;
        domUtils.remove(current);
        _$jscoverage['plugins/list.js'][1123]++;
        current = tmpNode;
        _$jscoverage['plugins/list.js'][1124]++;
        continue;
      }
      _$jscoverage['plugins/list.js'][1127]++;
      tmpNode = current;
      _$jscoverage['plugins/list.js'][1128]++;
      tmpRange.setStartBefore(current);
      _$jscoverage['plugins/list.js'][1130]++;
      while ((current && (current !== bk.end) && ((! block(current)) || domUtils.isBookmarkNode(current)))) {
        _$jscoverage['plugins/list.js'][1131]++;
        tmpNode = current;
        _$jscoverage['plugins/list.js'][1132]++;
        current = domUtils.getNextDomNode(current, false, null, (function (node) {
  _$jscoverage['plugins/list.js'][1133]++;
  return (! notExchange[node.tagName]);
}));
}
      _$jscoverage['plugins/list.js'][1137]++;
      if ((current && block(current))) {
        _$jscoverage['plugins/list.js'][1138]++;
        tmp = domUtils.getNextDomNode(tmpNode, false, filterFn);
        _$jscoverage['plugins/list.js'][1139]++;
        if ((tmp && domUtils.isBookmarkNode(tmp))) {
          _$jscoverage['plugins/list.js'][1140]++;
          current = domUtils.getNextDomNode(tmp, false, filterFn);
          _$jscoverage['plugins/list.js'][1141]++;
          tmpNode = tmp;
        }
      }
      _$jscoverage['plugins/list.js'][1144]++;
      tmpRange.setEndAfter(tmpNode);
      _$jscoverage['plugins/list.js'][1146]++;
      current = domUtils.getNextDomNode(tmpNode, false, filterFn);
      _$jscoverage['plugins/list.js'][1148]++;
      var li = range.document.createElement("li");
      _$jscoverage['plugins/list.js'][1150]++;
      li.appendChild(tmpRange.extractContents());
      _$jscoverage['plugins/list.js'][1151]++;
      if (domUtils.isEmptyNode(li)) {
        _$jscoverage['plugins/list.js'][1152]++;
        var tmpNode = range.document.createElement("p");
        _$jscoverage['plugins/list.js'][1153]++;
        while (li.firstChild) {
          _$jscoverage['plugins/list.js'][1154]++;
          tmpNode.appendChild(li.firstChild);
}
        _$jscoverage['plugins/list.js'][1156]++;
        li.appendChild(tmpNode);
      }
      _$jscoverage['plugins/list.js'][1158]++;
      frag.appendChild(li);
    }
    else {
      _$jscoverage['plugins/list.js'][1160]++;
      current = domUtils.getNextDomNode(current, true, filterFn);
    }
}
  _$jscoverage['plugins/list.js'][1163]++;
  range.moveToBookmark(bk).collapse(true);
  _$jscoverage['plugins/list.js'][1164]++;
  list = me.document.createElement(tag);
  _$jscoverage['plugins/list.js'][1165]++;
  setListStyle(list, style);
  _$jscoverage['plugins/list.js'][1166]++;
  list.appendChild(frag);
  _$jscoverage['plugins/list.js'][1167]++;
  range.insertNode(list);
  _$jscoverage['plugins/list.js'][1169]++;
  adjustList(list, tag, style);
  _$jscoverage['plugins/list.js'][1171]++;
  for (var i = 0, ci = ci, tmpDivs = domUtils.getElementsByTagName(list, "div"); (ci = tmpDivs[(i++)]);) {
    _$jscoverage['plugins/list.js'][1172]++;
    if (ci.getAttribute("tmpDiv")) {
      _$jscoverage['plugins/list.js'][1173]++;
      domUtils.remove(ci, true);
    }
}
  _$jscoverage['plugins/list.js'][1176]++;
  range.moveToBookmark(bko).select();
}), queryCommandState: (function (command) {
  _$jscoverage['plugins/list.js'][1180]++;
  var tag = ((command.toLowerCase() == "insertorderedlist")? "ol": "ul");
  _$jscoverage['plugins/list.js'][1181]++;
  var path = this.selection.getStartElementPath();
  _$jscoverage['plugins/list.js'][1182]++;
  for (var i = 0, ci; (ci = path[(i++)]);) {
    _$jscoverage['plugins/list.js'][1183]++;
    if ((ci.nodeName == "TABLE")) {
      _$jscoverage['plugins/list.js'][1184]++;
      return 0;
    }
    _$jscoverage['plugins/list.js'][1186]++;
    if ((tag == ci.nodeName.toLowerCase())) {
      _$jscoverage['plugins/list.js'][1187]++;
      return 1;
    }
    _$jscoverage['plugins/list.js'][1188]++;
    ;
}
  _$jscoverage['plugins/list.js'][1190]++;
  return 0;
}), queryCommandValue: (function (command) {
  _$jscoverage['plugins/list.js'][1194]++;
  var tag = ((command.toLowerCase() == "insertorderedlist")? "ol": "ul");
  _$jscoverage['plugins/list.js'][1195]++;
  var path = this.selection.getStartElementPath(), node;
  _$jscoverage['plugins/list.js'][1197]++;
  for (var i = 0, ci; (ci = path[(i++)]);) {
    _$jscoverage['plugins/list.js'][1198]++;
    if ((ci.nodeName == "TABLE")) {
      _$jscoverage['plugins/list.js'][1199]++;
      node = null;
      _$jscoverage['plugins/list.js'][1200]++;
      break;
    }
    _$jscoverage['plugins/list.js'][1202]++;
    if ((tag == ci.nodeName.toLowerCase())) {
      _$jscoverage['plugins/list.js'][1203]++;
      node = ci;
      _$jscoverage['plugins/list.js'][1204]++;
      break;
    }
    _$jscoverage['plugins/list.js'][1205]++;
    ;
}
  _$jscoverage['plugins/list.js'][1207]++;
  return (node? (getStyle(node) || domUtils.getComputedStyle(node, "list-style-type")): null);
})});
});
