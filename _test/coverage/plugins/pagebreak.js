/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/pagebreak.js']) {
  _$jscoverage['plugins/pagebreak.js'] = [];
  _$jscoverage['plugins/pagebreak.js'][7] = 0;
  _$jscoverage['plugins/pagebreak.js'][8] = 0;
  _$jscoverage['plugins/pagebreak.js'][10] = 0;
  _$jscoverage['plugins/pagebreak.js'][12] = 0;
  _$jscoverage['plugins/pagebreak.js'][13] = 0;
  _$jscoverage['plugins/pagebreak.js'][14] = 0;
  _$jscoverage['plugins/pagebreak.js'][16] = 0;
  _$jscoverage['plugins/pagebreak.js'][17] = 0;
  _$jscoverage['plugins/pagebreak.js'][18] = 0;
  _$jscoverage['plugins/pagebreak.js'][20] = 0;
  _$jscoverage['plugins/pagebreak.js'][21] = 0;
  _$jscoverage['plugins/pagebreak.js'][26] = 0;
  _$jscoverage['plugins/pagebreak.js'][27] = 0;
  _$jscoverage['plugins/pagebreak.js'][29] = 0;
  _$jscoverage['plugins/pagebreak.js'][30] = 0;
  _$jscoverage['plugins/pagebreak.js'][32] = 0;
  _$jscoverage['plugins/pagebreak.js'][33] = 0;
  _$jscoverage['plugins/pagebreak.js'][34] = 0;
  _$jscoverage['plugins/pagebreak.js'][35] = 0;
  _$jscoverage['plugins/pagebreak.js'][36] = 0;
  _$jscoverage['plugins/pagebreak.js'][37] = 0;
  _$jscoverage['plugins/pagebreak.js'][41] = 0;
  _$jscoverage['plugins/pagebreak.js'][42] = 0;
  _$jscoverage['plugins/pagebreak.js'][43] = 0;
  _$jscoverage['plugins/pagebreak.js'][44] = 0;
  _$jscoverage['plugins/pagebreak.js'][45] = 0;
  _$jscoverage['plugins/pagebreak.js'][46] = 0;
  _$jscoverage['plugins/pagebreak.js'][62] = 0;
  _$jscoverage['plugins/pagebreak.js'][64] = 0;
  _$jscoverage['plugins/pagebreak.js'][65] = 0;
  _$jscoverage['plugins/pagebreak.js'][70] = 0;
  _$jscoverage['plugins/pagebreak.js'][72] = 0;
  _$jscoverage['plugins/pagebreak.js'][75] = 0;
  _$jscoverage['plugins/pagebreak.js'][76] = 0;
  _$jscoverage['plugins/pagebreak.js'][78] = 0;
  _$jscoverage['plugins/pagebreak.js'][79] = 0;
  _$jscoverage['plugins/pagebreak.js'][80] = 0;
  _$jscoverage['plugins/pagebreak.js'][88] = 0;
  _$jscoverage['plugins/pagebreak.js'][89] = 0;
  _$jscoverage['plugins/pagebreak.js'][92] = 0;
  _$jscoverage['plugins/pagebreak.js'][93] = 0;
  _$jscoverage['plugins/pagebreak.js'][96] = 0;
  _$jscoverage['plugins/pagebreak.js'][97] = 0;
  _$jscoverage['plugins/pagebreak.js'][98] = 0;
  _$jscoverage['plugins/pagebreak.js'][102] = 0;
  _$jscoverage['plugins/pagebreak.js'][107] = 0;
  _$jscoverage['plugins/pagebreak.js'][108] = 0;
  _$jscoverage['plugins/pagebreak.js'][109] = 0;
  _$jscoverage['plugins/pagebreak.js'][110] = 0;
  _$jscoverage['plugins/pagebreak.js'][111] = 0;
  _$jscoverage['plugins/pagebreak.js'][112] = 0;
  _$jscoverage['plugins/pagebreak.js'][113] = 0;
  _$jscoverage['plugins/pagebreak.js'][117] = 0;
  _$jscoverage['plugins/pagebreak.js'][119] = 0;
  _$jscoverage['plugins/pagebreak.js'][120] = 0;
  _$jscoverage['plugins/pagebreak.js'][121] = 0;
  _$jscoverage['plugins/pagebreak.js'][122] = 0;
  _$jscoverage['plugins/pagebreak.js'][123] = 0;
  _$jscoverage['plugins/pagebreak.js'][124] = 0;
  _$jscoverage['plugins/pagebreak.js'][126] = 0;
  _$jscoverage['plugins/pagebreak.js'][128] = 0;
  _$jscoverage['plugins/pagebreak.js'][129] = 0;
  _$jscoverage['plugins/pagebreak.js'][130] = 0;
  _$jscoverage['plugins/pagebreak.js'][131] = 0;
  _$jscoverage['plugins/pagebreak.js'][133] = 0;
  _$jscoverage['plugins/pagebreak.js'][136] = 0;
  _$jscoverage['plugins/pagebreak.js'][137] = 0;
  _$jscoverage['plugins/pagebreak.js'][139] = 0;
  _$jscoverage['plugins/pagebreak.js'][140] = 0;
  _$jscoverage['plugins/pagebreak.js'][141] = 0;
  _$jscoverage['plugins/pagebreak.js'][143] = 0;
  _$jscoverage['plugins/pagebreak.js'][144] = 0;
  _$jscoverage['plugins/pagebreak.js'][146] = 0;
  _$jscoverage['plugins/pagebreak.js'][148] = 0;
  _$jscoverage['plugins/pagebreak.js'][151] = 0;
}
_$jscoverage['plugins/pagebreak.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * &#20998;&#39029;&#21151;&#33021;&#25554;&#20214;</span>","<span class=\"c\"> * @file</span>","<span class=\"c\"> * @since 1.2.6.1</span>","<span class=\"c\"> */</span>","","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'pagebreak'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","        notBreakTags <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">'td'</span><span class=\"k\">];</span>","    me<span class=\"k\">.</span>setOpt<span class=\"k\">(</span><span class=\"s\">'pageBreakTag'</span><span class=\"k\">,</span><span class=\"s\">'_ueditor_page_break_tag_'</span><span class=\"k\">);</span>","","    <span class=\"k\">function</span> fillNode<span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>node<span class=\"k\">))</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> firstChild <span class=\"k\">=</span> node<span class=\"k\">.</span>firstChild<span class=\"k\">,</span>tmpNode<span class=\"k\">;</span>","","            <span class=\"k\">while</span><span class=\"k\">(</span>firstChild <span class=\"k\">&amp;&amp;</span> firstChild<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>firstChild<span class=\"k\">))</span><span class=\"k\">{</span>","                tmpNode <span class=\"k\">=</span> firstChild<span class=\"k\">;</span>","                firstChild <span class=\"k\">=</span> firstChild<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">!</span>tmpNode <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>tmpNode <span class=\"k\">=</span> node<span class=\"k\">);</span>","            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span>tmpNode<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","    <span class=\"c\">//&#20998;&#39029;&#31526;&#26679;&#24335;&#28155;&#21152;</span>","","    me<span class=\"k\">.</span>ready<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        utils<span class=\"k\">.</span>cssRule<span class=\"k\">(</span><span class=\"s\">'pagebreak'</span><span class=\"k\">,</span><span class=\"s\">'.pagebreak{display:block;clear:both !important;cursor:default !important;width: 100% !important;margin:0;}'</span><span class=\"k\">,</span>me<span class=\"k\">.</span>document<span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">function</span> isHr<span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","        <span class=\"k\">return</span> node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'HR'</span> <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>className <span class=\"k\">==</span> <span class=\"s\">'pagebreak'</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","    me<span class=\"k\">.</span>addInputRule<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>root<span class=\"k\">)</span><span class=\"k\">{</span>","        root<span class=\"k\">.</span>traversal<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'text'</span> <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>data <span class=\"k\">==</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>pageBreakTag<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> hr <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'&lt;hr class=\"pagebreak\" noshade=\"noshade\" size=\"5\" style=\"-webkit-user-select: none;\"&gt;'</span><span class=\"k\">);</span>","                node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>hr<span class=\"k\">,</span>node<span class=\"k\">);</span>","                node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">)</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    me<span class=\"k\">.</span>addOutputRule<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>node<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'hr'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>n<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>n<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"s\">'pagebreak'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> txt <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createText<span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>pageBreakTag<span class=\"k\">);</span>","                n<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>txt<span class=\"k\">,</span>n<span class=\"k\">);</span>","                n<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>n<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#25554;&#20837;&#20998;&#39029;&#31526;&#65292;&#22312;&#24403;&#21069;&#20809;&#26631;&#25554;&#20837;&#20998;&#39029;&#31526;</span>","<span class=\"c\">     * @command pagebreak</span>","<span class=\"c\">     * @method execCommand</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.execCommand( 'pagebreak'); //&#25554;&#20837;&#19968;&#20010;hr&#26631;&#31614;&#65292;&#24102;&#26377;&#26679;&#24335;&#31867;&#21517;pagebreak</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    me<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'pagebreak'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>hr <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'hr'</span><span class=\"k\">);</span>","            domUtils<span class=\"k\">.</span>setAttributes<span class=\"k\">(</span>hr<span class=\"k\">,</span><span class=\"k\">{</span>","                <span class=\"s\">'class'</span> <span class=\"k\">:</span> <span class=\"s\">'pagebreak'</span><span class=\"k\">,</span>","                noshade<span class=\"k\">:</span><span class=\"s\">\"noshade\"</span><span class=\"k\">,</span>","                size<span class=\"k\">:</span><span class=\"s\">\"5\"</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","            domUtils<span class=\"k\">.</span>unSelectable<span class=\"k\">(</span>hr<span class=\"k\">);</span>","            <span class=\"c\">//table&#21333;&#29420;&#22788;&#29702;</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> notBreakTags<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">),</span>","","                parents <span class=\"k\">=</span> <span class=\"k\">[],</span> pN<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">switch</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>tagName<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">case</span> <span class=\"s\">'TD'</span><span class=\"k\">:</span>","                        pN <span class=\"k\">=</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>pN<span class=\"k\">.</span>previousSibling<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>pN<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">);</span>","<span class=\"c\">//                            var tableWrapDiv = table.parentNode;</span>","<span class=\"c\">//                            if(tableWrapDiv &amp;&amp; tableWrapDiv.nodeType == 1</span>","<span class=\"c\">//                                &amp;&amp; tableWrapDiv.tagName == 'DIV'</span>","<span class=\"c\">//                                &amp;&amp; tableWrapDiv.getAttribute('dropdrag')</span>","<span class=\"c\">//                                ){</span>","<span class=\"c\">//                                domUtils.remove(tableWrapDiv,true);</span>","<span class=\"c\">//                            }</span>","                            table<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>hr<span class=\"k\">,</span> table<span class=\"k\">);</span>","                            parents <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParents<span class=\"k\">(</span>hr<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            pN<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>hr<span class=\"k\">,</span> pN<span class=\"k\">);</span>","                            parents <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParents<span class=\"k\">(</span>hr<span class=\"k\">);</span>","","                        <span class=\"k\">}</span>","                        pN <span class=\"k\">=</span> parents<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">];</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>hr <span class=\"k\">!==</span> pN<span class=\"k\">)</span> <span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>breakParent<span class=\"k\">(</span>hr<span class=\"k\">,</span> pN<span class=\"k\">);</span>","","                        <span class=\"k\">}</span>","                        <span class=\"c\">//table&#35201;&#37325;&#20889;&#32465;&#23450;&#19968;&#19979;&#25302;&#25341;</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'afteradjusttable'</span><span class=\"k\">,</span>me<span class=\"k\">.</span>document<span class=\"k\">);</span>","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                <span class=\"k\">if</span> <span class=\"k\">(!</span>range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span> <span class=\"k\">{</span>","                    range<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","                    <span class=\"k\">var</span> start <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">;</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBody<span class=\"k\">(</span>start<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>start<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>start<span class=\"k\">))</span> <span class=\"k\">{</span>","                        range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>start<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>start<span class=\"k\">);</span>","                        start <span class=\"k\">=</span> range<span class=\"k\">.</span>startContainer<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                <span class=\"k\">}</span>","                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>hr<span class=\"k\">);</span>","","                <span class=\"k\">var</span> pN <span class=\"k\">=</span> hr<span class=\"k\">.</span>parentNode<span class=\"k\">,</span> nextNode<span class=\"k\">;</span>","                <span class=\"k\">while</span> <span class=\"k\">(!</span>domUtils<span class=\"k\">.</span>isBody<span class=\"k\">(</span>pN<span class=\"k\">))</span> <span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>breakParent<span class=\"k\">(</span>hr<span class=\"k\">,</span> pN<span class=\"k\">);</span>","                    nextNode <span class=\"k\">=</span> hr<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>nextNode <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>nextNode<span class=\"k\">))</span> <span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>nextNode<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    pN <span class=\"k\">=</span> hr<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                nextNode <span class=\"k\">=</span> hr<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                <span class=\"k\">var</span> pre <span class=\"k\">=</span> hr<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","                <span class=\"k\">if</span><span class=\"k\">(</span>isHr<span class=\"k\">(</span>pre<span class=\"k\">))</span><span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>pre<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    pre <span class=\"k\">&amp;&amp;</span> fillNode<span class=\"k\">(</span>pre<span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span><span class=\"k\">(!</span>nextNode<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">var</span> p <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","","                    hr<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>p<span class=\"k\">);</span>","                    domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span>p<span class=\"k\">);</span>","                    range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>p<span class=\"k\">,</span><span class=\"s\">0</span><span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                    <span class=\"k\">if</span><span class=\"k\">(</span>isHr<span class=\"k\">(</span>nextNode<span class=\"k\">))</span><span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>nextNode<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                        fillNode<span class=\"k\">(</span>nextNode<span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    range<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span>hr<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                range<span class=\"k\">.</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"];
_$jscoverage['plugins/pagebreak.js'][7]++;
UE.plugins.pagebreak = (function () {
  _$jscoverage['plugins/pagebreak.js'][8]++;
  var me = this, notBreakTags = ["td"];
  _$jscoverage['plugins/pagebreak.js'][10]++;
  me.setOpt("pageBreakTag", "_ueditor_page_break_tag_");
  _$jscoverage['plugins/pagebreak.js'][12]++;
  function fillNode(node) {
    _$jscoverage['plugins/pagebreak.js'][13]++;
    if (domUtils.isEmptyBlock(node)) {
      _$jscoverage['plugins/pagebreak.js'][14]++;
      var firstChild = node.firstChild, tmpNode;
      _$jscoverage['plugins/pagebreak.js'][16]++;
      while ((firstChild && (firstChild.nodeType == 1) && domUtils.isEmptyBlock(firstChild))) {
        _$jscoverage['plugins/pagebreak.js'][17]++;
        tmpNode = firstChild;
        _$jscoverage['plugins/pagebreak.js'][18]++;
        firstChild = firstChild.firstChild;
}
      _$jscoverage['plugins/pagebreak.js'][20]++;
      ((! tmpNode) && (tmpNode = node));
      _$jscoverage['plugins/pagebreak.js'][21]++;
      domUtils.fillNode(me.document, tmpNode);
    }
}
  _$jscoverage['plugins/pagebreak.js'][26]++;
  me.ready((function () {
  _$jscoverage['plugins/pagebreak.js'][27]++;
  utils.cssRule("pagebreak", ".pagebreak{display:block;clear:both !important;cursor:default !important;width: 100% !important;margin:0;}", me.document);
}));
  _$jscoverage['plugins/pagebreak.js'][29]++;
  function isHr(node) {
    _$jscoverage['plugins/pagebreak.js'][30]++;
    return (node && (node.nodeType == 1) && (node.tagName == "HR") && (node.className == "pagebreak"));
}
  _$jscoverage['plugins/pagebreak.js'][32]++;
  me.addInputRule((function (root) {
  _$jscoverage['plugins/pagebreak.js'][33]++;
  root.traversal((function (node) {
  _$jscoverage['plugins/pagebreak.js'][34]++;
  if (((node.type == "text") && (node.data == me.options.pageBreakTag))) {
    _$jscoverage['plugins/pagebreak.js'][35]++;
    var hr = UE.uNode.createElement("<hr class=\"pagebreak\" noshade=\"noshade\" size=\"5\" style=\"-webkit-user-select: none;\">");
    _$jscoverage['plugins/pagebreak.js'][36]++;
    node.parentNode.insertBefore(hr, node);
    _$jscoverage['plugins/pagebreak.js'][37]++;
    node.parentNode.removeChild(node);
  }
}));
}));
  _$jscoverage['plugins/pagebreak.js'][41]++;
  me.addOutputRule((function (node) {
  _$jscoverage['plugins/pagebreak.js'][42]++;
  utils.each(node.getNodesByTagName("hr"), (function (n) {
  _$jscoverage['plugins/pagebreak.js'][43]++;
  if ((n.getAttr("class") == "pagebreak")) {
    _$jscoverage['plugins/pagebreak.js'][44]++;
    var txt = UE.uNode.createText(me.options.pageBreakTag);
    _$jscoverage['plugins/pagebreak.js'][45]++;
    n.parentNode.insertBefore(txt, n);
    _$jscoverage['plugins/pagebreak.js'][46]++;
    n.parentNode.removeChild(n);
  }
}));
}));
  _$jscoverage['plugins/pagebreak.js'][62]++;
  me.commands.pagebreak = {execCommand: (function () {
  _$jscoverage['plugins/pagebreak.js'][64]++;
  var range = me.selection.getRange(), hr = me.document.createElement("hr");
  _$jscoverage['plugins/pagebreak.js'][65]++;
  domUtils.setAttributes(hr, {"class": "pagebreak", noshade: "noshade", size: "5"});
  _$jscoverage['plugins/pagebreak.js'][70]++;
  domUtils.unSelectable(hr);
  _$jscoverage['plugins/pagebreak.js'][72]++;
  var node = domUtils.findParentByTagName(range.startContainer, notBreakTags, true), parents = [], pN;
  _$jscoverage['plugins/pagebreak.js'][75]++;
  if (node) {
    _$jscoverage['plugins/pagebreak.js'][76]++;
    switch (node.tagName) {
    case "TD":
      _$jscoverage['plugins/pagebreak.js'][78]++;
      pN = node.parentNode;
      _$jscoverage['plugins/pagebreak.js'][79]++;
      if ((! pN.previousSibling)) {
        _$jscoverage['plugins/pagebreak.js'][80]++;
        var table = domUtils.findParentByTagName(pN, "table");
        _$jscoverage['plugins/pagebreak.js'][88]++;
        table.parentNode.insertBefore(hr, table);
        _$jscoverage['plugins/pagebreak.js'][89]++;
        parents = domUtils.findParents(hr, true);
      }
      else {
        _$jscoverage['plugins/pagebreak.js'][92]++;
        pN.parentNode.insertBefore(hr, pN);
        _$jscoverage['plugins/pagebreak.js'][93]++;
        parents = domUtils.findParents(hr);
      }
      _$jscoverage['plugins/pagebreak.js'][96]++;
      pN = parents[1];
      _$jscoverage['plugins/pagebreak.js'][97]++;
      if ((hr !== pN)) {
        _$jscoverage['plugins/pagebreak.js'][98]++;
        domUtils.breakParent(hr, pN);
      }
      _$jscoverage['plugins/pagebreak.js'][102]++;
      me.fireEvent("afteradjusttable", me.document);
    }
  }
  else {
    _$jscoverage['plugins/pagebreak.js'][107]++;
    if ((! range.collapsed)) {
      _$jscoverage['plugins/pagebreak.js'][108]++;
      range.deleteContents();
      _$jscoverage['plugins/pagebreak.js'][109]++;
      var start = range.startContainer;
      _$jscoverage['plugins/pagebreak.js'][110]++;
      while (((! domUtils.isBody(start)) && domUtils.isBlockElm(start) && domUtils.isEmptyNode(start))) {
        _$jscoverage['plugins/pagebreak.js'][111]++;
        range.setStartBefore(start).collapse(true);
        _$jscoverage['plugins/pagebreak.js'][112]++;
        domUtils.remove(start);
        _$jscoverage['plugins/pagebreak.js'][113]++;
        start = range.startContainer;
}
    }
    _$jscoverage['plugins/pagebreak.js'][117]++;
    range.insertNode(hr);
    _$jscoverage['plugins/pagebreak.js'][119]++;
    var pN = hr.parentNode, nextNode;
    _$jscoverage['plugins/pagebreak.js'][120]++;
    while ((! domUtils.isBody(pN))) {
      _$jscoverage['plugins/pagebreak.js'][121]++;
      domUtils.breakParent(hr, pN);
      _$jscoverage['plugins/pagebreak.js'][122]++;
      nextNode = hr.nextSibling;
      _$jscoverage['plugins/pagebreak.js'][123]++;
      if ((nextNode && domUtils.isEmptyBlock(nextNode))) {
        _$jscoverage['plugins/pagebreak.js'][124]++;
        domUtils.remove(nextNode);
      }
      _$jscoverage['plugins/pagebreak.js'][126]++;
      pN = hr.parentNode;
}
    _$jscoverage['plugins/pagebreak.js'][128]++;
    nextNode = hr.nextSibling;
    _$jscoverage['plugins/pagebreak.js'][129]++;
    var pre = hr.previousSibling;
    _$jscoverage['plugins/pagebreak.js'][130]++;
    if (isHr(pre)) {
      _$jscoverage['plugins/pagebreak.js'][131]++;
      domUtils.remove(pre);
    }
    else {
      _$jscoverage['plugins/pagebreak.js'][133]++;
      (pre && fillNode(pre));
    }
    _$jscoverage['plugins/pagebreak.js'][136]++;
    if ((! nextNode)) {
      _$jscoverage['plugins/pagebreak.js'][137]++;
      var p = me.document.createElement("p");
      _$jscoverage['plugins/pagebreak.js'][139]++;
      hr.parentNode.appendChild(p);
      _$jscoverage['plugins/pagebreak.js'][140]++;
      domUtils.fillNode(me.document, p);
      _$jscoverage['plugins/pagebreak.js'][141]++;
      range.setStart(p, 0).collapse(true);
    }
    else {
      _$jscoverage['plugins/pagebreak.js'][143]++;
      if (isHr(nextNode)) {
        _$jscoverage['plugins/pagebreak.js'][144]++;
        domUtils.remove(nextNode);
      }
      else {
        _$jscoverage['plugins/pagebreak.js'][146]++;
        fillNode(nextNode);
      }
      _$jscoverage['plugins/pagebreak.js'][148]++;
      range.setEndAfter(hr).collapse(false);
    }
    _$jscoverage['plugins/pagebreak.js'][151]++;
    range.select(true);
  }
})};
});
