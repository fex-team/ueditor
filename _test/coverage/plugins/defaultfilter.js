/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/defaultfilter.js']) {
  _$jscoverage['plugins/defaultfilter.js'] = [];
  _$jscoverage['plugins/defaultfilter.js'][4] = 0;
  _$jscoverage['plugins/defaultfilter.js'][5] = 0;
  _$jscoverage['plugins/defaultfilter.js'][6] = 0;
  _$jscoverage['plugins/defaultfilter.js'][9] = 0;
  _$jscoverage['plugins/defaultfilter.js'][10] = 0;
  _$jscoverage['plugins/defaultfilter.js'][11] = 0;
  _$jscoverage['plugins/defaultfilter.js'][13] = 0;
  _$jscoverage['plugins/defaultfilter.js'][14] = 0;
  _$jscoverage['plugins/defaultfilter.js'][15] = 0;
  _$jscoverage['plugins/defaultfilter.js'][16] = 0;
  _$jscoverage['plugins/defaultfilter.js'][17] = 0;
  _$jscoverage['plugins/defaultfilter.js'][18] = 0;
  _$jscoverage['plugins/defaultfilter.js'][20] = 0;
  _$jscoverage['plugins/defaultfilter.js'][22] = 0;
  _$jscoverage['plugins/defaultfilter.js'][25] = 0;
  _$jscoverage['plugins/defaultfilter.js'][29] = 0;
  _$jscoverage['plugins/defaultfilter.js'][30] = 0;
  _$jscoverage['plugins/defaultfilter.js'][31] = 0;
  _$jscoverage['plugins/defaultfilter.js'][33] = 0;
  _$jscoverage['plugins/defaultfilter.js'][34] = 0;
  _$jscoverage['plugins/defaultfilter.js'][36] = 0;
  _$jscoverage['plugins/defaultfilter.js'][39] = 0;
  _$jscoverage['plugins/defaultfilter.js'][40] = 0;
  _$jscoverage['plugins/defaultfilter.js'][41] = 0;
  _$jscoverage['plugins/defaultfilter.js'][42] = 0;
  _$jscoverage['plugins/defaultfilter.js'][45] = 0;
  _$jscoverage['plugins/defaultfilter.js'][46] = 0;
  _$jscoverage['plugins/defaultfilter.js'][48] = 0;
  _$jscoverage['plugins/defaultfilter.js'][49] = 0;
  _$jscoverage['plugins/defaultfilter.js'][50] = 0;
  _$jscoverage['plugins/defaultfilter.js'][51] = 0;
  _$jscoverage['plugins/defaultfilter.js'][52] = 0;
  _$jscoverage['plugins/defaultfilter.js'][56] = 0;
  _$jscoverage['plugins/defaultfilter.js'][58] = 0;
  _$jscoverage['plugins/defaultfilter.js'][59] = 0;
  _$jscoverage['plugins/defaultfilter.js'][60] = 0;
  _$jscoverage['plugins/defaultfilter.js'][69] = 0;
  _$jscoverage['plugins/defaultfilter.js'][70] = 0;
  _$jscoverage['plugins/defaultfilter.js'][72] = 0;
  _$jscoverage['plugins/defaultfilter.js'][74] = 0;
  _$jscoverage['plugins/defaultfilter.js'][75] = 0;
  _$jscoverage['plugins/defaultfilter.js'][78] = 0;
  _$jscoverage['plugins/defaultfilter.js'][79] = 0;
  _$jscoverage['plugins/defaultfilter.js'][80] = 0;
  _$jscoverage['plugins/defaultfilter.js'][82] = 0;
  _$jscoverage['plugins/defaultfilter.js'][83] = 0;
  _$jscoverage['plugins/defaultfilter.js'][85] = 0;
  _$jscoverage['plugins/defaultfilter.js'][86] = 0;
  _$jscoverage['plugins/defaultfilter.js'][87] = 0;
  _$jscoverage['plugins/defaultfilter.js'][88] = 0;
  _$jscoverage['plugins/defaultfilter.js'][90] = 0;
  _$jscoverage['plugins/defaultfilter.js'][91] = 0;
  _$jscoverage['plugins/defaultfilter.js'][92] = 0;
  _$jscoverage['plugins/defaultfilter.js'][94] = 0;
  _$jscoverage['plugins/defaultfilter.js'][98] = 0;
  _$jscoverage['plugins/defaultfilter.js'][99] = 0;
  _$jscoverage['plugins/defaultfilter.js'][101] = 0;
  _$jscoverage['plugins/defaultfilter.js'][102] = 0;
  _$jscoverage['plugins/defaultfilter.js'][104] = 0;
  _$jscoverage['plugins/defaultfilter.js'][105] = 0;
  _$jscoverage['plugins/defaultfilter.js'][108] = 0;
  _$jscoverage['plugins/defaultfilter.js'][109] = 0;
  _$jscoverage['plugins/defaultfilter.js'][111] = 0;
  _$jscoverage['plugins/defaultfilter.js'][112] = 0;
  _$jscoverage['plugins/defaultfilter.js'][113] = 0;
  _$jscoverage['plugins/defaultfilter.js'][115] = 0;
  _$jscoverage['plugins/defaultfilter.js'][116] = 0;
  _$jscoverage['plugins/defaultfilter.js'][117] = 0;
  _$jscoverage['plugins/defaultfilter.js'][119] = 0;
  _$jscoverage['plugins/defaultfilter.js'][123] = 0;
  _$jscoverage['plugins/defaultfilter.js'][125] = 0;
  _$jscoverage['plugins/defaultfilter.js'][130] = 0;
  _$jscoverage['plugins/defaultfilter.js'][131] = 0;
  _$jscoverage['plugins/defaultfilter.js'][138] = 0;
  _$jscoverage['plugins/defaultfilter.js'][140] = 0;
  _$jscoverage['plugins/defaultfilter.js'][141] = 0;
  _$jscoverage['plugins/defaultfilter.js'][142] = 0;
  _$jscoverage['plugins/defaultfilter.js'][144] = 0;
  _$jscoverage['plugins/defaultfilter.js'][146] = 0;
  _$jscoverage['plugins/defaultfilter.js'][147] = 0;
  _$jscoverage['plugins/defaultfilter.js'][148] = 0;
  _$jscoverage['plugins/defaultfilter.js'][150] = 0;
  _$jscoverage['plugins/defaultfilter.js'][152] = 0;
  _$jscoverage['plugins/defaultfilter.js'][154] = 0;
  _$jscoverage['plugins/defaultfilter.js'][155] = 0;
  _$jscoverage['plugins/defaultfilter.js'][156] = 0;
  _$jscoverage['plugins/defaultfilter.js'][157] = 0;
  _$jscoverage['plugins/defaultfilter.js'][159] = 0;
  _$jscoverage['plugins/defaultfilter.js'][161] = 0;
  _$jscoverage['plugins/defaultfilter.js'][162] = 0;
  _$jscoverage['plugins/defaultfilter.js'][167] = 0;
  _$jscoverage['plugins/defaultfilter.js'][169] = 0;
  _$jscoverage['plugins/defaultfilter.js'][170] = 0;
}
_$jscoverage['plugins/defaultfilter.js'].source = ["<span class=\"c\">///import core</span>","<span class=\"c\">///plugin &#32534;&#36753;&#22120;&#40664;&#35748;&#30340;&#36807;&#28388;&#36716;&#25442;&#26426;&#21046;</span>","","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'defaultfilter'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    me<span class=\"k\">.</span>setOpt<span class=\"k\">(</span><span class=\"s\">'allowDivTransToP'</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"c\">//&#40664;&#35748;&#30340;&#36807;&#28388;&#22788;&#29702;</span>","    <span class=\"c\">//&#36827;&#20837;&#32534;&#36753;&#22120;&#30340;&#20869;&#23481;&#22788;&#29702;</span>","    me<span class=\"k\">.</span>addInputRule<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>root<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> allowDivTransToP <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>allowDivTransToP<span class=\"k\">;</span>","        <span class=\"k\">var</span> val<span class=\"k\">;</span>","        <span class=\"c\">//&#36827;&#34892;&#40664;&#35748;&#30340;&#22788;&#29702;</span>","        root<span class=\"k\">.</span>traversal<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'element'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>dtd<span class=\"k\">.</span>$cdata<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>autoClearEmptyNode <span class=\"k\">&amp;&amp;</span> dtd<span class=\"k\">.</span>$inline<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>dtd<span class=\"k\">.</span>$empty<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>node<span class=\"k\">.</span>attrs <span class=\"k\">||</span> utils<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span>node<span class=\"k\">.</span>attrs<span class=\"k\">)))</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>node<span class=\"k\">.</span>firstChild<span class=\"k\">())</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","                    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'span'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>node<span class=\"k\">.</span>attrs <span class=\"k\">||</span> utils<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span>node<span class=\"k\">.</span>attrs<span class=\"k\">)))</span> <span class=\"k\">{</span>","                        node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">switch</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>tagName<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">case</span> <span class=\"s\">'style'</span><span class=\"k\">:</span>","                    <span class=\"k\">case</span> <span class=\"s\">'script'</span><span class=\"k\">:</span>","                        node<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"k\">{</span>","                            cdata_tag<span class=\"k\">:</span> node<span class=\"k\">.</span>tagName<span class=\"k\">,</span>","                            cdata_data<span class=\"k\">:</span> encodeURIComponent<span class=\"k\">(</span>node<span class=\"k\">.</span>innerText<span class=\"k\">()</span> <span class=\"k\">||</span> <span class=\"s\">''</span><span class=\"k\">)</span>","                        <span class=\"k\">}</span><span class=\"k\">);</span>","                        node<span class=\"k\">.</span>tagName <span class=\"k\">=</span> <span class=\"s\">'div'</span><span class=\"k\">;</span>","                        node<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">.</span>firstChild<span class=\"k\">());</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'a'</span><span class=\"k\">:</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>val <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'href'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                            node<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"s\">'_href'</span><span class=\"k\">,</span> val<span class=\"k\">)</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'img'</span><span class=\"k\">:</span>","                        <span class=\"c\">//todo base64&#26242;&#26102;&#21435;&#25481;&#65292;&#21518;&#36793;&#20570;&#36828;&#31243;&#22270;&#29255;&#19978;&#20256;&#21518;&#65292;&#24178;&#25481;&#36825;&#20010;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>val <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'src'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/^data:/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>val<span class=\"k\">))</span> <span class=\"k\">{</span>","                                node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","                                <span class=\"k\">break</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        node<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"s\">'_src'</span><span class=\"k\">,</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'src'</span><span class=\"k\">));</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'span'</span><span class=\"k\">:</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>webkit <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>val <span class=\"k\">=</span> node<span class=\"k\">.</span>getStyle<span class=\"k\">(</span><span class=\"s\">'white-space'</span><span class=\"k\">)))</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/nowrap|normal/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>val<span class=\"k\">))</span> <span class=\"k\">{</span>","                                node<span class=\"k\">.</span>setStyle<span class=\"k\">(</span><span class=\"s\">'white-space'</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>autoClearEmptyNode <span class=\"k\">&amp;&amp;</span> utils<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span>node<span class=\"k\">.</span>attrs<span class=\"k\">))</span> <span class=\"k\">{</span>","                                    node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'p'</span><span class=\"k\">:</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>val <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                            node<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">);</span>","                            node<span class=\"k\">.</span>setStyle<span class=\"k\">(</span><span class=\"s\">'text-align'</span><span class=\"k\">,</span> val<span class=\"k\">)</span>","                        <span class=\"k\">}</span>","                        <span class=\"c\">//trace:3431</span>","<span class=\"c\">//                        var cssStyle = node.getAttr('style');</span>","<span class=\"c\">//                        if (cssStyle) {</span>","<span class=\"c\">//                            cssStyle = cssStyle.replace(/(margin|padding)[^;]+/g, '');</span>","<span class=\"c\">//                            node.setAttr('style', cssStyle)</span>","<span class=\"c\">//</span>","<span class=\"c\">//                        }</span>","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>node<span class=\"k\">.</span>firstChild<span class=\"k\">())</span> <span class=\"k\">{</span>","                            node<span class=\"k\">.</span>innerHTML<span class=\"k\">(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'&amp;nbsp;'</span> <span class=\"k\">:</span> <span class=\"s\">'&lt;br/&gt;'</span><span class=\"k\">)</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'div'</span><span class=\"k\">:</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'cdata_tag'</span><span class=\"k\">))</span><span class=\"k\">{</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"c\">//&#38024;&#23545;&#20195;&#30721;&#36825;&#37324;&#19981;&#22788;&#29702;&#25554;&#20837;&#20195;&#30721;&#30340;div</span>","                        val <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">);</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>val <span class=\"k\">&amp;&amp;</span> <span class=\"s\">/^line number\\d+/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>val<span class=\"k\">))</span><span class=\"k\">{</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">if</span><span class=\"k\">(!</span>allowDivTransToP<span class=\"k\">)</span><span class=\"k\">{</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">var</span> tmpNode<span class=\"k\">,</span> p <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span>tmpNode <span class=\"k\">=</span> node<span class=\"k\">.</span>firstChild<span class=\"k\">())</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>tmpNode<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'text'</span> <span class=\"k\">||</span> <span class=\"k\">!</span>UE<span class=\"k\">.</span>dom<span class=\"k\">.</span>dtd<span class=\"k\">.</span>$block<span class=\"k\">[</span>tmpNode<span class=\"k\">.</span>tagName<span class=\"k\">])</span> <span class=\"k\">{</span>","                                p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span>p<span class=\"k\">.</span>firstChild<span class=\"k\">())</span> <span class=\"k\">{</span>","                                    node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span> node<span class=\"k\">);</span>","                                    p <span class=\"k\">=</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'p'</span><span class=\"k\">);</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span> node<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>p<span class=\"k\">.</span>firstChild<span class=\"k\">())</span> <span class=\"k\">{</span>","                            node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span>p<span class=\"k\">,</span> node<span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'dl'</span><span class=\"k\">:</span>","                        node<span class=\"k\">.</span>tagName <span class=\"k\">=</span> <span class=\"s\">'ul'</span><span class=\"k\">;</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'dt'</span><span class=\"k\">:</span>","                    <span class=\"k\">case</span> <span class=\"s\">'dd'</span><span class=\"k\">:</span>","                        node<span class=\"k\">.</span>tagName <span class=\"k\">=</span> <span class=\"s\">'li'</span><span class=\"k\">;</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'li'</span><span class=\"k\">:</span>","                        <span class=\"k\">var</span> className <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'class'</span><span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(!</span>className <span class=\"k\">||</span> <span class=\"k\">!</span><span class=\"s\">/list\\-/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>className<span class=\"k\">))</span> <span class=\"k\">{</span>","                            node<span class=\"k\">.</span>setAttr<span class=\"k\">()</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">var</span> tmpNodes <span class=\"k\">=</span> node<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'ol ul'</span><span class=\"k\">);</span>","                        UE<span class=\"k\">.</span>utils<span class=\"k\">.</span>each<span class=\"k\">(</span>tmpNodes<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>n<span class=\"k\">)</span> <span class=\"k\">{</span>","                            node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertAfter<span class=\"k\">(</span>n<span class=\"k\">,</span> node<span class=\"k\">);</span>","                        <span class=\"k\">}</span><span class=\"k\">);</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'td'</span><span class=\"k\">:</span>","                    <span class=\"k\">case</span> <span class=\"s\">'th'</span><span class=\"k\">:</span>","                    <span class=\"k\">case</span> <span class=\"s\">'caption'</span><span class=\"k\">:</span>","                        <span class=\"k\">if</span><span class=\"k\">(!</span>node<span class=\"k\">.</span>children <span class=\"k\">||</span> <span class=\"k\">!</span>node<span class=\"k\">.</span>children<span class=\"k\">.</span>length<span class=\"k\">)</span><span class=\"k\">{</span>","","                            node<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createText<span class=\"k\">(</span><span class=\"s\">' '</span><span class=\"k\">)</span> <span class=\"k\">:</span> UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'br'</span><span class=\"k\">))</span>","                        <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>node<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'comment'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">)</span>","","    <span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">//&#20174;&#32534;&#36753;&#22120;&#20986;&#21435;&#30340;&#20869;&#23481;&#22788;&#29702;</span>","    me<span class=\"k\">.</span>addOutputRule<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>root<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> val<span class=\"k\">;</span>","        root<span class=\"k\">.</span>traversal<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>type <span class=\"k\">==</span> <span class=\"s\">'element'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>autoClearEmptyNode <span class=\"k\">&amp;&amp;</span> dtd<span class=\"k\">.</span>$inline<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>dtd<span class=\"k\">.</span>$empty<span class=\"k\">[</span>node<span class=\"k\">.</span>tagName<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>node<span class=\"k\">.</span>attrs <span class=\"k\">||</span> utils<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span>node<span class=\"k\">.</span>attrs<span class=\"k\">)))</span> <span class=\"k\">{</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>node<span class=\"k\">.</span>firstChild<span class=\"k\">())</span> node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">);</span>","                    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'span'</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>node<span class=\"k\">.</span>attrs <span class=\"k\">||</span> utils<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span>node<span class=\"k\">.</span>attrs<span class=\"k\">)))</span> <span class=\"k\">{</span>","                        node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">switch</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>tagName<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">case</span> <span class=\"s\">'div'</span><span class=\"k\">:</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>val <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'cdata_tag'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                            node<span class=\"k\">.</span>tagName <span class=\"k\">=</span> val<span class=\"k\">;</span>","                            node<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>UE<span class=\"k\">.</span>uNode<span class=\"k\">.</span>createText<span class=\"k\">(</span>node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'cdata_data'</span><span class=\"k\">)));</span>","                            node<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"k\">{</span>cdata_tag<span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">,</span> cdata_data<span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">}</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'a'</span><span class=\"k\">:</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>val <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'_href'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                            node<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"k\">{</span>","                                <span class=\"s\">'href'</span><span class=\"k\">:</span> val<span class=\"k\">,</span>","                                <span class=\"s\">'_href'</span><span class=\"k\">:</span> <span class=\"s\">''</span>","                            <span class=\"k\">}</span><span class=\"k\">)</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">case</span> <span class=\"s\">'img'</span><span class=\"k\">:</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>val <span class=\"k\">=</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'_src'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                            node<span class=\"k\">.</span>setAttr<span class=\"k\">(</span><span class=\"k\">{</span>","                                <span class=\"s\">'src'</span><span class=\"k\">:</span> node<span class=\"k\">.</span>getAttr<span class=\"k\">(</span><span class=\"s\">'_src'</span><span class=\"k\">),</span>","                                <span class=\"s\">'_src'</span><span class=\"k\">:</span> <span class=\"s\">''</span>","                            <span class=\"k\">}</span><span class=\"k\">)</span>","                        <span class=\"k\">}</span>","","","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span><span class=\"k\">)</span>","","","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">;</span>"];
_$jscoverage['plugins/defaultfilter.js'][4]++;
UE.plugins.defaultfilter = (function () {
  _$jscoverage['plugins/defaultfilter.js'][5]++;
  var me = this;
  _$jscoverage['plugins/defaultfilter.js'][6]++;
  me.setOpt("allowDivTransToP", true);
  _$jscoverage['plugins/defaultfilter.js'][9]++;
  me.addInputRule((function (root) {
  _$jscoverage['plugins/defaultfilter.js'][10]++;
  var allowDivTransToP = this.options.allowDivTransToP;
  _$jscoverage['plugins/defaultfilter.js'][11]++;
  var val;
  _$jscoverage['plugins/defaultfilter.js'][13]++;
  root.traversal((function (node) {
  _$jscoverage['plugins/defaultfilter.js'][14]++;
  if ((node.type == "element")) {
    _$jscoverage['plugins/defaultfilter.js'][15]++;
    if (((! dtd.$cdata[node.tagName]) && me.options.autoClearEmptyNode && dtd.$inline[node.tagName] && (! dtd.$empty[node.tagName]) && ((! node.attrs) || utils.isEmptyObject(node.attrs)))) {
      _$jscoverage['plugins/defaultfilter.js'][16]++;
      if ((! node.firstChild())) {
        _$jscoverage['plugins/defaultfilter.js'][16]++;
        node.parentNode.removeChild(node);
      }
      else {
        _$jscoverage['plugins/defaultfilter.js'][17]++;
        if (((node.tagName == "span") && ((! node.attrs) || utils.isEmptyObject(node.attrs)))) {
          _$jscoverage['plugins/defaultfilter.js'][18]++;
          node.parentNode.removeChild(node, true);
        }
      }
      _$jscoverage['plugins/defaultfilter.js'][20]++;
      return;
    }
    _$jscoverage['plugins/defaultfilter.js'][22]++;
    switch (node.tagName) {
    case "style":
    case "script":
      _$jscoverage['plugins/defaultfilter.js'][25]++;
      node.setAttr({cdata_tag: node.tagName, cdata_data: encodeURIComponent((node.innerText() || ""))});
      _$jscoverage['plugins/defaultfilter.js'][29]++;
      node.tagName = "div";
      _$jscoverage['plugins/defaultfilter.js'][30]++;
      node.removeChild(node.firstChild());
      _$jscoverage['plugins/defaultfilter.js'][31]++;
      break;
    case "a":
      _$jscoverage['plugins/defaultfilter.js'][33]++;
      if ((val = node.getAttr("href"))) {
        _$jscoverage['plugins/defaultfilter.js'][34]++;
        node.setAttr("_href", val);
      }
      _$jscoverage['plugins/defaultfilter.js'][36]++;
      break;
    case "img":
      _$jscoverage['plugins/defaultfilter.js'][39]++;
      if ((val = node.getAttr("src"))) {
        _$jscoverage['plugins/defaultfilter.js'][40]++;
        if (/^data:/.test(val)) {
          _$jscoverage['plugins/defaultfilter.js'][41]++;
          node.parentNode.removeChild(node);
          _$jscoverage['plugins/defaultfilter.js'][42]++;
          break;
        }
      }
      _$jscoverage['plugins/defaultfilter.js'][45]++;
      node.setAttr("_src", node.getAttr("src"));
      _$jscoverage['plugins/defaultfilter.js'][46]++;
      break;
    case "span":
      _$jscoverage['plugins/defaultfilter.js'][48]++;
      if ((browser.webkit && (val = node.getStyle("white-space")))) {
        _$jscoverage['plugins/defaultfilter.js'][49]++;
        if (/nowrap|normal/.test(val)) {
          _$jscoverage['plugins/defaultfilter.js'][50]++;
          node.setStyle("white-space", "");
          _$jscoverage['plugins/defaultfilter.js'][51]++;
          if ((me.options.autoClearEmptyNode && utils.isEmptyObject(node.attrs))) {
            _$jscoverage['plugins/defaultfilter.js'][52]++;
            node.parentNode.removeChild(node, true);
          }
        }
      }
      _$jscoverage['plugins/defaultfilter.js'][56]++;
      break;
    case "p":
      _$jscoverage['plugins/defaultfilter.js'][58]++;
      if ((val = node.getAttr("align"))) {
        _$jscoverage['plugins/defaultfilter.js'][59]++;
        node.setAttr("align");
        _$jscoverage['plugins/defaultfilter.js'][60]++;
        node.setStyle("text-align", val);
      }
      _$jscoverage['plugins/defaultfilter.js'][69]++;
      if ((! node.firstChild())) {
        _$jscoverage['plugins/defaultfilter.js'][70]++;
        node.innerHTML((browser.ie? "&nbsp;": "<br/>"));
      }
      _$jscoverage['plugins/defaultfilter.js'][72]++;
      break;
    case "div":
      _$jscoverage['plugins/defaultfilter.js'][74]++;
      if (node.getAttr("cdata_tag")) {
        _$jscoverage['plugins/defaultfilter.js'][75]++;
        break;
      }
      _$jscoverage['plugins/defaultfilter.js'][78]++;
      val = node.getAttr("class");
      _$jscoverage['plugins/defaultfilter.js'][79]++;
      if ((val && /^line number\d+/.test(val))) {
        _$jscoverage['plugins/defaultfilter.js'][80]++;
        break;
      }
      _$jscoverage['plugins/defaultfilter.js'][82]++;
      if ((! allowDivTransToP)) {
        _$jscoverage['plugins/defaultfilter.js'][83]++;
        break;
      }
      _$jscoverage['plugins/defaultfilter.js'][85]++;
      var tmpNode, p = UE.uNode.createElement("p");
      _$jscoverage['plugins/defaultfilter.js'][86]++;
      while ((tmpNode = node.firstChild())) {
        _$jscoverage['plugins/defaultfilter.js'][87]++;
        if (((tmpNode.type == "text") || (! UE.dom.dtd.$block[tmpNode.tagName]))) {
          _$jscoverage['plugins/defaultfilter.js'][88]++;
          p.appendChild(tmpNode);
        }
        else {
          _$jscoverage['plugins/defaultfilter.js'][90]++;
          if (p.firstChild()) {
            _$jscoverage['plugins/defaultfilter.js'][91]++;
            node.parentNode.insertBefore(p, node);
            _$jscoverage['plugins/defaultfilter.js'][92]++;
            p = UE.uNode.createElement("p");
          }
          else {
            _$jscoverage['plugins/defaultfilter.js'][94]++;
            node.parentNode.insertBefore(tmpNode, node);
          }
        }
}
      _$jscoverage['plugins/defaultfilter.js'][98]++;
      if (p.firstChild()) {
        _$jscoverage['plugins/defaultfilter.js'][99]++;
        node.parentNode.insertBefore(p, node);
      }
      _$jscoverage['plugins/defaultfilter.js'][101]++;
      node.parentNode.removeChild(node);
      _$jscoverage['plugins/defaultfilter.js'][102]++;
      break;
    case "dl":
      _$jscoverage['plugins/defaultfilter.js'][104]++;
      node.tagName = "ul";
      _$jscoverage['plugins/defaultfilter.js'][105]++;
      break;
    case "dt":
    case "dd":
      _$jscoverage['plugins/defaultfilter.js'][108]++;
      node.tagName = "li";
      _$jscoverage['plugins/defaultfilter.js'][109]++;
      break;
    case "li":
      _$jscoverage['plugins/defaultfilter.js'][111]++;
      var className = node.getAttr("class");
      _$jscoverage['plugins/defaultfilter.js'][112]++;
      if (((! className) || (! /list\-/.test(className)))) {
        _$jscoverage['plugins/defaultfilter.js'][113]++;
        node.setAttr();
      }
      _$jscoverage['plugins/defaultfilter.js'][115]++;
      var tmpNodes = node.getNodesByTagName("ol ul");
      _$jscoverage['plugins/defaultfilter.js'][116]++;
      UE.utils.each(tmpNodes, (function (n) {
  _$jscoverage['plugins/defaultfilter.js'][117]++;
  node.parentNode.insertAfter(n, node);
}));
      _$jscoverage['plugins/defaultfilter.js'][119]++;
      break;
    case "td":
    case "th":
    case "caption":
      _$jscoverage['plugins/defaultfilter.js'][123]++;
      if (((! node.children) || (! node.children.length))) {
        _$jscoverage['plugins/defaultfilter.js'][125]++;
        node.appendChild((browser.ie? UE.uNode.createText(" "): UE.uNode.createElement("br")));
      }
    }
  }
  _$jscoverage['plugins/defaultfilter.js'][130]++;
  if ((node.type == "comment")) {
    _$jscoverage['plugins/defaultfilter.js'][131]++;
    node.parentNode.removeChild(node);
  }
}));
}));
  _$jscoverage['plugins/defaultfilter.js'][138]++;
  me.addOutputRule((function (root) {
  _$jscoverage['plugins/defaultfilter.js'][140]++;
  var val;
  _$jscoverage['plugins/defaultfilter.js'][141]++;
  root.traversal((function (node) {
  _$jscoverage['plugins/defaultfilter.js'][142]++;
  if ((node.type == "element")) {
    _$jscoverage['plugins/defaultfilter.js'][144]++;
    if ((me.options.autoClearEmptyNode && dtd.$inline[node.tagName] && (! dtd.$empty[node.tagName]) && ((! node.attrs) || utils.isEmptyObject(node.attrs)))) {
      _$jscoverage['plugins/defaultfilter.js'][146]++;
      if ((! node.firstChild())) {
        _$jscoverage['plugins/defaultfilter.js'][146]++;
        node.parentNode.removeChild(node);
      }
      else {
        _$jscoverage['plugins/defaultfilter.js'][147]++;
        if (((node.tagName == "span") && ((! node.attrs) || utils.isEmptyObject(node.attrs)))) {
          _$jscoverage['plugins/defaultfilter.js'][148]++;
          node.parentNode.removeChild(node, true);
        }
      }
      _$jscoverage['plugins/defaultfilter.js'][150]++;
      return;
    }
    _$jscoverage['plugins/defaultfilter.js'][152]++;
    switch (node.tagName) {
    case "div":
      _$jscoverage['plugins/defaultfilter.js'][154]++;
      if ((val = node.getAttr("cdata_tag"))) {
        _$jscoverage['plugins/defaultfilter.js'][155]++;
        node.tagName = val;
        _$jscoverage['plugins/defaultfilter.js'][156]++;
        node.appendChild(UE.uNode.createText(node.getAttr("cdata_data")));
        _$jscoverage['plugins/defaultfilter.js'][157]++;
        node.setAttr({cdata_tag: "", cdata_data: ""});
      }
      _$jscoverage['plugins/defaultfilter.js'][159]++;
      break;
    case "a":
      _$jscoverage['plugins/defaultfilter.js'][161]++;
      if ((val = node.getAttr("_href"))) {
        _$jscoverage['plugins/defaultfilter.js'][162]++;
        node.setAttr({"href": val, "_href": ""});
      }
      _$jscoverage['plugins/defaultfilter.js'][167]++;
      break;
    case "img":
      _$jscoverage['plugins/defaultfilter.js'][169]++;
      if ((val = node.getAttr("_src"))) {
        _$jscoverage['plugins/defaultfilter.js'][170]++;
        node.setAttr({"src": node.getAttr("_src"), "_src": ""});
      }
    }
  }
}));
}));
});
