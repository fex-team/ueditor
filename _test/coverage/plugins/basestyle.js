/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/basestyle.js']) {
  _$jscoverage['plugins/basestyle.js'] = [];
  _$jscoverage['plugins/basestyle.js'][7] = 0;
  _$jscoverage['plugins/basestyle.js'][138] = 0;
  _$jscoverage['plugins/basestyle.js'][145] = 0;
  _$jscoverage['plugins/basestyle.js'][149] = 0;
  _$jscoverage['plugins/basestyle.js'][154] = 0;
  _$jscoverage['plugins/basestyle.js'][155] = 0;
  _$jscoverage['plugins/basestyle.js'][156] = 0;
  _$jscoverage['plugins/basestyle.js'][158] = 0;
  _$jscoverage['plugins/basestyle.js'][159] = 0;
  _$jscoverage['plugins/basestyle.js'][161] = 0;
  _$jscoverage['plugins/basestyle.js'][165] = 0;
  _$jscoverage['plugins/basestyle.js'][166] = 0;
  _$jscoverage['plugins/basestyle.js'][167] = 0;
  _$jscoverage['plugins/basestyle.js'][169] = 0;
  _$jscoverage['plugins/basestyle.js'][170] = 0;
  _$jscoverage['plugins/basestyle.js'][171] = 0;
  _$jscoverage['plugins/basestyle.js'][172] = 0;
  _$jscoverage['plugins/basestyle.js'][173] = 0;
  _$jscoverage['plugins/basestyle.js'][174] = 0;
  _$jscoverage['plugins/basestyle.js'][175] = 0;
  _$jscoverage['plugins/basestyle.js'][177] = 0;
  _$jscoverage['plugins/basestyle.js'][178] = 0;
  _$jscoverage['plugins/basestyle.js'][179] = 0;
  _$jscoverage['plugins/basestyle.js'][180] = 0;
  _$jscoverage['plugins/basestyle.js'][185] = 0;
  _$jscoverage['plugins/basestyle.js'][187] = 0;
  _$jscoverage['plugins/basestyle.js'][189] = 0;
  _$jscoverage['plugins/basestyle.js'][190] = 0;
  _$jscoverage['plugins/basestyle.js'][191] = 0;
  _$jscoverage['plugins/basestyle.js'][194] = 0;
  _$jscoverage['plugins/basestyle.js'][196] = 0;
  _$jscoverage['plugins/basestyle.js'][199] = 0;
}
_$jscoverage['plugins/basestyle.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * B&#12289;I&#12289;sub&#12289;super&#21629;&#20196;&#25903;&#25345;</span>","<span class=\"c\"> * @file</span>","<span class=\"c\"> * @since 1.2.6.1</span>","<span class=\"c\"> */</span>","","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'basestyle'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23383;&#20307;&#21152;&#31895;&#65292; &#23545;&#24050;&#21152;&#31895;&#30340;&#25991;&#26412;&#20869;&#23481;&#25191;&#34892;&#35813;&#21629;&#20196;&#65292; &#23558;&#21462;&#28040;&#21152;&#31895;</span>","<span class=\"c\">     * @command bold</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @method execCommand</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * //editor&#26159;&#32534;&#36753;&#22120;&#23454;&#20363;</span>","<span class=\"c\">     * //&#23545;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#25191;&#34892;&#21152;&#31895;&#25805;&#20316;</span>","<span class=\"c\">     * //&#31532;&#19968;&#27425;&#25191;&#34892;&#65292; &#25991;&#26412;&#20869;&#23481;&#21152;&#31895;</span>","<span class=\"c\">     * editor.execCommand( 'bold' );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //&#31532;&#20108;&#27425;&#25191;&#34892;&#65292; &#25991;&#26412;&#20869;&#23481;&#21462;&#28040;&#21152;&#31895;</span>","<span class=\"c\">     * editor.execCommand( 'bold' );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#33719;&#21462;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#30340;&#21152;&#31895;&#29366;&#24577;</span>","<span class=\"c\">     * @command bold</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @method queryCommandState</span>","<span class=\"c\">     * @return { int } &#22914;&#26524;&#24403;&#21069;&#36873;&#20013;&#30340;&#25152;&#26377;&#25991;&#26412;&#20869;&#23481;&#24050;&#32463;&#34987;&#21152;&#31895;&#65292; &#21017;&#36820;&#22238;1&#65292; &#21542;&#21017;&#36820;&#22238;0</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * //editor&#26159;&#32534;&#36753;&#22120;&#23454;&#20363;</span>","<span class=\"c\">     * //&#33719;&#21462;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#30340;&#21152;&#31895;&#29366;&#24577;</span>","<span class=\"c\">     * //output: 1 &#25110;&#32773; 0</span>","<span class=\"c\">     * console.log( editor.queryCommandState( 'bold' ) );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#23383;&#20307;&#20542;&#26012;, &#23545;&#24050;&#20542;&#26012;&#30340;&#25991;&#26412;&#20869;&#23481;&#25191;&#34892;&#35813;&#21629;&#20196;&#65292; &#23558;&#21462;&#28040;&#20542;&#26012;</span>","<span class=\"c\">     * @command italic</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @method execCommand</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * //editor&#26159;&#32534;&#36753;&#22120;&#23454;&#20363;</span>","<span class=\"c\">     * //&#23545;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#25191;&#34892;&#26012;&#20307;&#25805;&#20316;</span>","<span class=\"c\">     * //&#31532;&#19968;&#27425;&#25805;&#20316;&#65292; &#25991;&#26412;&#20869;&#23481;&#23558;&#21464;&#25104;&#26012;&#20307;</span>","<span class=\"c\">     * editor.execCommand( 'italic' );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //&#20877;&#27425;&#23545;&#21516;&#19968;&#25991;&#26412;&#20869;&#23481;&#25191;&#34892;&#65292; &#21017;&#25991;&#26412;&#20869;&#23481;&#23558;&#24674;&#22797;&#27491;&#24120;</span>","<span class=\"c\">     * editor.execCommand( 'italic' );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#33719;&#21462;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#30340;&#20542;&#26012;&#29366;&#24577;</span>","<span class=\"c\">     * @command italic</span>","<span class=\"c\">     * @method queryCommandState</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { int } &#22914;&#26524;&#24403;&#21069;&#36873;&#20013;&#30340;&#25152;&#26377;&#25991;&#26412;&#20869;&#23481;&#24050;&#32463;&#26159;&#26012;&#20307;&#65292; &#21017;&#36820;&#22238;1&#65292; &#21542;&#21017;&#36820;&#22238;0</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * //editor&#26159;&#32534;&#36753;&#22120;&#23454;&#20363;</span>","<span class=\"c\">     * //&#33719;&#21462;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#30340;&#20542;&#26012;&#29366;&#24577;</span>","<span class=\"c\">     * //output: 1 &#25110;&#32773; 0</span>","<span class=\"c\">     * console.log( editor.queryCommandState( 'italic' ) );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#19979;&#26631;&#25991;&#26412;&#65292; &#25226;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#20999;&#25442;&#25104;&#19979;&#26631;&#25991;&#26412;&#65292; &#22914;&#26524;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#24050;&#32463;&#26159;&#19979;&#26631;&#65292; &#21017;&#35813;&#25805;&#20316;&#20250;&#25226;&#25991;&#26412;&#20869;&#23481;&#36824;&#21407;&#25104;</span>","<span class=\"c\">     * &#27491;&#24120;&#25991;&#26412;</span>","<span class=\"c\">     * @command subscript</span>","<span class=\"c\">     * @method execCommand</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * //editor&#26159;&#32534;&#36753;&#22120;&#23454;&#20363;</span>","<span class=\"c\">     * //&#23545;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#25191;&#34892;&#19979;&#26631;&#25805;&#20316;</span>","<span class=\"c\">     * //&#31532;&#19968;&#27425;&#25805;&#20316;&#65292; &#25991;&#26412;&#20869;&#23481;&#23558;&#21464;&#25104;&#19979;&#26631;&#25991;&#26412;</span>","<span class=\"c\">     * editor.execCommand( 'subscript' );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //&#20877;&#27425;&#23545;&#21516;&#19968;&#25991;&#26412;&#20869;&#23481;&#25191;&#34892;&#65292; &#21017;&#25991;&#26412;&#20869;&#23481;&#23558;&#24674;&#22797;&#27491;&#24120;</span>","<span class=\"c\">     * editor.execCommand( 'subscript' );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#33719;&#21462;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#30340;&#19979;&#26631;&#29366;&#24577;</span>","<span class=\"c\">     * @command subscript</span>","<span class=\"c\">     * @method queryCommandState</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { int } &#22914;&#26524;&#24403;&#21069;&#36873;&#20013;&#30340;&#25152;&#26377;&#25991;&#26412;&#20869;&#23481;&#24050;&#32463;&#26159;&#19979;&#26631;&#25991;&#26412;&#65292; &#21017;&#36820;&#22238;1&#65292; &#21542;&#21017;&#36820;&#22238;0</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * //editor&#26159;&#32534;&#36753;&#22120;&#23454;&#20363;</span>","<span class=\"c\">     * //&#33719;&#21462;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#30340;&#19979;&#26631;&#29366;&#24577;</span>","<span class=\"c\">     * //output: 1 &#25110;&#32773; 0</span>","<span class=\"c\">     * console.log( editor.queryCommandState( 'subscript' ) );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#19978;&#26631;&#25991;&#26412;&#65292; &#25226;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#20999;&#25442;&#25104;&#19978;&#26631;&#25991;&#26412;&#65292; &#22914;&#26524;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#24050;&#32463;&#26159;&#19978;&#26631;&#65292; &#21017;&#35813;&#25805;&#20316;&#20250;&#25226;&#25991;&#26412;&#20869;&#23481;&#36824;&#21407;&#25104;</span>","<span class=\"c\">     * &#27491;&#24120;&#25991;&#26412;</span>","<span class=\"c\">     * @command superscript</span>","<span class=\"c\">     * @method execCommand</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * //editor&#26159;&#32534;&#36753;&#22120;&#23454;&#20363;</span>","<span class=\"c\">     * //&#23545;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#25191;&#34892;&#19978;&#26631;&#25805;&#20316;</span>","<span class=\"c\">     * //&#31532;&#19968;&#27425;&#25805;&#20316;&#65292; &#25991;&#26412;&#20869;&#23481;&#23558;&#21464;&#25104;&#19978;&#26631;&#25991;&#26412;</span>","<span class=\"c\">     * editor.execCommand( 'superscript' );</span>","<span class=\"c\">     *</span>","<span class=\"c\">     * //&#20877;&#27425;&#23545;&#21516;&#19968;&#25991;&#26412;&#20869;&#23481;&#25191;&#34892;&#65292; &#21017;&#25991;&#26412;&#20869;&#23481;&#23558;&#24674;&#22797;&#27491;&#24120;</span>","<span class=\"c\">     * editor.execCommand( 'superscript' );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#33719;&#21462;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#30340;&#19978;&#26631;&#29366;&#24577;</span>","<span class=\"c\">     * @command superscript</span>","<span class=\"c\">     * @method queryCommandState</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { int } &#22914;&#26524;&#24403;&#21069;&#36873;&#20013;&#30340;&#25152;&#26377;&#25991;&#26412;&#20869;&#23481;&#24050;&#32463;&#26159;&#19978;&#26631;&#25991;&#26412;&#65292; &#21017;&#36820;&#22238;1&#65292; &#21542;&#21017;&#36820;&#22238;0</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * //editor&#26159;&#32534;&#36753;&#22120;&#23454;&#20363;</span>","<span class=\"c\">     * //&#33719;&#21462;&#24403;&#21069;&#36873;&#20013;&#30340;&#25991;&#26412;&#20869;&#23481;&#30340;&#19978;&#26631;&#29366;&#24577;</span>","<span class=\"c\">     * //output: 1 &#25110;&#32773; 0</span>","<span class=\"c\">     * console.log( editor.queryCommandState( 'superscript' ) );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    <span class=\"k\">var</span> basestyles <span class=\"k\">=</span> <span class=\"k\">{</span>","            <span class=\"s\">'bold'</span><span class=\"k\">:[</span><span class=\"s\">'strong'</span><span class=\"k\">,</span><span class=\"s\">'b'</span><span class=\"k\">],</span>","            <span class=\"s\">'italic'</span><span class=\"k\">:[</span><span class=\"s\">'em'</span><span class=\"k\">,</span><span class=\"s\">'i'</span><span class=\"k\">],</span>","            <span class=\"s\">'subscript'</span><span class=\"k\">:[</span><span class=\"s\">'sub'</span><span class=\"k\">],</span>","            <span class=\"s\">'superscript'</span><span class=\"k\">:[</span><span class=\"s\">'sup'</span><span class=\"k\">]</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        getObj <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>editor<span class=\"k\">,</span>tagNames<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> domUtils<span class=\"k\">.</span>filterNodeList<span class=\"k\">(</span>editor<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStartElementPath<span class=\"k\">(),</span>tagNames<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"c\">//&#28155;&#21152;&#24555;&#25463;&#38190;</span>","    me<span class=\"k\">.</span>addshortcutkey<span class=\"k\">(</span><span class=\"k\">{</span>","        <span class=\"s\">\"Bold\"</span> <span class=\"k\">:</span> <span class=\"s\">\"ctrl+66\"</span><span class=\"k\">,</span><span class=\"c\">//^B</span>","        <span class=\"s\">\"Italic\"</span> <span class=\"k\">:</span> <span class=\"s\">\"ctrl+73\"</span><span class=\"k\">,</span> <span class=\"c\">//^I</span>","        <span class=\"s\">\"Underline\"</span> <span class=\"k\">:</span> <span class=\"s\">\"ctrl+85\"</span><span class=\"c\">//^U</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    me<span class=\"k\">.</span>addInputRule<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>root<span class=\"k\">)</span><span class=\"k\">{</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>root<span class=\"k\">.</span>getNodesByTagName<span class=\"k\">(</span><span class=\"s\">'b i'</span><span class=\"k\">),</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">switch</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>tagName<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">case</span> <span class=\"s\">'b'</span><span class=\"k\">:</span>","                    node<span class=\"k\">.</span>tagName <span class=\"k\">=</span> <span class=\"s\">'strong'</span><span class=\"k\">;</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">'i'</span><span class=\"k\">:</span>","                    node<span class=\"k\">.</span>tagName <span class=\"k\">=</span> <span class=\"s\">'em'</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">var</span> style <span class=\"k\">in</span> basestyles <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> cmd<span class=\"k\">,</span> tagNames <span class=\"k\">)</span> <span class=\"k\">{</span>","            me<span class=\"k\">.</span>commands<span class=\"k\">[</span>cmd<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","                execCommand <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> cmdName <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>obj <span class=\"k\">=</span> getObj<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>tagNames<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> range<span class=\"k\">.</span>collapsed <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> tmpText <span class=\"k\">=</span>  me<span class=\"k\">.</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","                            range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span> tmpText <span class=\"k\">).</span>removeInlineStyle<span class=\"k\">(</span> tagNames <span class=\"k\">);</span>","                            range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>tmpText<span class=\"k\">);</span>","                            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>tmpText<span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> tmpNode <span class=\"k\">=</span> range<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> tagNames<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">);</span>","                            <span class=\"k\">if</span><span class=\"k\">(</span>cmdName <span class=\"k\">==</span> <span class=\"s\">'superscript'</span> <span class=\"k\">||</span> cmdName <span class=\"k\">==</span> <span class=\"s\">'subscript'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                                tmpText <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">''</span><span class=\"k\">);</span>","                                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>tmpText<span class=\"k\">)</span>","                                    <span class=\"k\">.</span>removeInlineStyle<span class=\"k\">([</span><span class=\"s\">'sub'</span><span class=\"k\">,</span><span class=\"s\">'sup'</span><span class=\"k\">])</span>","                                    <span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>tmpText<span class=\"k\">)</span>","                                    <span class=\"k\">.</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span> tmpNode <span class=\"k\">).</span>setStart<span class=\"k\">(</span> tmpNode<span class=\"k\">,</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        range<span class=\"k\">.</span>collapse<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span><span class=\"k\">(</span>cmdName <span class=\"k\">==</span> <span class=\"s\">'superscript'</span> <span class=\"k\">||</span> cmdName <span class=\"k\">==</span> <span class=\"s\">'subscript'</span><span class=\"k\">)</span><span class=\"k\">{</span>","                            <span class=\"k\">if</span><span class=\"k\">(!</span>obj <span class=\"k\">||</span> obj<span class=\"k\">.</span>tagName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">!=</span> cmdName<span class=\"k\">)</span><span class=\"k\">{</span>","                                range<span class=\"k\">.</span>removeInlineStyle<span class=\"k\">([</span><span class=\"s\">'sub'</span><span class=\"k\">,</span><span class=\"s\">'sup'</span><span class=\"k\">]);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        obj <span class=\"k\">?</span> range<span class=\"k\">.</span>removeInlineStyle<span class=\"k\">(</span> tagNames <span class=\"k\">)</span> <span class=\"k\">:</span> range<span class=\"k\">.</span>applyInlineStyle<span class=\"k\">(</span> tagNames<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    range<span class=\"k\">.</span>select<span class=\"k\">();</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                queryCommandState <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                   <span class=\"k\">return</span> getObj<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span>tagNames<span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">)(</span> style<span class=\"k\">,</span> basestyles<span class=\"k\">[</span>style<span class=\"k\">]</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>",""];
_$jscoverage['plugins/basestyle.js'][7]++;
UE.plugins.basestyle = (function () {
  _$jscoverage['plugins/basestyle.js'][138]++;
  var basestyles = {"bold": ["strong", "b"], "italic": ["em", "i"], "subscript": ["sub"], "superscript": ["sup"]}, getObj = (function (editor, tagNames) {
  _$jscoverage['plugins/basestyle.js'][145]++;
  return domUtils.filterNodeList(editor.selection.getStartElementPath(), tagNames);
}), me = this;
  _$jscoverage['plugins/basestyle.js'][149]++;
  me.addshortcutkey({"Bold": "ctrl+66", "Italic": "ctrl+73", "Underline": "ctrl+85"});
  _$jscoverage['plugins/basestyle.js'][154]++;
  me.addInputRule((function (root) {
  _$jscoverage['plugins/basestyle.js'][155]++;
  utils.each(root.getNodesByTagName("b i"), (function (node) {
  _$jscoverage['plugins/basestyle.js'][156]++;
  switch (node.tagName) {
  case "b":
    _$jscoverage['plugins/basestyle.js'][158]++;
    node.tagName = "strong";
    _$jscoverage['plugins/basestyle.js'][159]++;
    break;
  case "i":
    _$jscoverage['plugins/basestyle.js'][161]++;
    node.tagName = "em";
  }
}));
}));
  _$jscoverage['plugins/basestyle.js'][165]++;
  for (var style in basestyles) {
    _$jscoverage['plugins/basestyle.js'][166]++;
    (function (cmd, tagNames) {
  _$jscoverage['plugins/basestyle.js'][167]++;
  me.commands[cmd] = {execCommand: (function (cmdName) {
  _$jscoverage['plugins/basestyle.js'][169]++;
  var range = me.selection.getRange(), obj = getObj(this, tagNames);
  _$jscoverage['plugins/basestyle.js'][170]++;
  if (range.collapsed) {
    _$jscoverage['plugins/basestyle.js'][171]++;
    if (obj) {
      _$jscoverage['plugins/basestyle.js'][172]++;
      var tmpText = me.document.createTextNode("");
      _$jscoverage['plugins/basestyle.js'][173]++;
      range.insertNode(tmpText).removeInlineStyle(tagNames);
      _$jscoverage['plugins/basestyle.js'][174]++;
      range.setStartBefore(tmpText);
      _$jscoverage['plugins/basestyle.js'][175]++;
      domUtils.remove(tmpText);
    }
    else {
      _$jscoverage['plugins/basestyle.js'][177]++;
      var tmpNode = range.document.createElement(tagNames[0]);
      _$jscoverage['plugins/basestyle.js'][178]++;
      if (((cmdName == "superscript") || (cmdName == "subscript"))) {
        _$jscoverage['plugins/basestyle.js'][179]++;
        tmpText = me.document.createTextNode("");
        _$jscoverage['plugins/basestyle.js'][180]++;
        range.insertNode(tmpText).removeInlineStyle(["sub", "sup"]).setStartBefore(tmpText).collapse(true);
      }
      _$jscoverage['plugins/basestyle.js'][185]++;
      range.insertNode(tmpNode).setStart(tmpNode, 0);
    }
    _$jscoverage['plugins/basestyle.js'][187]++;
    range.collapse(true);
  }
  else {
    _$jscoverage['plugins/basestyle.js'][189]++;
    if (((cmdName == "superscript") || (cmdName == "subscript"))) {
      _$jscoverage['plugins/basestyle.js'][190]++;
      if (((! obj) || (obj.tagName.toLowerCase() != cmdName))) {
        _$jscoverage['plugins/basestyle.js'][191]++;
        range.removeInlineStyle(["sub", "sup"]);
      }
    }
    _$jscoverage['plugins/basestyle.js'][194]++;
    (obj? range.removeInlineStyle(tagNames): range.applyInlineStyle(tagNames[0]));
  }
  _$jscoverage['plugins/basestyle.js'][196]++;
  range.select();
}), queryCommandState: (function () {
  _$jscoverage['plugins/basestyle.js'][199]++;
  return (getObj(this, tagNames)? 1: 0);
})};
})(style, basestyles[style]);
}
});
