/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/lineheight.js']) {
  _$jscoverage['plugins/lineheight.js'] = [];
  _$jscoverage['plugins/lineheight.js'][7] = 0;
  _$jscoverage['plugins/lineheight.js'][8] = 0;
  _$jscoverage['plugins/lineheight.js'][9] = 0;
  _$jscoverage['plugins/lineheight.js'][33] = 0;
  _$jscoverage['plugins/lineheight.js'][35] = 0;
  _$jscoverage['plugins/lineheight.js'][36] = 0;
  _$jscoverage['plugins/lineheight.js'][39] = 0;
  _$jscoverage['plugins/lineheight.js'][40] = 0;
  _$jscoverage['plugins/lineheight.js'][41] = 0;
  _$jscoverage['plugins/lineheight.js'][42] = 0;
}
_$jscoverage['plugins/lineheight.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * &#35774;&#32622;&#34892;&#20869;&#38388;&#36317;</span>","<span class=\"c\"> * @file</span>","<span class=\"c\"> * @since 1.2.6.1</span>","<span class=\"c\"> */</span>","","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'lineheight'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    me<span class=\"k\">.</span>setOpt<span class=\"k\">(</span><span class=\"k\">{</span><span class=\"s\">'lineheight'</span><span class=\"k\">:[</span><span class=\"s\">'1'</span><span class=\"k\">,</span> <span class=\"s\">'1.5'</span><span class=\"k\">,</span><span class=\"s\">'1.75'</span><span class=\"k\">,</span><span class=\"s\">'2'</span><span class=\"k\">,</span> <span class=\"s\">'3'</span><span class=\"k\">,</span> <span class=\"s\">'4'</span><span class=\"k\">,</span> <span class=\"s\">'5'</span><span class=\"k\">]</span><span class=\"k\">}</span><span class=\"k\">);</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#35774;&#32622;&#36873;&#21306;&#30340;&#34892;&#39640;</span>","<span class=\"c\">     * @command lineheight</span>","<span class=\"c\">     * @method execCommand</span>","<span class=\"c\">     * @param { String } cmdName &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @param { String } value &#20256;&#20837;&#30340;&#34892;&#39640;&#22823;&#23567;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.execCommand( 'lineheight', '1');</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#26597;&#35810;&#24403;&#21069;&#36873;&#21306;&#20869;&#23481;&#30340;&#34892;&#39640;&#22823;&#23567;</span>","<span class=\"c\">     * @command lineheight</span>","<span class=\"c\">     * @method queryCommandValue</span>","<span class=\"c\">     * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { String } &#36820;&#22238;&#24403;&#21069;&#34892;&#39640;&#22823;&#23567;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.queryCommandValue( 'lineheight' );</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    me<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'lineheight'</span><span class=\"k\">]</span> <span class=\"k\">=</span>  <span class=\"k\">{</span>","        execCommand <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> cmdName<span class=\"k\">,</span>value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'paragraph'</span><span class=\"k\">,</span><span class=\"s\">'p'</span><span class=\"k\">,</span><span class=\"k\">{</span>style<span class=\"k\">:</span><span class=\"s\">'line-height:'</span><span class=\"k\">+</span> <span class=\"k\">(</span>value <span class=\"k\">==</span> <span class=\"s\">\"1\"</span> <span class=\"k\">?</span> <span class=\"s\">\"normal\"</span> <span class=\"k\">:</span> value <span class=\"k\">+</span> <span class=\"s\">'em'</span><span class=\"k\">)</span> <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        queryCommandValue <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> pN <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>filterNodeList<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getStartElementPath<span class=\"k\">(),</span><span class=\"k\">function</span><span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>node<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>pN<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> value <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>pN<span class=\"k\">,</span><span class=\"s\">'line-height'</span><span class=\"k\">);</span>","                <span class=\"k\">return</span> value <span class=\"k\">==</span> <span class=\"s\">'normal'</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> value<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/[^\\d.]*/ig</span><span class=\"k\">,</span><span class=\"s\">\"\"</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">;</span>","",""];
_$jscoverage['plugins/lineheight.js'][7]++;
UE.plugins.lineheight = (function () {
  _$jscoverage['plugins/lineheight.js'][8]++;
  var me = this;
  _$jscoverage['plugins/lineheight.js'][9]++;
  me.setOpt({"lineheight": ["1", "1.5", "1.75", "2", "3", "4", "5"]});
  _$jscoverage['plugins/lineheight.js'][33]++;
  me.commands.lineheight = {execCommand: (function (cmdName, value) {
  _$jscoverage['plugins/lineheight.js'][35]++;
  this.execCommand("paragraph", "p", {style: ("line-height:" + ((value == "1")? "normal": (value + "em")))});
  _$jscoverage['plugins/lineheight.js'][36]++;
  return true;
}), queryCommandValue: (function () {
  _$jscoverage['plugins/lineheight.js'][39]++;
  var pN = domUtils.filterNodeList(this.selection.getStartElementPath(), (function (node) {
  _$jscoverage['plugins/lineheight.js'][39]++;
  return domUtils.isBlockElm(node);
}));
  _$jscoverage['plugins/lineheight.js'][40]++;
  if (pN) {
    _$jscoverage['plugins/lineheight.js'][41]++;
    var value = domUtils.getComputedStyle(pN, "line-height");
    _$jscoverage['plugins/lineheight.js'][42]++;
    return ((value == "normal")? 1: value.replace(/[^\d.]*/gi, ""));
  }
})};
});
