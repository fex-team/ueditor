/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/convertcase.js']) {
  _$jscoverage['plugins/convertcase.js'] = [];
  _$jscoverage['plugins/convertcase.js'][28] = 0;
  _$jscoverage['plugins/convertcase.js'][31] = 0;
  _$jscoverage['plugins/convertcase.js'][32] = 0;
  _$jscoverage['plugins/convertcase.js'][33] = 0;
  _$jscoverage['plugins/convertcase.js'][34] = 0;
  _$jscoverage['plugins/convertcase.js'][36] = 0;
  _$jscoverage['plugins/convertcase.js'][39] = 0;
  _$jscoverage['plugins/convertcase.js'][42] = 0;
  _$jscoverage['plugins/convertcase.js'][44] = 0;
  _$jscoverage['plugins/convertcase.js'][45] = 0;
  _$jscoverage['plugins/convertcase.js'][47] = 0;
  _$jscoverage['plugins/convertcase.js'][48] = 0;
  _$jscoverage['plugins/convertcase.js'][49] = 0;
  _$jscoverage['plugins/convertcase.js'][53] = 0;
}
_$jscoverage['plugins/convertcase.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * &#22823;&#23567;&#20889;&#36716;&#25442;</span>","<span class=\"c\"> * @file</span>","<span class=\"c\"> * @since 1.2.6.1</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25226;&#36873;&#21306;&#20869;&#25991;&#26412;&#21464;&#22823;&#20889;</span>","<span class=\"c\"> * @command touppercase</span>","<span class=\"c\"> * @method execCommand</span>","<span class=\"c\"> * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @example</span>","<span class=\"c\"> * ```javascript</span>","<span class=\"c\"> * editor.execCommand( 'touppercase' );</span>","<span class=\"c\"> * ```</span>","<span class=\"c\"> */</span>","","<span class=\"c\">/**</span>","<span class=\"c\"> * &#25226;&#36873;&#21306;&#20869;&#25991;&#26412;&#21464;&#23567;&#20889;</span>","<span class=\"c\"> * @command tolowercase</span>","<span class=\"c\"> * @method execCommand</span>","<span class=\"c\"> * @param { String } cmd &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\"> * @example</span>","<span class=\"c\"> * ```javascript</span>","<span class=\"c\"> * editor.execCommand( 'tolowercase' );</span>","<span class=\"c\"> * ```</span>","<span class=\"c\"> */</span>","UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'touppercase'</span><span class=\"k\">]</span> <span class=\"k\">=</span>","UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'tolowercase'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","    execCommand<span class=\"k\">:</span><span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","        <span class=\"k\">if</span><span class=\"k\">(</span>rng<span class=\"k\">.</span>collapsed<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">return</span> rng<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">var</span> bk <span class=\"k\">=</span> rng<span class=\"k\">.</span>createBookmark<span class=\"k\">(),</span>","            bkEnd <span class=\"k\">=</span> bk<span class=\"k\">.</span>end<span class=\"k\">,</span>","            filterFn <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> node <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBr<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span> node <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            curNode <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span> bk<span class=\"k\">.</span>start<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn <span class=\"k\">);</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span> curNode <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span> curNode<span class=\"k\">,</span> bkEnd <span class=\"k\">)</span> <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_PRECEDING<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> curNode<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                curNode<span class=\"k\">.</span>nodeValue <span class=\"k\">=</span> curNode<span class=\"k\">.</span>nodeValue<span class=\"k\">[</span>cmd <span class=\"k\">==</span> <span class=\"s\">'touppercase'</span> <span class=\"k\">?</span> <span class=\"s\">'toUpperCase'</span> <span class=\"k\">:</span> <span class=\"s\">'toLowerCase'</span><span class=\"k\">]();</span>","            <span class=\"k\">}</span>","            curNode <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span> curNode<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> filterFn <span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>curNode <span class=\"k\">===</span> bkEnd<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","        rng<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span>bk<span class=\"k\">).</span>select<span class=\"k\">();</span>","    <span class=\"k\">}</span>","<span class=\"k\">}</span><span class=\"k\">;</span>",""];
_$jscoverage['plugins/convertcase.js'][28]++;
UE.commands.touppercase = (UE.commands.tolowercase = {execCommand: (function (cmd) {
  _$jscoverage['plugins/convertcase.js'][31]++;
  var me = this;
  _$jscoverage['plugins/convertcase.js'][32]++;
  var rng = me.selection.getRange();
  _$jscoverage['plugins/convertcase.js'][33]++;
  if (rng.collapsed) {
    _$jscoverage['plugins/convertcase.js'][34]++;
    return rng;
  }
  _$jscoverage['plugins/convertcase.js'][36]++;
  var bk = rng.createBookmark(), bkEnd = bk.end, filterFn = (function (node) {
  _$jscoverage['plugins/convertcase.js'][39]++;
  return ((! domUtils.isBr(node)) && (! domUtils.isWhitespace(node)));
}), curNode = domUtils.getNextDomNode(bk.start, false, filterFn);
  _$jscoverage['plugins/convertcase.js'][42]++;
  while ((curNode && (domUtils.getPosition(curNode, bkEnd) & domUtils.POSITION_PRECEDING))) {
    _$jscoverage['plugins/convertcase.js'][44]++;
    if ((curNode.nodeType == 3)) {
      _$jscoverage['plugins/convertcase.js'][45]++;
      curNode.nodeValue = (curNode.nodeValue[((cmd == "touppercase")? "toUpperCase": "toLowerCase")])();
    }
    _$jscoverage['plugins/convertcase.js'][47]++;
    curNode = domUtils.getNextDomNode(curNode, true, filterFn);
    _$jscoverage['plugins/convertcase.js'][48]++;
    if ((curNode === bkEnd)) {
      _$jscoverage['plugins/convertcase.js'][49]++;
      break;
    }
}
  _$jscoverage['plugins/convertcase.js'][53]++;
  rng.moveToBookmark(bk).select();
})});
