/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/table.action.js']) {
  _$jscoverage['plugins/table.action.js'] = [];
  _$jscoverage['plugins/table.action.js'][8] = 0;
  _$jscoverage['plugins/table.action.js'][9] = 0;
  _$jscoverage['plugins/table.action.js'][29] = 0;
  _$jscoverage['plugins/table.action.js'][32] = 0;
  _$jscoverage['plugins/table.action.js'][35] = 0;
  _$jscoverage['plugins/table.action.js'][38] = 0;
  _$jscoverage['plugins/table.action.js'][41] = 0;
  _$jscoverage['plugins/table.action.js'][44] = 0;
  _$jscoverage['plugins/table.action.js'][45] = 0;
  _$jscoverage['plugins/table.action.js'][46] = 0;
  _$jscoverage['plugins/table.action.js'][47] = 0;
  _$jscoverage['plugins/table.action.js'][48] = 0;
  _$jscoverage['plugins/table.action.js'][49] = 0;
  _$jscoverage['plugins/table.action.js'][50] = 0;
  _$jscoverage['plugins/table.action.js'][51] = 0;
  _$jscoverage['plugins/table.action.js'][52] = 0;
  _$jscoverage['plugins/table.action.js'][54] = 0;
  _$jscoverage['plugins/table.action.js'][56] = 0;
  _$jscoverage['plugins/table.action.js'][63] = 0;
  _$jscoverage['plugins/table.action.js'][72] = 0;
  _$jscoverage['plugins/table.action.js'][76] = 0;
  _$jscoverage['plugins/table.action.js'][86] = 0;
  _$jscoverage['plugins/table.action.js'][87] = 0;
  _$jscoverage['plugins/table.action.js'][115] = 0;
  _$jscoverage['plugins/table.action.js'][116] = 0;
  _$jscoverage['plugins/table.action.js'][128] = 0;
  _$jscoverage['plugins/table.action.js'][130] = 0;
  _$jscoverage['plugins/table.action.js'][131] = 0;
  _$jscoverage['plugins/table.action.js'][132] = 0;
  _$jscoverage['plugins/table.action.js'][134] = 0;
  _$jscoverage['plugins/table.action.js'][136] = 0;
  _$jscoverage['plugins/table.action.js'][137] = 0;
  _$jscoverage['plugins/table.action.js'][139] = 0;
  _$jscoverage['plugins/table.action.js'][140] = 0;
  _$jscoverage['plugins/table.action.js'][141] = 0;
  _$jscoverage['plugins/table.action.js'][142] = 0;
  _$jscoverage['plugins/table.action.js'][144] = 0;
  _$jscoverage['plugins/table.action.js'][146] = 0;
  _$jscoverage['plugins/table.action.js'][149] = 0;
  _$jscoverage['plugins/table.action.js'][151] = 0;
  _$jscoverage['plugins/table.action.js'][152] = 0;
  _$jscoverage['plugins/table.action.js'][153] = 0;
  _$jscoverage['plugins/table.action.js'][154] = 0;
  _$jscoverage['plugins/table.action.js'][155] = 0;
  _$jscoverage['plugins/table.action.js'][156] = 0;
  _$jscoverage['plugins/table.action.js'][158] = 0;
  _$jscoverage['plugins/table.action.js'][163] = 0;
  _$jscoverage['plugins/table.action.js'][165] = 0;
  _$jscoverage['plugins/table.action.js'][166] = 0;
  _$jscoverage['plugins/table.action.js'][167] = 0;
  _$jscoverage['plugins/table.action.js'][168] = 0;
  _$jscoverage['plugins/table.action.js'][169] = 0;
  _$jscoverage['plugins/table.action.js'][171] = 0;
  _$jscoverage['plugins/table.action.js'][172] = 0;
  _$jscoverage['plugins/table.action.js'][177] = 0;
  _$jscoverage['plugins/table.action.js'][179] = 0;
  _$jscoverage['plugins/table.action.js'][181] = 0;
  _$jscoverage['plugins/table.action.js'][182] = 0;
  _$jscoverage['plugins/table.action.js'][183] = 0;
  _$jscoverage['plugins/table.action.js'][185] = 0;
  _$jscoverage['plugins/table.action.js'][186] = 0;
  _$jscoverage['plugins/table.action.js'][188] = 0;
  _$jscoverage['plugins/table.action.js'][189] = 0;
  _$jscoverage['plugins/table.action.js'][192] = 0;
  _$jscoverage['plugins/table.action.js'][193] = 0;
  _$jscoverage['plugins/table.action.js'][195] = 0;
  _$jscoverage['plugins/table.action.js'][196] = 0;
  _$jscoverage['plugins/table.action.js'][197] = 0;
  _$jscoverage['plugins/table.action.js'][198] = 0;
  _$jscoverage['plugins/table.action.js'][201] = 0;
  _$jscoverage['plugins/table.action.js'][202] = 0;
  _$jscoverage['plugins/table.action.js'][203] = 0;
  _$jscoverage['plugins/table.action.js'][204] = 0;
  _$jscoverage['plugins/table.action.js'][205] = 0;
  _$jscoverage['plugins/table.action.js'][213] = 0;
  _$jscoverage['plugins/table.action.js'][214] = 0;
  _$jscoverage['plugins/table.action.js'][215] = 0;
  _$jscoverage['plugins/table.action.js'][216] = 0;
  _$jscoverage['plugins/table.action.js'][217] = 0;
  _$jscoverage['plugins/table.action.js'][218] = 0;
  _$jscoverage['plugins/table.action.js'][219] = 0;
  _$jscoverage['plugins/table.action.js'][220] = 0;
  _$jscoverage['plugins/table.action.js'][223] = 0;
  _$jscoverage['plugins/table.action.js'][224] = 0;
  _$jscoverage['plugins/table.action.js'][225] = 0;
  _$jscoverage['plugins/table.action.js'][227] = 0;
  _$jscoverage['plugins/table.action.js'][234] = 0;
  _$jscoverage['plugins/table.action.js'][235] = 0;
  _$jscoverage['plugins/table.action.js'][236] = 0;
  _$jscoverage['plugins/table.action.js'][239] = 0;
  _$jscoverage['plugins/table.action.js'][240] = 0;
  _$jscoverage['plugins/table.action.js'][241] = 0;
  _$jscoverage['plugins/table.action.js'][242] = 0;
  _$jscoverage['plugins/table.action.js'][243] = 0;
  _$jscoverage['plugins/table.action.js'][244] = 0;
  _$jscoverage['plugins/table.action.js'][245] = 0;
  _$jscoverage['plugins/table.action.js'][246] = 0;
  _$jscoverage['plugins/table.action.js'][248] = 0;
  _$jscoverage['plugins/table.action.js'][249] = 0;
  _$jscoverage['plugins/table.action.js'][250] = 0;
  _$jscoverage['plugins/table.action.js'][251] = 0;
  _$jscoverage['plugins/table.action.js'][252] = 0;
  _$jscoverage['plugins/table.action.js'][253] = 0;
  _$jscoverage['plugins/table.action.js'][254] = 0;
  _$jscoverage['plugins/table.action.js'][255] = 0;
  _$jscoverage['plugins/table.action.js'][256] = 0;
  _$jscoverage['plugins/table.action.js'][257] = 0;
  _$jscoverage['plugins/table.action.js'][258] = 0;
  _$jscoverage['plugins/table.action.js'][260] = 0;
  _$jscoverage['plugins/table.action.js'][261] = 0;
  _$jscoverage['plugins/table.action.js'][262] = 0;
  _$jscoverage['plugins/table.action.js'][263] = 0;
  _$jscoverage['plugins/table.action.js'][264] = 0;
  _$jscoverage['plugins/table.action.js'][265] = 0;
  _$jscoverage['plugins/table.action.js'][267] = 0;
  _$jscoverage['plugins/table.action.js'][268] = 0;
  _$jscoverage['plugins/table.action.js'][269] = 0;
  _$jscoverage['plugins/table.action.js'][270] = 0;
  _$jscoverage['plugins/table.action.js'][271] = 0;
  _$jscoverage['plugins/table.action.js'][273] = 0;
  _$jscoverage['plugins/table.action.js'][274] = 0;
  _$jscoverage['plugins/table.action.js'][275] = 0;
  _$jscoverage['plugins/table.action.js'][276] = 0;
  _$jscoverage['plugins/table.action.js'][277] = 0;
  _$jscoverage['plugins/table.action.js'][278] = 0;
  _$jscoverage['plugins/table.action.js'][279] = 0;
  _$jscoverage['plugins/table.action.js'][280] = 0;
  _$jscoverage['plugins/table.action.js'][284] = 0;
  _$jscoverage['plugins/table.action.js'][285] = 0;
  _$jscoverage['plugins/table.action.js'][286] = 0;
  _$jscoverage['plugins/table.action.js'][287] = 0;
  _$jscoverage['plugins/table.action.js'][288] = 0;
  _$jscoverage['plugins/table.action.js'][290] = 0;
  _$jscoverage['plugins/table.action.js'][291] = 0;
  _$jscoverage['plugins/table.action.js'][292] = 0;
  _$jscoverage['plugins/table.action.js'][294] = 0;
  _$jscoverage['plugins/table.action.js'][295] = 0;
  _$jscoverage['plugins/table.action.js'][296] = 0;
  _$jscoverage['plugins/table.action.js'][297] = 0;
  _$jscoverage['plugins/table.action.js'][300] = 0;
  _$jscoverage['plugins/table.action.js'][301] = 0;
  _$jscoverage['plugins/table.action.js'][302] = 0;
  _$jscoverage['plugins/table.action.js'][303] = 0;
  _$jscoverage['plugins/table.action.js'][304] = 0;
  _$jscoverage['plugins/table.action.js'][306] = 0;
  _$jscoverage['plugins/table.action.js'][307] = 0;
  _$jscoverage['plugins/table.action.js'][308] = 0;
  _$jscoverage['plugins/table.action.js'][309] = 0;
  _$jscoverage['plugins/table.action.js'][310] = 0;
  _$jscoverage['plugins/table.action.js'][311] = 0;
  _$jscoverage['plugins/table.action.js'][313] = 0;
  _$jscoverage['plugins/table.action.js'][314] = 0;
  _$jscoverage['plugins/table.action.js'][316] = 0;
  _$jscoverage['plugins/table.action.js'][319] = 0;
  _$jscoverage['plugins/table.action.js'][320] = 0;
  _$jscoverage['plugins/table.action.js'][321] = 0;
  _$jscoverage['plugins/table.action.js'][322] = 0;
  _$jscoverage['plugins/table.action.js'][323] = 0;
  _$jscoverage['plugins/table.action.js'][324] = 0;
  _$jscoverage['plugins/table.action.js'][325] = 0;
  _$jscoverage['plugins/table.action.js'][326] = 0;
  _$jscoverage['plugins/table.action.js'][330] = 0;
  _$jscoverage['plugins/table.action.js'][332] = 0;
  _$jscoverage['plugins/table.action.js'][333] = 0;
  _$jscoverage['plugins/table.action.js'][334] = 0;
  _$jscoverage['plugins/table.action.js'][335] = 0;
  _$jscoverage['plugins/table.action.js'][336] = 0;
  _$jscoverage['plugins/table.action.js'][337] = 0;
  _$jscoverage['plugins/table.action.js'][338] = 0;
  _$jscoverage['plugins/table.action.js'][340] = 0;
  _$jscoverage['plugins/table.action.js'][341] = 0;
  _$jscoverage['plugins/table.action.js'][345] = 0;
  _$jscoverage['plugins/table.action.js'][348] = 0;
  _$jscoverage['plugins/table.action.js'][352] = 0;
  _$jscoverage['plugins/table.action.js'][353] = 0;
  _$jscoverage['plugins/table.action.js'][354] = 0;
  _$jscoverage['plugins/table.action.js'][355] = 0;
  _$jscoverage['plugins/table.action.js'][357] = 0;
  _$jscoverage['plugins/table.action.js'][358] = 0;
  _$jscoverage['plugins/table.action.js'][359] = 0;
  _$jscoverage['plugins/table.action.js'][360] = 0;
  _$jscoverage['plugins/table.action.js'][361] = 0;
  _$jscoverage['plugins/table.action.js'][362] = 0;
  _$jscoverage['plugins/table.action.js'][364] = 0;
  _$jscoverage['plugins/table.action.js'][365] = 0;
  _$jscoverage['plugins/table.action.js'][368] = 0;
  _$jscoverage['plugins/table.action.js'][369] = 0;
  _$jscoverage['plugins/table.action.js'][370] = 0;
  _$jscoverage['plugins/table.action.js'][371] = 0;
  _$jscoverage['plugins/table.action.js'][372] = 0;
  _$jscoverage['plugins/table.action.js'][373] = 0;
  _$jscoverage['plugins/table.action.js'][375] = 0;
  _$jscoverage['plugins/table.action.js'][380] = 0;
  _$jscoverage['plugins/table.action.js'][384] = 0;
  _$jscoverage['plugins/table.action.js'][385] = 0;
  _$jscoverage['plugins/table.action.js'][386] = 0;
  _$jscoverage['plugins/table.action.js'][387] = 0;
  _$jscoverage['plugins/table.action.js'][388] = 0;
  _$jscoverage['plugins/table.action.js'][392] = 0;
  _$jscoverage['plugins/table.action.js'][393] = 0;
  _$jscoverage['plugins/table.action.js'][395] = 0;
  _$jscoverage['plugins/table.action.js'][396] = 0;
  _$jscoverage['plugins/table.action.js'][397] = 0;
  _$jscoverage['plugins/table.action.js'][398] = 0;
  _$jscoverage['plugins/table.action.js'][399] = 0;
  _$jscoverage['plugins/table.action.js'][401] = 0;
  _$jscoverage['plugins/table.action.js'][402] = 0;
  _$jscoverage['plugins/table.action.js'][403] = 0;
  _$jscoverage['plugins/table.action.js'][404] = 0;
  _$jscoverage['plugins/table.action.js'][410] = 0;
  _$jscoverage['plugins/table.action.js'][411] = 0;
  _$jscoverage['plugins/table.action.js'][417] = 0;
  _$jscoverage['plugins/table.action.js'][418] = 0;
  _$jscoverage['plugins/table.action.js'][420] = 0;
  _$jscoverage['plugins/table.action.js'][421] = 0;
  _$jscoverage['plugins/table.action.js'][422] = 0;
  _$jscoverage['plugins/table.action.js'][423] = 0;
  _$jscoverage['plugins/table.action.js'][424] = 0;
  _$jscoverage['plugins/table.action.js'][425] = 0;
  _$jscoverage['plugins/table.action.js'][426] = 0;
  _$jscoverage['plugins/table.action.js'][427] = 0;
  _$jscoverage['plugins/table.action.js'][428] = 0;
  _$jscoverage['plugins/table.action.js'][430] = 0;
  _$jscoverage['plugins/table.action.js'][431] = 0;
  _$jscoverage['plugins/table.action.js'][432] = 0;
  _$jscoverage['plugins/table.action.js'][433] = 0;
  _$jscoverage['plugins/table.action.js'][437] = 0;
  _$jscoverage['plugins/table.action.js'][438] = 0;
  _$jscoverage['plugins/table.action.js'][439] = 0;
  _$jscoverage['plugins/table.action.js'][440] = 0;
  _$jscoverage['plugins/table.action.js'][441] = 0;
  _$jscoverage['plugins/table.action.js'][445] = 0;
  _$jscoverage['plugins/table.action.js'][446] = 0;
  _$jscoverage['plugins/table.action.js'][448] = 0;
  _$jscoverage['plugins/table.action.js'][449] = 0;
  _$jscoverage['plugins/table.action.js'][450] = 0;
  _$jscoverage['plugins/table.action.js'][452] = 0;
  _$jscoverage['plugins/table.action.js'][453] = 0;
  _$jscoverage['plugins/table.action.js'][454] = 0;
  _$jscoverage['plugins/table.action.js'][455] = 0;
  _$jscoverage['plugins/table.action.js'][457] = 0;
  _$jscoverage['plugins/table.action.js'][458] = 0;
  _$jscoverage['plugins/table.action.js'][459] = 0;
  _$jscoverage['plugins/table.action.js'][460] = 0;
  _$jscoverage['plugins/table.action.js'][461] = 0;
  _$jscoverage['plugins/table.action.js'][475] = 0;
  _$jscoverage['plugins/table.action.js'][476] = 0;
  _$jscoverage['plugins/table.action.js'][477] = 0;
  _$jscoverage['plugins/table.action.js'][478] = 0;
  _$jscoverage['plugins/table.action.js'][479] = 0;
  _$jscoverage['plugins/table.action.js'][480] = 0;
  _$jscoverage['plugins/table.action.js'][482] = 0;
  _$jscoverage['plugins/table.action.js'][485] = 0;
  _$jscoverage['plugins/table.action.js'][486] = 0;
  _$jscoverage['plugins/table.action.js'][487] = 0;
  _$jscoverage['plugins/table.action.js'][489] = 0;
  _$jscoverage['plugins/table.action.js'][492] = 0;
  _$jscoverage['plugins/table.action.js'][494] = 0;
  _$jscoverage['plugins/table.action.js'][495] = 0;
  _$jscoverage['plugins/table.action.js'][496] = 0;
  _$jscoverage['plugins/table.action.js'][497] = 0;
  _$jscoverage['plugins/table.action.js'][498] = 0;
  _$jscoverage['plugins/table.action.js'][499] = 0;
  _$jscoverage['plugins/table.action.js'][501] = 0;
  _$jscoverage['plugins/table.action.js'][504] = 0;
  _$jscoverage['plugins/table.action.js'][505] = 0;
  _$jscoverage['plugins/table.action.js'][506] = 0;
  _$jscoverage['plugins/table.action.js'][508] = 0;
  _$jscoverage['plugins/table.action.js'][515] = 0;
  _$jscoverage['plugins/table.action.js'][518] = 0;
  _$jscoverage['plugins/table.action.js'][520] = 0;
  _$jscoverage['plugins/table.action.js'][521] = 0;
  _$jscoverage['plugins/table.action.js'][522] = 0;
  _$jscoverage['plugins/table.action.js'][523] = 0;
  _$jscoverage['plugins/table.action.js'][529] = 0;
  _$jscoverage['plugins/table.action.js'][530] = 0;
  _$jscoverage['plugins/table.action.js'][531] = 0;
  _$jscoverage['plugins/table.action.js'][535] = 0;
  _$jscoverage['plugins/table.action.js'][537] = 0;
  _$jscoverage['plugins/table.action.js'][538] = 0;
  _$jscoverage['plugins/table.action.js'][541] = 0;
  _$jscoverage['plugins/table.action.js'][542] = 0;
  _$jscoverage['plugins/table.action.js'][543] = 0;
  _$jscoverage['plugins/table.action.js'][547] = 0;
  _$jscoverage['plugins/table.action.js'][548] = 0;
  _$jscoverage['plugins/table.action.js'][552] = 0;
  _$jscoverage['plugins/table.action.js'][553] = 0;
  _$jscoverage['plugins/table.action.js'][555] = 0;
  _$jscoverage['plugins/table.action.js'][556] = 0;
  _$jscoverage['plugins/table.action.js'][559] = 0;
  _$jscoverage['plugins/table.action.js'][560] = 0;
  _$jscoverage['plugins/table.action.js'][561] = 0;
  _$jscoverage['plugins/table.action.js'][563] = 0;
  _$jscoverage['plugins/table.action.js'][564] = 0;
  _$jscoverage['plugins/table.action.js'][567] = 0;
  _$jscoverage['plugins/table.action.js'][568] = 0;
  _$jscoverage['plugins/table.action.js'][569] = 0;
  _$jscoverage['plugins/table.action.js'][570] = 0;
  _$jscoverage['plugins/table.action.js'][571] = 0;
  _$jscoverage['plugins/table.action.js'][574] = 0;
  _$jscoverage['plugins/table.action.js'][576] = 0;
  _$jscoverage['plugins/table.action.js'][577] = 0;
  _$jscoverage['plugins/table.action.js'][578] = 0;
  _$jscoverage['plugins/table.action.js'][579] = 0;
  _$jscoverage['plugins/table.action.js'][580] = 0;
  _$jscoverage['plugins/table.action.js'][582] = 0;
  _$jscoverage['plugins/table.action.js'][585] = 0;
  _$jscoverage['plugins/table.action.js'][586] = 0;
  _$jscoverage['plugins/table.action.js'][587] = 0;
  _$jscoverage['plugins/table.action.js'][588] = 0;
  _$jscoverage['plugins/table.action.js'][589] = 0;
  _$jscoverage['plugins/table.action.js'][590] = 0;
  _$jscoverage['plugins/table.action.js'][591] = 0;
  _$jscoverage['plugins/table.action.js'][594] = 0;
  _$jscoverage['plugins/table.action.js'][598] = 0;
  _$jscoverage['plugins/table.action.js'][599] = 0;
  _$jscoverage['plugins/table.action.js'][601] = 0;
  _$jscoverage['plugins/table.action.js'][602] = 0;
  _$jscoverage['plugins/table.action.js'][604] = 0;
  _$jscoverage['plugins/table.action.js'][605] = 0;
  _$jscoverage['plugins/table.action.js'][606] = 0;
  _$jscoverage['plugins/table.action.js'][608] = 0;
  _$jscoverage['plugins/table.action.js'][609] = 0;
  _$jscoverage['plugins/table.action.js'][610] = 0;
  _$jscoverage['plugins/table.action.js'][611] = 0;
  _$jscoverage['plugins/table.action.js'][612] = 0;
  _$jscoverage['plugins/table.action.js'][615] = 0;
  _$jscoverage['plugins/table.action.js'][616] = 0;
  _$jscoverage['plugins/table.action.js'][617] = 0;
  _$jscoverage['plugins/table.action.js'][618] = 0;
  _$jscoverage['plugins/table.action.js'][619] = 0;
  _$jscoverage['plugins/table.action.js'][623] = 0;
  _$jscoverage['plugins/table.action.js'][624] = 0;
  _$jscoverage['plugins/table.action.js'][626] = 0;
  _$jscoverage['plugins/table.action.js'][627] = 0;
  _$jscoverage['plugins/table.action.js'][630] = 0;
  _$jscoverage['plugins/table.action.js'][631] = 0;
  _$jscoverage['plugins/table.action.js'][632] = 0;
  _$jscoverage['plugins/table.action.js'][634] = 0;
  _$jscoverage['plugins/table.action.js'][635] = 0;
  _$jscoverage['plugins/table.action.js'][636] = 0;
  _$jscoverage['plugins/table.action.js'][638] = 0;
  _$jscoverage['plugins/table.action.js'][639] = 0;
  _$jscoverage['plugins/table.action.js'][641] = 0;
  _$jscoverage['plugins/table.action.js'][642] = 0;
  _$jscoverage['plugins/table.action.js'][644] = 0;
  _$jscoverage['plugins/table.action.js'][650] = 0;
  _$jscoverage['plugins/table.action.js'][651] = 0;
  _$jscoverage['plugins/table.action.js'][653] = 0;
  _$jscoverage['plugins/table.action.js'][656] = 0;
  _$jscoverage['plugins/table.action.js'][657] = 0;
  _$jscoverage['plugins/table.action.js'][661] = 0;
  _$jscoverage['plugins/table.action.js'][662] = 0;
  _$jscoverage['plugins/table.action.js'][663] = 0;
  _$jscoverage['plugins/table.action.js'][664] = 0;
  _$jscoverage['plugins/table.action.js'][665] = 0;
  _$jscoverage['plugins/table.action.js'][666] = 0;
  _$jscoverage['plugins/table.action.js'][667] = 0;
  _$jscoverage['plugins/table.action.js'][668] = 0;
  _$jscoverage['plugins/table.action.js'][669] = 0;
  _$jscoverage['plugins/table.action.js'][671] = 0;
  _$jscoverage['plugins/table.action.js'][673] = 0;
  _$jscoverage['plugins/table.action.js'][674] = 0;
  _$jscoverage['plugins/table.action.js'][675] = 0;
  _$jscoverage['plugins/table.action.js'][676] = 0;
  _$jscoverage['plugins/table.action.js'][677] = 0;
  _$jscoverage['plugins/table.action.js'][678] = 0;
  _$jscoverage['plugins/table.action.js'][679] = 0;
  _$jscoverage['plugins/table.action.js'][682] = 0;
  _$jscoverage['plugins/table.action.js'][683] = 0;
  _$jscoverage['plugins/table.action.js'][684] = 0;
  _$jscoverage['plugins/table.action.js'][685] = 0;
  _$jscoverage['plugins/table.action.js'][689] = 0;
  _$jscoverage['plugins/table.action.js'][690] = 0;
  _$jscoverage['plugins/table.action.js'][691] = 0;
  _$jscoverage['plugins/table.action.js'][692] = 0;
  _$jscoverage['plugins/table.action.js'][693] = 0;
  _$jscoverage['plugins/table.action.js'][695] = 0;
  _$jscoverage['plugins/table.action.js'][697] = 0;
  _$jscoverage['plugins/table.action.js'][707] = 0;
  _$jscoverage['plugins/table.action.js'][708] = 0;
  _$jscoverage['plugins/table.action.js'][709] = 0;
  _$jscoverage['plugins/table.action.js'][712] = 0;
  _$jscoverage['plugins/table.action.js'][713] = 0;
  _$jscoverage['plugins/table.action.js'][714] = 0;
  _$jscoverage['plugins/table.action.js'][715] = 0;
  _$jscoverage['plugins/table.action.js'][719] = 0;
  _$jscoverage['plugins/table.action.js'][720] = 0;
  _$jscoverage['plugins/table.action.js'][721] = 0;
  _$jscoverage['plugins/table.action.js'][722] = 0;
  _$jscoverage['plugins/table.action.js'][723] = 0;
  _$jscoverage['plugins/table.action.js'][726] = 0;
  _$jscoverage['plugins/table.action.js'][727] = 0;
  _$jscoverage['plugins/table.action.js'][728] = 0;
  _$jscoverage['plugins/table.action.js'][729] = 0;
  _$jscoverage['plugins/table.action.js'][731] = 0;
  _$jscoverage['plugins/table.action.js'][732] = 0;
  _$jscoverage['plugins/table.action.js'][733] = 0;
  _$jscoverage['plugins/table.action.js'][736] = 0;
  _$jscoverage['plugins/table.action.js'][740] = 0;
  _$jscoverage['plugins/table.action.js'][741] = 0;
  _$jscoverage['plugins/table.action.js'][742] = 0;
  _$jscoverage['plugins/table.action.js'][744] = 0;
  _$jscoverage['plugins/table.action.js'][750] = 0;
  _$jscoverage['plugins/table.action.js'][752] = 0;
  _$jscoverage['plugins/table.action.js'][753] = 0;
  _$jscoverage['plugins/table.action.js'][756] = 0;
  _$jscoverage['plugins/table.action.js'][759] = 0;
  _$jscoverage['plugins/table.action.js'][763] = 0;
  _$jscoverage['plugins/table.action.js'][765] = 0;
  _$jscoverage['plugins/table.action.js'][767] = 0;
  _$jscoverage['plugins/table.action.js'][768] = 0;
  _$jscoverage['plugins/table.action.js'][769] = 0;
  _$jscoverage['plugins/table.action.js'][770] = 0;
  _$jscoverage['plugins/table.action.js'][772] = 0;
  _$jscoverage['plugins/table.action.js'][777] = 0;
  _$jscoverage['plugins/table.action.js'][778] = 0;
  _$jscoverage['plugins/table.action.js'][779] = 0;
  _$jscoverage['plugins/table.action.js'][780] = 0;
  _$jscoverage['plugins/table.action.js'][781] = 0;
  _$jscoverage['plugins/table.action.js'][782] = 0;
  _$jscoverage['plugins/table.action.js'][783] = 0;
  _$jscoverage['plugins/table.action.js'][784] = 0;
  _$jscoverage['plugins/table.action.js'][785] = 0;
  _$jscoverage['plugins/table.action.js'][786] = 0;
  _$jscoverage['plugins/table.action.js'][788] = 0;
  _$jscoverage['plugins/table.action.js'][791] = 0;
  _$jscoverage['plugins/table.action.js'][793] = 0;
  _$jscoverage['plugins/table.action.js'][794] = 0;
  _$jscoverage['plugins/table.action.js'][795] = 0;
  _$jscoverage['plugins/table.action.js'][796] = 0;
  _$jscoverage['plugins/table.action.js'][799] = 0;
  _$jscoverage['plugins/table.action.js'][800] = 0;
  _$jscoverage['plugins/table.action.js'][801] = 0;
  _$jscoverage['plugins/table.action.js'][802] = 0;
  _$jscoverage['plugins/table.action.js'][803] = 0;
  _$jscoverage['plugins/table.action.js'][804] = 0;
  _$jscoverage['plugins/table.action.js'][806] = 0;
  _$jscoverage['plugins/table.action.js'][807] = 0;
  _$jscoverage['plugins/table.action.js'][808] = 0;
  _$jscoverage['plugins/table.action.js'][809] = 0;
  _$jscoverage['plugins/table.action.js'][810] = 0;
  _$jscoverage['plugins/table.action.js'][813] = 0;
  _$jscoverage['plugins/table.action.js'][817] = 0;
  _$jscoverage['plugins/table.action.js'][821] = 0;
  _$jscoverage['plugins/table.action.js'][825] = 0;
  _$jscoverage['plugins/table.action.js'][827] = 0;
  _$jscoverage['plugins/table.action.js'][828] = 0;
  _$jscoverage['plugins/table.action.js'][829] = 0;
  _$jscoverage['plugins/table.action.js'][830] = 0;
  _$jscoverage['plugins/table.action.js'][831] = 0;
  _$jscoverage['plugins/table.action.js'][834] = 0;
  _$jscoverage['plugins/table.action.js'][838] = 0;
  _$jscoverage['plugins/table.action.js'][839] = 0;
  _$jscoverage['plugins/table.action.js'][841] = 0;
  _$jscoverage['plugins/table.action.js'][842] = 0;
  _$jscoverage['plugins/table.action.js'][843] = 0;
  _$jscoverage['plugins/table.action.js'][844] = 0;
  _$jscoverage['plugins/table.action.js'][845] = 0;
  _$jscoverage['plugins/table.action.js'][846] = 0;
  _$jscoverage['plugins/table.action.js'][847] = 0;
  _$jscoverage['plugins/table.action.js'][848] = 0;
  _$jscoverage['plugins/table.action.js'][850] = 0;
  _$jscoverage['plugins/table.action.js'][851] = 0;
  _$jscoverage['plugins/table.action.js'][853] = 0;
  _$jscoverage['plugins/table.action.js'][854] = 0;
  _$jscoverage['plugins/table.action.js'][856] = 0;
  _$jscoverage['plugins/table.action.js'][857] = 0;
  _$jscoverage['plugins/table.action.js'][859] = 0;
  _$jscoverage['plugins/table.action.js'][860] = 0;
  _$jscoverage['plugins/table.action.js'][862] = 0;
  _$jscoverage['plugins/table.action.js'][864] = 0;
  _$jscoverage['plugins/table.action.js'][866] = 0;
  _$jscoverage['plugins/table.action.js'][867] = 0;
  _$jscoverage['plugins/table.action.js'][868] = 0;
  _$jscoverage['plugins/table.action.js'][872] = 0;
  _$jscoverage['plugins/table.action.js'][873] = 0;
  _$jscoverage['plugins/table.action.js'][874] = 0;
  _$jscoverage['plugins/table.action.js'][878] = 0;
  _$jscoverage['plugins/table.action.js'][879] = 0;
  _$jscoverage['plugins/table.action.js'][882] = 0;
  _$jscoverage['plugins/table.action.js'][897] = 0;
  _$jscoverage['plugins/table.action.js'][898] = 0;
  _$jscoverage['plugins/table.action.js'][901] = 0;
  _$jscoverage['plugins/table.action.js'][902] = 0;
  _$jscoverage['plugins/table.action.js'][904] = 0;
  _$jscoverage['plugins/table.action.js'][906] = 0;
  _$jscoverage['plugins/table.action.js'][915] = 0;
  _$jscoverage['plugins/table.action.js'][916] = 0;
  _$jscoverage['plugins/table.action.js'][917] = 0;
  _$jscoverage['plugins/table.action.js'][918] = 0;
  _$jscoverage['plugins/table.action.js'][924] = 0;
  _$jscoverage['plugins/table.action.js'][925] = 0;
  _$jscoverage['plugins/table.action.js'][927] = 0;
  _$jscoverage['plugins/table.action.js'][934] = 0;
  _$jscoverage['plugins/table.action.js'][935] = 0;
  _$jscoverage['plugins/table.action.js'][936] = 0;
  _$jscoverage['plugins/table.action.js'][938] = 0;
  _$jscoverage['plugins/table.action.js'][940] = 0;
  _$jscoverage['plugins/table.action.js'][947] = 0;
  _$jscoverage['plugins/table.action.js'][948] = 0;
  _$jscoverage['plugins/table.action.js'][949] = 0;
  _$jscoverage['plugins/table.action.js'][950] = 0;
  _$jscoverage['plugins/table.action.js'][951] = 0;
  _$jscoverage['plugins/table.action.js'][952] = 0;
  _$jscoverage['plugins/table.action.js'][953] = 0;
  _$jscoverage['plugins/table.action.js'][955] = 0;
  _$jscoverage['plugins/table.action.js'][958] = 0;
  _$jscoverage['plugins/table.action.js'][960] = 0;
  _$jscoverage['plugins/table.action.js'][968] = 0;
  _$jscoverage['plugins/table.action.js'][970] = 0;
  _$jscoverage['plugins/table.action.js'][973] = 0;
  _$jscoverage['plugins/table.action.js'][974] = 0;
  _$jscoverage['plugins/table.action.js'][975] = 0;
  _$jscoverage['plugins/table.action.js'][976] = 0;
  _$jscoverage['plugins/table.action.js'][977] = 0;
  _$jscoverage['plugins/table.action.js'][979] = 0;
  _$jscoverage['plugins/table.action.js'][989] = 0;
  _$jscoverage['plugins/table.action.js'][990] = 0;
  _$jscoverage['plugins/table.action.js'][993] = 0;
  _$jscoverage['plugins/table.action.js'][995] = 0;
  _$jscoverage['plugins/table.action.js'][999] = 0;
  _$jscoverage['plugins/table.action.js'][1006] = 0;
  _$jscoverage['plugins/table.action.js'][1008] = 0;
  _$jscoverage['plugins/table.action.js'][1017] = 0;
  _$jscoverage['plugins/table.action.js'][1024] = 0;
  _$jscoverage['plugins/table.action.js'][1026] = 0;
  _$jscoverage['plugins/table.action.js'][1028] = 0;
  _$jscoverage['plugins/table.action.js'][1037] = 0;
  _$jscoverage['plugins/table.action.js'][1038] = 0;
  _$jscoverage['plugins/table.action.js'][1040] = 0;
  _$jscoverage['plugins/table.action.js'][1041] = 0;
  _$jscoverage['plugins/table.action.js'][1044] = 0;
  _$jscoverage['plugins/table.action.js'][1045] = 0;
  _$jscoverage['plugins/table.action.js'][1047] = 0;
  _$jscoverage['plugins/table.action.js'][1048] = 0;
  _$jscoverage['plugins/table.action.js'][1050] = 0;
  _$jscoverage['plugins/table.action.js'][1051] = 0;
  _$jscoverage['plugins/table.action.js'][1053] = 0;
  _$jscoverage['plugins/table.action.js'][1054] = 0;
  _$jscoverage['plugins/table.action.js'][1056] = 0;
  _$jscoverage['plugins/table.action.js'][1059] = 0;
  _$jscoverage['plugins/table.action.js'][1061] = 0;
  _$jscoverage['plugins/table.action.js'][1062] = 0;
  _$jscoverage['plugins/table.action.js'][1065] = 0;
  _$jscoverage['plugins/table.action.js'][1071] = 0;
  _$jscoverage['plugins/table.action.js'][1072] = 0;
  _$jscoverage['plugins/table.action.js'][1075] = 0;
  _$jscoverage['plugins/table.action.js'][1076] = 0;
  _$jscoverage['plugins/table.action.js'][1077] = 0;
  _$jscoverage['plugins/table.action.js'][1078] = 0;
  _$jscoverage['plugins/table.action.js'][1079] = 0;
  _$jscoverage['plugins/table.action.js'][1082] = 0;
  _$jscoverage['plugins/table.action.js'][1083] = 0;
  _$jscoverage['plugins/table.action.js'][1084] = 0;
  _$jscoverage['plugins/table.action.js'][1086] = 0;
  _$jscoverage['plugins/table.action.js'][1087] = 0;
  _$jscoverage['plugins/table.action.js'][1088] = 0;
  _$jscoverage['plugins/table.action.js'][1094] = 0;
  _$jscoverage['plugins/table.action.js'][1100] = 0;
  _$jscoverage['plugins/table.action.js'][1101] = 0;
  _$jscoverage['plugins/table.action.js'][1102] = 0;
  _$jscoverage['plugins/table.action.js'][1106] = 0;
  _$jscoverage['plugins/table.action.js'][1107] = 0;
  _$jscoverage['plugins/table.action.js'][1108] = 0;
  _$jscoverage['plugins/table.action.js'][1109] = 0;
  _$jscoverage['plugins/table.action.js'][1110] = 0;
  _$jscoverage['plugins/table.action.js'][1111] = 0;
  _$jscoverage['plugins/table.action.js'][1112] = 0;
  _$jscoverage['plugins/table.action.js'][1114] = 0;
  _$jscoverage['plugins/table.action.js'][1116] = 0;
  _$jscoverage['plugins/table.action.js'][1117] = 0;
  _$jscoverage['plugins/table.action.js'][1118] = 0;
  _$jscoverage['plugins/table.action.js'][1119] = 0;
  _$jscoverage['plugins/table.action.js'][1121] = 0;
  _$jscoverage['plugins/table.action.js'][1122] = 0;
  _$jscoverage['plugins/table.action.js'][1123] = 0;
  _$jscoverage['plugins/table.action.js'][1124] = 0;
  _$jscoverage['plugins/table.action.js'][1128] = 0;
  _$jscoverage['plugins/table.action.js'][1129] = 0;
  _$jscoverage['plugins/table.action.js'][1133] = 0;
  _$jscoverage['plugins/table.action.js'][1135] = 0;
  _$jscoverage['plugins/table.action.js'][1137] = 0;
  _$jscoverage['plugins/table.action.js'][1140] = 0;
  _$jscoverage['plugins/table.action.js'][1142] = 0;
  _$jscoverage['plugins/table.action.js'][1146] = 0;
  _$jscoverage['plugins/table.action.js'][1148] = 0;
  _$jscoverage['plugins/table.action.js'][1152] = 0;
  _$jscoverage['plugins/table.action.js'][1155] = 0;
  _$jscoverage['plugins/table.action.js'][1157] = 0;
  _$jscoverage['plugins/table.action.js'][1159] = 0;
  _$jscoverage['plugins/table.action.js'][1161] = 0;
  _$jscoverage['plugins/table.action.js'][1162] = 0;
  _$jscoverage['plugins/table.action.js'][1163] = 0;
  _$jscoverage['plugins/table.action.js'][1166] = 0;
  _$jscoverage['plugins/table.action.js'][1170] = 0;
  _$jscoverage['plugins/table.action.js'][1172] = 0;
  _$jscoverage['plugins/table.action.js'][1174] = 0;
  _$jscoverage['plugins/table.action.js'][1194] = 0;
  _$jscoverage['plugins/table.action.js'][1196] = 0;
  _$jscoverage['plugins/table.action.js'][1199] = 0;
  _$jscoverage['plugins/table.action.js'][1200] = 0;
  _$jscoverage['plugins/table.action.js'][1202] = 0;
  _$jscoverage['plugins/table.action.js'][1203] = 0;
  _$jscoverage['plugins/table.action.js'][1204] = 0;
  _$jscoverage['plugins/table.action.js'][1205] = 0;
  _$jscoverage['plugins/table.action.js'][1206] = 0;
  _$jscoverage['plugins/table.action.js'][1209] = 0;
  _$jscoverage['plugins/table.action.js'][1210] = 0;
  _$jscoverage['plugins/table.action.js'][1211] = 0;
  _$jscoverage['plugins/table.action.js'][1212] = 0;
  _$jscoverage['plugins/table.action.js'][1215] = 0;
  _$jscoverage['plugins/table.action.js'][1222] = 0;
  _$jscoverage['plugins/table.action.js'][1224] = 0;
  _$jscoverage['plugins/table.action.js'][1225] = 0;
  _$jscoverage['plugins/table.action.js'][1228] = 0;
  _$jscoverage['plugins/table.action.js'][1231] = 0;
  _$jscoverage['plugins/table.action.js'][1233] = 0;
  _$jscoverage['plugins/table.action.js'][1234] = 0;
  _$jscoverage['plugins/table.action.js'][1239] = 0;
  _$jscoverage['plugins/table.action.js'][1241] = 0;
  _$jscoverage['plugins/table.action.js'][1244] = 0;
  _$jscoverage['plugins/table.action.js'][1246] = 0;
  _$jscoverage['plugins/table.action.js'][1248] = 0;
  _$jscoverage['plugins/table.action.js'][1249] = 0;
  _$jscoverage['plugins/table.action.js'][1254] = 0;
  _$jscoverage['plugins/table.action.js'][1258] = 0;
  _$jscoverage['plugins/table.action.js'][1259] = 0;
  _$jscoverage['plugins/table.action.js'][1260] = 0;
  _$jscoverage['plugins/table.action.js'][1263] = 0;
  _$jscoverage['plugins/table.action.js'][1265] = 0;
  _$jscoverage['plugins/table.action.js'][1268] = 0;
  _$jscoverage['plugins/table.action.js'][1270] = 0;
  _$jscoverage['plugins/table.action.js'][1271] = 0;
  _$jscoverage['plugins/table.action.js'][1272] = 0;
  _$jscoverage['plugins/table.action.js'][1277] = 0;
  _$jscoverage['plugins/table.action.js'][1282] = 0;
  _$jscoverage['plugins/table.action.js'][1284] = 0;
  _$jscoverage['plugins/table.action.js'][1286] = 0;
  _$jscoverage['plugins/table.action.js'][1287] = 0;
  _$jscoverage['plugins/table.action.js'][1289] = 0;
  _$jscoverage['plugins/table.action.js'][1290] = 0;
  _$jscoverage['plugins/table.action.js'][1291] = 0;
  _$jscoverage['plugins/table.action.js'][1293] = 0;
  _$jscoverage['plugins/table.action.js'][1294] = 0;
  _$jscoverage['plugins/table.action.js'][1295] = 0;
  _$jscoverage['plugins/table.action.js'][1296] = 0;
  _$jscoverage['plugins/table.action.js'][1297] = 0;
  _$jscoverage['plugins/table.action.js'][1299] = 0;
  _$jscoverage['plugins/table.action.js'][1300] = 0;
  _$jscoverage['plugins/table.action.js'][1303] = 0;
  _$jscoverage['plugins/table.action.js'][1305] = 0;
  _$jscoverage['plugins/table.action.js'][1306] = 0;
  _$jscoverage['plugins/table.action.js'][1309] = 0;
  _$jscoverage['plugins/table.action.js'][1311] = 0;
  _$jscoverage['plugins/table.action.js'][1313] = 0;
  _$jscoverage['plugins/table.action.js'][1314] = 0;
  _$jscoverage['plugins/table.action.js'][1316] = 0;
  _$jscoverage['plugins/table.action.js'][1321] = 0;
  _$jscoverage['plugins/table.action.js'][1322] = 0;
  _$jscoverage['plugins/table.action.js'][1325] = 0;
  _$jscoverage['plugins/table.action.js'][1327] = 0;
  _$jscoverage['plugins/table.action.js'][1328] = 0;
  _$jscoverage['plugins/table.action.js'][1329] = 0;
  _$jscoverage['plugins/table.action.js'][1335] = 0;
  _$jscoverage['plugins/table.action.js'][1336] = 0;
  _$jscoverage['plugins/table.action.js'][1338] = 0;
  _$jscoverage['plugins/table.action.js'][1342] = 0;
  _$jscoverage['plugins/table.action.js'][1343] = 0;
  _$jscoverage['plugins/table.action.js'][1344] = 0;
  _$jscoverage['plugins/table.action.js'][1345] = 0;
  _$jscoverage['plugins/table.action.js'][1346] = 0;
  _$jscoverage['plugins/table.action.js'][1347] = 0;
  _$jscoverage['plugins/table.action.js'][1350] = 0;
  _$jscoverage['plugins/table.action.js'][1353] = 0;
  _$jscoverage['plugins/table.action.js'][1354] = 0;
  _$jscoverage['plugins/table.action.js'][1356] = 0;
  _$jscoverage['plugins/table.action.js'][1358] = 0;
  _$jscoverage['plugins/table.action.js'][1360] = 0;
  _$jscoverage['plugins/table.action.js'][1361] = 0;
  _$jscoverage['plugins/table.action.js'][1363] = 0;
  _$jscoverage['plugins/table.action.js'][1366] = 0;
  _$jscoverage['plugins/table.action.js'][1368] = 0;
  _$jscoverage['plugins/table.action.js'][1369] = 0;
  _$jscoverage['plugins/table.action.js'][1371] = 0;
  _$jscoverage['plugins/table.action.js'][1372] = 0;
  _$jscoverage['plugins/table.action.js'][1375] = 0;
  _$jscoverage['plugins/table.action.js'][1376] = 0;
  _$jscoverage['plugins/table.action.js'][1378] = 0;
  _$jscoverage['plugins/table.action.js'][1379] = 0;
  _$jscoverage['plugins/table.action.js'][1380] = 0;
  _$jscoverage['plugins/table.action.js'][1383] = 0;
  _$jscoverage['plugins/table.action.js'][1384] = 0;
  _$jscoverage['plugins/table.action.js'][1385] = 0;
  _$jscoverage['plugins/table.action.js'][1386] = 0;
  _$jscoverage['plugins/table.action.js'][1387] = 0;
  _$jscoverage['plugins/table.action.js'][1388] = 0;
  _$jscoverage['plugins/table.action.js'][1389] = 0;
  _$jscoverage['plugins/table.action.js'][1392] = 0;
  _$jscoverage['plugins/table.action.js'][1394] = 0;
  _$jscoverage['plugins/table.action.js'][1395] = 0;
  _$jscoverage['plugins/table.action.js'][1396] = 0;
  _$jscoverage['plugins/table.action.js'][1397] = 0;
  _$jscoverage['plugins/table.action.js'][1399] = 0;
  _$jscoverage['plugins/table.action.js'][1402] = 0;
  _$jscoverage['plugins/table.action.js'][1403] = 0;
  _$jscoverage['plugins/table.action.js'][1404] = 0;
  _$jscoverage['plugins/table.action.js'][1407] = 0;
  _$jscoverage['plugins/table.action.js'][1408] = 0;
  _$jscoverage['plugins/table.action.js'][1412] = 0;
  _$jscoverage['plugins/table.action.js'][1413] = 0;
  _$jscoverage['plugins/table.action.js'][1415] = 0;
  _$jscoverage['plugins/table.action.js'][1418] = 0;
  _$jscoverage['plugins/table.action.js'][1420] = 0;
  _$jscoverage['plugins/table.action.js'][1421] = 0;
  _$jscoverage['plugins/table.action.js'][1424] = 0;
  _$jscoverage['plugins/table.action.js'][1426] = 0;
  _$jscoverage['plugins/table.action.js'][1428] = 0;
  _$jscoverage['plugins/table.action.js'][1431] = 0;
  _$jscoverage['plugins/table.action.js'][1432] = 0;
  _$jscoverage['plugins/table.action.js'][1433] = 0;
  _$jscoverage['plugins/table.action.js'][1434] = 0;
  _$jscoverage['plugins/table.action.js'][1435] = 0;
  _$jscoverage['plugins/table.action.js'][1436] = 0;
  _$jscoverage['plugins/table.action.js'][1438] = 0;
  _$jscoverage['plugins/table.action.js'][1439] = 0;
  _$jscoverage['plugins/table.action.js'][1443] = 0;
  _$jscoverage['plugins/table.action.js'][1446] = 0;
  _$jscoverage['plugins/table.action.js'][1447] = 0;
  _$jscoverage['plugins/table.action.js'][1449] = 0;
  _$jscoverage['plugins/table.action.js'][1450] = 0;
  _$jscoverage['plugins/table.action.js'][1451] = 0;
  _$jscoverage['plugins/table.action.js'][1454] = 0;
  _$jscoverage['plugins/table.action.js'][1455] = 0;
  _$jscoverage['plugins/table.action.js'][1456] = 0;
  _$jscoverage['plugins/table.action.js'][1459] = 0;
  _$jscoverage['plugins/table.action.js'][1461] = 0;
  _$jscoverage['plugins/table.action.js'][1462] = 0;
  _$jscoverage['plugins/table.action.js'][1465] = 0;
  _$jscoverage['plugins/table.action.js'][1468] = 0;
  _$jscoverage['plugins/table.action.js'][1469] = 0;
  _$jscoverage['plugins/table.action.js'][1472] = 0;
  _$jscoverage['plugins/table.action.js'][1474] = 0;
  _$jscoverage['plugins/table.action.js'][1476] = 0;
  _$jscoverage['plugins/table.action.js'][1478] = 0;
  _$jscoverage['plugins/table.action.js'][1480] = 0;
  _$jscoverage['plugins/table.action.js'][1481] = 0;
  _$jscoverage['plugins/table.action.js'][1487] = 0;
  _$jscoverage['plugins/table.action.js'][1488] = 0;
  _$jscoverage['plugins/table.action.js'][1496] = 0;
  _$jscoverage['plugins/table.action.js'][1497] = 0;
  _$jscoverage['plugins/table.action.js'][1500] = 0;
  _$jscoverage['plugins/table.action.js'][1501] = 0;
  _$jscoverage['plugins/table.action.js'][1502] = 0;
  _$jscoverage['plugins/table.action.js'][1503] = 0;
  _$jscoverage['plugins/table.action.js'][1504] = 0;
  _$jscoverage['plugins/table.action.js'][1507] = 0;
  _$jscoverage['plugins/table.action.js'][1508] = 0;
  _$jscoverage['plugins/table.action.js'][1518] = 0;
  _$jscoverage['plugins/table.action.js'][1520] = 0;
  _$jscoverage['plugins/table.action.js'][1521] = 0;
  _$jscoverage['plugins/table.action.js'][1524] = 0;
  _$jscoverage['plugins/table.action.js'][1525] = 0;
  _$jscoverage['plugins/table.action.js'][1529] = 0;
  _$jscoverage['plugins/table.action.js'][1534] = 0;
  _$jscoverage['plugins/table.action.js'][1536] = 0;
  _$jscoverage['plugins/table.action.js'][1537] = 0;
  _$jscoverage['plugins/table.action.js'][1539] = 0;
  _$jscoverage['plugins/table.action.js'][1542] = 0;
  _$jscoverage['plugins/table.action.js'][1545] = 0;
  _$jscoverage['plugins/table.action.js'][1547] = 0;
  _$jscoverage['plugins/table.action.js'][1549] = 0;
  _$jscoverage['plugins/table.action.js'][1552] = 0;
  _$jscoverage['plugins/table.action.js'][1554] = 0;
  _$jscoverage['plugins/table.action.js'][1556] = 0;
  _$jscoverage['plugins/table.action.js'][1558] = 0;
  _$jscoverage['plugins/table.action.js'][1563] = 0;
  _$jscoverage['plugins/table.action.js'][1565] = 0;
  _$jscoverage['plugins/table.action.js'][1567] = 0;
  _$jscoverage['plugins/table.action.js'][1568] = 0;
  _$jscoverage['plugins/table.action.js'][1573] = 0;
  _$jscoverage['plugins/table.action.js'][1581] = 0;
  _$jscoverage['plugins/table.action.js'][1589] = 0;
  _$jscoverage['plugins/table.action.js'][1591] = 0;
  _$jscoverage['plugins/table.action.js'][1593] = 0;
  _$jscoverage['plugins/table.action.js'][1595] = 0;
  _$jscoverage['plugins/table.action.js'][1599] = 0;
  _$jscoverage['plugins/table.action.js'][1603] = 0;
  _$jscoverage['plugins/table.action.js'][1606] = 0;
  _$jscoverage['plugins/table.action.js'][1608] = 0;
  _$jscoverage['plugins/table.action.js'][1609] = 0;
  _$jscoverage['plugins/table.action.js'][1612] = 0;
  _$jscoverage['plugins/table.action.js'][1615] = 0;
  _$jscoverage['plugins/table.action.js'][1617] = 0;
  _$jscoverage['plugins/table.action.js'][1620] = 0;
  _$jscoverage['plugins/table.action.js'][1622] = 0;
  _$jscoverage['plugins/table.action.js'][1625] = 0;
  _$jscoverage['plugins/table.action.js'][1626] = 0;
  _$jscoverage['plugins/table.action.js'][1634] = 0;
  _$jscoverage['plugins/table.action.js'][1636] = 0;
  _$jscoverage['plugins/table.action.js'][1640] = 0;
  _$jscoverage['plugins/table.action.js'][1642] = 0;
  _$jscoverage['plugins/table.action.js'][1648] = 0;
  _$jscoverage['plugins/table.action.js'][1650] = 0;
  _$jscoverage['plugins/table.action.js'][1654] = 0;
  _$jscoverage['plugins/table.action.js'][1656] = 0;
  _$jscoverage['plugins/table.action.js'][1657] = 0;
  _$jscoverage['plugins/table.action.js'][1661] = 0;
  _$jscoverage['plugins/table.action.js'][1668] = 0;
  _$jscoverage['plugins/table.action.js'][1670] = 0;
  _$jscoverage['plugins/table.action.js'][1672] = 0;
  _$jscoverage['plugins/table.action.js'][1674] = 0;
  _$jscoverage['plugins/table.action.js'][1676] = 0;
  _$jscoverage['plugins/table.action.js'][1679] = 0;
  _$jscoverage['plugins/table.action.js'][1682] = 0;
  _$jscoverage['plugins/table.action.js'][1687] = 0;
  _$jscoverage['plugins/table.action.js'][1691] = 0;
  _$jscoverage['plugins/table.action.js'][1693] = 0;
  _$jscoverage['plugins/table.action.js'][1695] = 0;
  _$jscoverage['plugins/table.action.js'][1702] = 0;
  _$jscoverage['plugins/table.action.js'][1703] = 0;
  _$jscoverage['plugins/table.action.js'][1705] = 0;
  _$jscoverage['plugins/table.action.js'][1706] = 0;
  _$jscoverage['plugins/table.action.js'][1708] = 0;
  _$jscoverage['plugins/table.action.js'][1710] = 0;
  _$jscoverage['plugins/table.action.js'][1712] = 0;
  _$jscoverage['plugins/table.action.js'][1714] = 0;
  _$jscoverage['plugins/table.action.js'][1716] = 0;
  _$jscoverage['plugins/table.action.js'][1718] = 0;
  _$jscoverage['plugins/table.action.js'][1720] = 0;
  _$jscoverage['plugins/table.action.js'][1721] = 0;
  _$jscoverage['plugins/table.action.js'][1723] = 0;
  _$jscoverage['plugins/table.action.js'][1725] = 0;
  _$jscoverage['plugins/table.action.js'][1727] = 0;
  _$jscoverage['plugins/table.action.js'][1731] = 0;
  _$jscoverage['plugins/table.action.js'][1733] = 0;
  _$jscoverage['plugins/table.action.js'][1737] = 0;
  _$jscoverage['plugins/table.action.js'][1738] = 0;
  _$jscoverage['plugins/table.action.js'][1739] = 0;
  _$jscoverage['plugins/table.action.js'][1740] = 0;
  _$jscoverage['plugins/table.action.js'][1749] = 0;
  _$jscoverage['plugins/table.action.js'][1752] = 0;
  _$jscoverage['plugins/table.action.js'][1753] = 0;
  _$jscoverage['plugins/table.action.js'][1754] = 0;
  _$jscoverage['plugins/table.action.js'][1755] = 0;
  _$jscoverage['plugins/table.action.js'][1756] = 0;
  _$jscoverage['plugins/table.action.js'][1765] = 0;
  _$jscoverage['plugins/table.action.js'][1766] = 0;
  _$jscoverage['plugins/table.action.js'][1767] = 0;
  _$jscoverage['plugins/table.action.js'][1773] = 0;
  _$jscoverage['plugins/table.action.js'][1775] = 0;
  _$jscoverage['plugins/table.action.js'][1776] = 0;
  _$jscoverage['plugins/table.action.js'][1777] = 0;
  _$jscoverage['plugins/table.action.js'][1779] = 0;
  _$jscoverage['plugins/table.action.js'][1781] = 0;
  _$jscoverage['plugins/table.action.js'][1782] = 0;
  _$jscoverage['plugins/table.action.js'][1792] = 0;
  _$jscoverage['plugins/table.action.js'][1793] = 0;
  _$jscoverage['plugins/table.action.js'][1794] = 0;
  _$jscoverage['plugins/table.action.js'][1795] = 0;
  _$jscoverage['plugins/table.action.js'][1796] = 0;
  _$jscoverage['plugins/table.action.js'][1797] = 0;
  _$jscoverage['plugins/table.action.js'][1798] = 0;
  _$jscoverage['plugins/table.action.js'][1799] = 0;
  _$jscoverage['plugins/table.action.js'][1800] = 0;
  _$jscoverage['plugins/table.action.js'][1802] = 0;
  _$jscoverage['plugins/table.action.js'][1809] = 0;
  _$jscoverage['plugins/table.action.js'][1810] = 0;
  _$jscoverage['plugins/table.action.js'][1811] = 0;
  _$jscoverage['plugins/table.action.js'][1817] = 0;
  _$jscoverage['plugins/table.action.js'][1819] = 0;
  _$jscoverage['plugins/table.action.js'][1822] = 0;
  _$jscoverage['plugins/table.action.js'][1823] = 0;
  _$jscoverage['plugins/table.action.js'][1826] = 0;
  _$jscoverage['plugins/table.action.js'][1830] = 0;
  _$jscoverage['plugins/table.action.js'][1831] = 0;
  _$jscoverage['plugins/table.action.js'][1834] = 0;
  _$jscoverage['plugins/table.action.js'][1836] = 0;
  _$jscoverage['plugins/table.action.js'][1839] = 0;
  _$jscoverage['plugins/table.action.js'][1840] = 0;
  _$jscoverage['plugins/table.action.js'][1843] = 0;
  _$jscoverage['plugins/table.action.js'][1845] = 0;
  _$jscoverage['plugins/table.action.js'][1848] = 0;
  _$jscoverage['plugins/table.action.js'][1849] = 0;
  _$jscoverage['plugins/table.action.js'][1856] = 0;
}
_$jscoverage['plugins/table.action.js'].source = ["<span class=\"c\">/*</span>","<span class=\"c\"> * Created with JetBrains PhpStorm.</span>","<span class=\"c\"> * User: taoqili</span>","<span class=\"c\"> * Date: 12-10-12</span>","<span class=\"c\"> * Time: &#19978;&#21320;10:05</span>","<span class=\"c\"> * To change this template use File | Settings | File Templates.</span>","<span class=\"c\"> */</span>","UE<span class=\"k\">.</span>plugins<span class=\"k\">[</span><span class=\"s\">'table'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","        tabTimer <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">,</span>","        <span class=\"c\">//&#25302;&#21160;&#35745;&#26102;&#22120;</span>","        tableDragTimer <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">,</span>","        <span class=\"c\">//&#21452;&#20987;&#35745;&#26102;&#22120;</span>","        tableResizeTimer <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">,</span>","        <span class=\"c\">//&#21333;&#20803;&#26684;&#26368;&#23567;&#23485;&#24230;</span>","        cellMinWidth <span class=\"k\">=</span> <span class=\"s\">5</span><span class=\"k\">,</span>","        isInResizeBuffer <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        <span class=\"c\">//&#21333;&#20803;&#26684;&#36793;&#26694;&#22823;&#23567;</span>","        cellBorderWidth <span class=\"k\">=</span> <span class=\"s\">5</span><span class=\"k\">,</span>","        <span class=\"c\">//&#40736;&#26631;&#20559;&#31227;&#36317;&#31163;</span>","        offsetOfTableCell <span class=\"k\">=</span> <span class=\"s\">10</span><span class=\"k\">,</span>","        <span class=\"c\">//&#35760;&#24405;&#22312;&#26377;&#38480;&#26102;&#38388;&#20869;&#30340;&#28857;&#20987;&#29366;&#24577;&#65292; &#20849;&#26377;3&#20010;&#21462;&#20540;&#65292; 0, 1, 2&#12290; 0&#20195;&#34920;&#26410;&#21021;&#22987;&#21270;&#65292; 1&#20195;&#34920;&#21333;&#20987;&#20102;1&#27425;&#65292;2&#20195;&#34920;2&#27425;</span>","        singleClickState <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","        userActionStatus <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">,</span>","        <span class=\"c\">//&#21452;&#20987;&#20801;&#35768;&#30340;&#26102;&#38388;&#33539;&#22260;</span>","        dblclickTime <span class=\"k\">=</span> <span class=\"s\">360</span><span class=\"k\">,</span>","        UT <span class=\"k\">=</span> UE<span class=\"k\">.</span>UETable<span class=\"k\">,</span>","        getUETable <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>tdOrTable<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> UT<span class=\"k\">.</span>getUETable<span class=\"k\">(</span>tdOrTable<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        getUETableBySelected <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>editor<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> UT<span class=\"k\">.</span>getUETableBySelected<span class=\"k\">(</span>editor<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        getDefaultValue <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>editor<span class=\"k\">,</span> table<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> UT<span class=\"k\">.</span>getDefaultValue<span class=\"k\">(</span>editor<span class=\"k\">,</span> table<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        removeSelectedClass <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cells<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> UT<span class=\"k\">.</span>removeSelectedClass<span class=\"k\">(</span>cells<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> showError<span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","<span class=\"c\">//        throw e;</span>","    <span class=\"k\">}</span>","    me<span class=\"k\">.</span>ready<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","        <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> orgGetText <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getText<span class=\"k\">;</span>","        me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getText <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>table<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> str <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>table<span class=\"k\">.</span>selectedTds<span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>td<span class=\"k\">)</span><span class=\"k\">{</span>","                    str <span class=\"k\">+=</span> td<span class=\"k\">[</span>browser<span class=\"k\">.</span>ie<span class=\"k\">?</span><span class=\"s\">'innerText'</span><span class=\"k\">:</span><span class=\"s\">'textContent'</span><span class=\"k\">];</span>","                <span class=\"k\">}</span><span class=\"k\">)</span>","                <span class=\"k\">return</span> str<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">else</span><span class=\"k\">{</span>","                <span class=\"k\">return</span> orgGetText<span class=\"k\">.</span>call<span class=\"k\">(</span>me<span class=\"k\">.</span>selection<span class=\"k\">)</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">)</span>","","    <span class=\"c\">//&#22788;&#29702;&#25302;&#21160;&#21450;&#26694;&#36873;&#30456;&#20851;&#26041;&#27861;</span>","    <span class=\"k\">var</span> startTd <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"c\">//&#40736;&#26631;&#25353;&#19979;&#26102;&#30340;&#38170;&#28857;td</span>","        currentTd <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"c\">//&#24403;&#21069;&#40736;&#26631;&#32463;&#36807;&#26102;&#30340;td</span>","        onDrag <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> <span class=\"c\">//&#25351;&#31034;&#24403;&#21069;&#25302;&#21160;&#29366;&#24577;&#65292;&#20854;&#20540;&#21487;&#20026;\"\",\"h\",\"v\" ,&#20998;&#21035;&#34920;&#31034;&#26410;&#25302;&#21160;&#29366;&#24577;&#65292;&#27178;&#21521;&#25302;&#21160;&#29366;&#24577;&#65292;&#32437;&#21521;&#25302;&#21160;&#29366;&#24577;&#65292;&#29992;&#20110;&#40736;&#26631;&#31227;&#21160;&#36807;&#31243;&#20013;&#30340;&#21028;&#26029;</span>","        onBorder <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"c\">//&#26816;&#27979;&#40736;&#26631;&#25353;&#19979;&#26102;&#26159;&#21542;&#22788;&#22312;&#21333;&#20803;&#26684;&#36793;&#32536;&#20301;&#32622;</span>","        dragButton <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">,</span>","        dragOver <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","        dragLine <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"c\">//&#27169;&#25311;&#30340;&#25302;&#21160;&#32447;</span>","        dragTd <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>    <span class=\"c\">//&#21457;&#29983;&#25302;&#21160;&#30340;&#30446;&#26631;td</span>","","    <span class=\"k\">var</span> mousedown <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">,</span>","    <span class=\"c\">//todo &#21028;&#26029;&#28151;&#20081;&#27169;&#24335;</span>","        needIEHack <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","    me<span class=\"k\">.</span>setOpt<span class=\"k\">(</span><span class=\"k\">{</span>","        <span class=\"s\">'maxColNum'</span><span class=\"k\">:</span><span class=\"s\">20</span><span class=\"k\">,</span>","        <span class=\"s\">'maxRowNum'</span><span class=\"k\">:</span><span class=\"s\">100</span><span class=\"k\">,</span>","        <span class=\"s\">'defaultCols'</span><span class=\"k\">:</span><span class=\"s\">5</span><span class=\"k\">,</span>","        <span class=\"s\">'defaultRows'</span><span class=\"k\">:</span><span class=\"s\">5</span><span class=\"k\">,</span>","        <span class=\"s\">'tdvalign'</span><span class=\"k\">:</span><span class=\"s\">'top'</span><span class=\"k\">,</span>","        <span class=\"s\">'cursorpath'</span><span class=\"k\">:</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>UEDITOR_HOME_URL <span class=\"k\">+</span> <span class=\"s\">\"themes/default/images/cursor_\"</span><span class=\"k\">,</span>","        <span class=\"s\">'tableDragable'</span><span class=\"k\">:</span><span class=\"k\">false</span><span class=\"k\">,</span>","        <span class=\"s\">'classList'</span><span class=\"k\">:[</span><span class=\"s\">\"ue-table-interlace-color-single\"</span><span class=\"k\">,</span><span class=\"s\">\"ue-table-interlace-color-double\"</span><span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","    me<span class=\"k\">.</span>getUETable <span class=\"k\">=</span> getUETable<span class=\"k\">;</span>","    <span class=\"k\">var</span> commands <span class=\"k\">=</span> <span class=\"k\">{</span>","        <span class=\"s\">'deletetable'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'inserttable'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'cellvalign'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'insertcaption'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'deletecaption'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'inserttitle'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">'deletetitle'</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"mergeright\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"mergedown\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"mergecells\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"insertrow\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"insertrownext\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"deleterow\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"insertcol\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"insertcolnext\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"deletecol\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"splittocells\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"splittorows\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"splittocols\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"adaptbytext\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"adaptbywindow\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"adaptbycustomer\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"insertparagraph\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"insertparagraphbeforetable\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"averagedistributecol\"</span><span class=\"k\">:</span><span class=\"s\">1</span><span class=\"k\">,</span>","        <span class=\"s\">\"averagedistributerow\"</span><span class=\"k\">:</span><span class=\"s\">1</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    me<span class=\"k\">.</span>ready<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","        utils<span class=\"k\">.</span>cssRule<span class=\"k\">(</span><span class=\"s\">'table'</span><span class=\"k\">,</span>","            <span class=\"c\">//&#36873;&#20013;&#30340;td&#19978;&#30340;&#26679;&#24335;</span>","            <span class=\"s\">'.selectTdClass{background-color:#edf5fa !important}'</span> <span class=\"k\">+</span>","                <span class=\"s\">'table.noBorderTable td,table.noBorderTable th,table.noBorderTable caption{border:1px dashed #ddd !important}'</span> <span class=\"k\">+</span>","                <span class=\"c\">//&#25554;&#20837;&#30340;&#34920;&#26684;&#30340;&#40664;&#35748;&#26679;&#24335;</span>","                <span class=\"s\">'table{margin-bottom:10px;border-collapse:collapse;display:table;}'</span> <span class=\"k\">+</span>","                <span class=\"s\">'td,th{padding: 5px 10px;border: 1px solid #DDD;}'</span> <span class=\"k\">+</span>","                <span class=\"s\">'caption{border:1px dashed #DDD;border-bottom:0;padding:3px;text-align:center;}'</span> <span class=\"k\">+</span>","                <span class=\"s\">'th{border-top:2px solid #BBB;background:#F7F7F7;}'</span> <span class=\"k\">+</span>","                <span class=\"s\">'.ue-table-interlace-color-single{ background-color: #fcfcfc; } .ue-table-interlace-color-double{ background-color: #f7faff; }'</span> <span class=\"k\">+</span>","                <span class=\"s\">'td p{margin:0;padding:0;}'</span><span class=\"k\">,</span> me<span class=\"k\">.</span>document<span class=\"k\">);</span>","","        <span class=\"k\">var</span> tableCopyList<span class=\"k\">,</span> isFullCol<span class=\"k\">,</span> isFullRow<span class=\"k\">;</span>","        <span class=\"c\">//&#27880;&#20876;del/backspace&#20107;&#20214;</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'keydown'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> keyCode <span class=\"k\">=</span> evt<span class=\"k\">.</span>keyCode <span class=\"k\">||</span> evt<span class=\"k\">.</span>which<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">8</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>ut <span class=\"k\">&amp;&amp;</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>isFullCol<span class=\"k\">())</span> <span class=\"k\">{</span>","                        me<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'deletecol'</span><span class=\"k\">)</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>isFullRow<span class=\"k\">())</span> <span class=\"k\">{</span>","                        me<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'deleterow'</span><span class=\"k\">)</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'delcells'</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">var</span> caption <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStart<span class=\"k\">(),</span> <span class=\"s\">'caption'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">),</span>","                    range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>range<span class=\"k\">.</span>collapsed <span class=\"k\">&amp;&amp;</span> caption <span class=\"k\">&amp;&amp;</span> isEmptyBlock<span class=\"k\">(</span>caption<span class=\"k\">))</span> <span class=\"k\">{</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                    <span class=\"k\">var</span> table <span class=\"k\">=</span> caption<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                    domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>caption<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                        range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>table<span class=\"k\">.</span>rows<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>cells<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">46</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","                ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">)</span> <span class=\"k\">{</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> ci<span class=\"k\">)</span>","                    <span class=\"k\">}</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                    domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">13</span><span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                    caption <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'caption'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>caption<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>caption<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>rng<span class=\"k\">.</span>collapsed<span class=\"k\">)</span> <span class=\"k\">{</span>","","                        rng<span class=\"k\">.</span>deleteContents<span class=\"k\">();</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>caption<span class=\"k\">)</span> <span class=\"k\">{</span>","                            rng<span class=\"k\">.</span>setStart<span class=\"k\">(</span>table<span class=\"k\">.</span>rows<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>cells<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>rng<span class=\"k\">.</span>collapsed<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> cell <span class=\"k\">=</span> table<span class=\"k\">.</span>rows<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>cells<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span>","                            start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStart<span class=\"k\">(),</span> <span class=\"k\">[</span><span class=\"s\">'td'</span><span class=\"k\">,</span> <span class=\"s\">'th'</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">),</span>","                            preNode <span class=\"k\">=</span> table<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>cell <span class=\"k\">===</span> start <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>preNode <span class=\"k\">||</span> preNode<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> preNode<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'TABLE'</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> domUtils<span class=\"k\">.</span>isStartInblock<span class=\"k\">(</span>rng<span class=\"k\">))</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> first <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParent<span class=\"k\">(</span>me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStart<span class=\"k\">(),</span> <span class=\"k\">function</span><span class=\"k\">(</span>n<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> domUtils<span class=\"k\">.</span>isBlockElm<span class=\"k\">(</span>n<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                            <span class=\"k\">if</span><span class=\"k\">(</span>first <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> <span class=\"s\">/t(h|d)/i</span><span class=\"k\">.</span>test<span class=\"k\">(</span>first<span class=\"k\">.</span>tagName<span class=\"k\">)</span> <span class=\"k\">||</span> first <span class=\"k\">===</span>  start<span class=\"k\">.</span>firstChild <span class=\"k\">))</span><span class=\"k\">{</span>","                                me<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'insertparagraphbeforetable'</span><span class=\"k\">);</span>","                                domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">((</span>evt<span class=\"k\">.</span>ctrlKey <span class=\"k\">||</span> evt<span class=\"k\">.</span>metaKey<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> evt<span class=\"k\">.</span>keyCode <span class=\"k\">==</span> <span class=\"s\">'67'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                tableCopyList <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> tds <span class=\"k\">=</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">;</span>","                    isFullCol <span class=\"k\">=</span> ut<span class=\"k\">.</span>isFullCol<span class=\"k\">();</span>","                    isFullRow <span class=\"k\">=</span> ut<span class=\"k\">.</span>isFullRow<span class=\"k\">();</span>","                    tableCopyList <span class=\"k\">=</span> <span class=\"k\">[</span>","                        <span class=\"k\">[</span>ut<span class=\"k\">.</span>cloneCell<span class=\"k\">(</span>tds<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span><span class=\"k\">null</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">)]</span>","                    <span class=\"k\">];</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">,</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> tds<span class=\"k\">[</span>i<span class=\"k\">];</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>ci<span class=\"k\">.</span>parentNode <span class=\"k\">!==</span> tds<span class=\"k\">[</span>i <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">].</span>parentNode<span class=\"k\">)</span> <span class=\"k\">{</span>","                            tableCopyList<span class=\"k\">.</span>push<span class=\"k\">([</span>ut<span class=\"k\">.</span>cloneCell<span class=\"k\">(</span>ci<span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">)]);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            tableCopyList<span class=\"k\">[</span>tableCopyList<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">].</span>push<span class=\"k\">(</span>ut<span class=\"k\">.</span>cloneCell<span class=\"k\">(</span>ci<span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">));</span>","                        <span class=\"k\">}</span>","","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"tablehasdeleted\"</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            toggleDraggableState<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>dragButton<span class=\"k\">)</span>domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>dragButton<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'beforepaste'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> html<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'caption'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> div <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">);</span>","                div<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> html<span class=\"k\">.</span>html<span class=\"k\">;</span>","                html<span class=\"k\">.</span>html <span class=\"k\">=</span> div<span class=\"k\">[</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'innerText'</span> <span class=\"k\">:</span> <span class=\"s\">'textContent'</span><span class=\"k\">];</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>tableCopyList<span class=\"k\">)</span> <span class=\"k\">{</span>","                me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","                <span class=\"k\">var</span> td <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'td'</span><span class=\"k\">,</span> <span class=\"s\">'th'</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">),</span> tmpNode<span class=\"k\">,</span> preNode<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>td<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>td<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>isFullRow<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> rowIndex <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>td<span class=\"k\">).</span>rowIndex<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>td<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'TH'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                            rowIndex<span class=\"k\">++;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> tableCopyList<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> tr <span class=\"k\">=</span> ut<span class=\"k\">.</span>insertRow<span class=\"k\">(</span>rowIndex<span class=\"k\">++,</span> <span class=\"s\">\"td\"</span><span class=\"k\">);</span>","                            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> cj<span class=\"k\">;</span> cj <span class=\"k\">=</span> ci<span class=\"k\">[</span>j<span class=\"k\">];</span> j<span class=\"k\">++)</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> cell <span class=\"k\">=</span> tr<span class=\"k\">.</span>cells<span class=\"k\">[</span>j<span class=\"k\">];</span>","                                <span class=\"k\">if</span> <span class=\"k\">(!</span>cell<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    cell <span class=\"k\">=</span> tr<span class=\"k\">.</span>insertCell<span class=\"k\">(</span>j<span class=\"k\">)</span>","                                <span class=\"k\">}</span>","                                cell<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> cj<span class=\"k\">.</span>innerHTML<span class=\"k\">;</span>","                                cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> cell<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">,</span> cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">));</span>","                                cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'vAlign'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> cell<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'vAlign'</span><span class=\"k\">,</span> cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'vAlign'</span><span class=\"k\">));</span>","                                cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> cell<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">,</span> cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">));</span>","                                cj<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>cell<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> cj<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText<span class=\"k\">)</span>","                            <span class=\"k\">}</span>","                            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> cj<span class=\"k\">;</span> cj <span class=\"k\">=</span> tr<span class=\"k\">.</span>cells<span class=\"k\">[</span>j<span class=\"k\">];</span> j<span class=\"k\">++)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(!</span>ci<span class=\"k\">[</span>j<span class=\"k\">])</span>","                                    <span class=\"k\">break</span><span class=\"k\">;</span>","                                cj<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> ci<span class=\"k\">[</span>j<span class=\"k\">].</span>innerHTML<span class=\"k\">;</span>","                                ci<span class=\"k\">[</span>j<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> cj<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">,</span> ci<span class=\"k\">[</span>j<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">));</span>","                                ci<span class=\"k\">[</span>j<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'vAlign'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> cj<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'vAlign'</span><span class=\"k\">,</span> ci<span class=\"k\">[</span>j<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'vAlign'</span><span class=\"k\">));</span>","                                ci<span class=\"k\">[</span>j<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> cj<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">,</span> ci<span class=\"k\">[</span>j<span class=\"k\">].</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">));</span>","                                ci<span class=\"k\">[</span>j<span class=\"k\">].</span>style<span class=\"k\">.</span>cssText <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>cj<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> ci<span class=\"k\">[</span>j<span class=\"k\">].</span>style<span class=\"k\">.</span>cssText<span class=\"k\">)</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>isFullCol<span class=\"k\">)</span> <span class=\"k\">{</span>","                            cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>td<span class=\"k\">);</span>","                            <span class=\"k\">var</span> maxColNum <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci <span class=\"k\">=</span> tableCopyList<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> cj<span class=\"k\">;</span> cj <span class=\"k\">=</span> ci<span class=\"k\">[</span>j<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                                maxColNum <span class=\"k\">+=</span> cj<span class=\"k\">.</span>colSpan <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                            me<span class=\"k\">.</span>__hasEnterExecCommand <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                            <span class=\"k\">for</span> <span class=\"k\">(</span>i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> maxColNum<span class=\"k\">;</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                                me<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'insertcol'</span><span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            me<span class=\"k\">.</span>__hasEnterExecCommand <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                            td <span class=\"k\">=</span> ut<span class=\"k\">.</span>table<span class=\"k\">.</span>rows<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>cells<span class=\"k\">[</span>cellInfo<span class=\"k\">.</span>cellIndex<span class=\"k\">];</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>td<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">'TH'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                                td <span class=\"k\">=</span> ut<span class=\"k\">.</span>table<span class=\"k\">.</span>rows<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>cells<span class=\"k\">[</span>cellInfo<span class=\"k\">.</span>cellIndex<span class=\"k\">];</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> tableCopyList<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                            tmpNode <span class=\"k\">=</span> td<span class=\"k\">;</span>","                            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> cj<span class=\"k\">;</span> cj <span class=\"k\">=</span> ci<span class=\"k\">[</span>j<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span>td<span class=\"k\">)</span> <span class=\"k\">{</span>","                                    td<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> cj<span class=\"k\">.</span>innerHTML<span class=\"k\">;</span>","                                    <span class=\"c\">//todo &#23450;&#21046;&#22788;&#29702;</span>","                                    cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> td<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">,</span> cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'width'</span><span class=\"k\">));</span>","                                    cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'vAlign'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> td<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'vAlign'</span><span class=\"k\">,</span> cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'vAlign'</span><span class=\"k\">));</span>","                                    cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> td<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">,</span> cj<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'align'</span><span class=\"k\">));</span>","                                    cj<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>td<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> cj<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText<span class=\"k\">);</span>","                                    preNode <span class=\"k\">=</span> td<span class=\"k\">;</span>","                                    td <span class=\"k\">=</span> td<span class=\"k\">.</span>nextSibling<span class=\"k\">;</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    <span class=\"k\">var</span> cloneTd <span class=\"k\">=</span> cj<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                                    domUtils<span class=\"k\">.</span>removeAttributes<span class=\"k\">(</span>cloneTd<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'class'</span><span class=\"k\">,</span> <span class=\"s\">'rowSpan'</span><span class=\"k\">,</span> <span class=\"s\">'colSpan'</span><span class=\"k\">]);</span>","","                                    preNode<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>cloneTd<span class=\"k\">)</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                            td <span class=\"k\">=</span> ut<span class=\"k\">.</span>getNextCell<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                            <span class=\"k\">if</span> <span class=\"k\">(!</span>tableCopyList<span class=\"k\">[</span>i<span class=\"k\">])</span>","                                <span class=\"k\">break</span><span class=\"k\">;</span>","                            <span class=\"k\">if</span> <span class=\"k\">(!</span>td<span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>tmpNode<span class=\"k\">);</span>","                                ut<span class=\"k\">.</span>table<span class=\"k\">.</span>insertRow<span class=\"k\">(</span>ut<span class=\"k\">.</span>table<span class=\"k\">.</span>rows<span class=\"k\">.</span>length<span class=\"k\">);</span>","                                ut<span class=\"k\">.</span>update<span class=\"k\">();</span>","                                td <span class=\"k\">=</span> ut<span class=\"k\">.</span>getVSideCell<span class=\"k\">(</span>tmpNode<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    ut<span class=\"k\">.</span>update<span class=\"k\">();</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    table <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">'table'</span><span class=\"k\">);</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> ci<span class=\"k\">;</span> ci <span class=\"k\">=</span> tableCopyList<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> tr <span class=\"k\">=</span> table<span class=\"k\">.</span>insertRow<span class=\"k\">(</span>table<span class=\"k\">.</span>rows<span class=\"k\">.</span>length<span class=\"k\">);</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> cj<span class=\"k\">;</span> cj <span class=\"k\">=</span> ci<span class=\"k\">[</span>j<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                            cloneTd <span class=\"k\">=</span> UT<span class=\"k\">.</span>cloneCell<span class=\"k\">(</span>cj<span class=\"k\">,</span><span class=\"k\">null</span><span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","                            domUtils<span class=\"k\">.</span>removeAttributes<span class=\"k\">(</span>cloneTd<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'class'</span><span class=\"k\">]);</span>","                            tr<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>cloneTd<span class=\"k\">)</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>j <span class=\"k\">==</span> <span class=\"s\">2</span> <span class=\"k\">&amp;&amp;</span> cloneTd<span class=\"k\">.</span>rowSpan <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                            cloneTd<span class=\"k\">.</span>rowSpan <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">var</span> defaultValue <span class=\"k\">=</span> getDefaultValue<span class=\"k\">(</span>me<span class=\"k\">),</span>","                        width <span class=\"k\">=</span> me<span class=\"k\">.</span>body<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span>","                            <span class=\"k\">(</span>needIEHack <span class=\"k\">?</span> parseInt<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">'margin-left'</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">-</span> defaultValue<span class=\"k\">.</span>tableBorder <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">-</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>offsetWidth <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">);</span>","                    me<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'insertHTML'</span><span class=\"k\">,</span> <span class=\"s\">'&lt;table  '</span> <span class=\"k\">+</span>","                        <span class=\"k\">(</span> isFullCol <span class=\"k\">&amp;&amp;</span> isFullRow <span class=\"k\">?</span> <span class=\"s\">'width=\"'</span> <span class=\"k\">+</span> width <span class=\"k\">+</span> <span class=\"s\">'\"'</span> <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">)</span> <span class=\"k\">+</span>","                        <span class=\"s\">'&gt;'</span> <span class=\"k\">+</span> table<span class=\"k\">.</span>innerHTML<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/&gt;\\s*&lt;/g</span><span class=\"k\">,</span> <span class=\"s\">'&gt;&lt;'</span><span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/\\bth\\b/gi</span><span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'&lt;/table&gt;'</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","                me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                html<span class=\"k\">.</span>html <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> div <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">),</span> tables<span class=\"k\">;</span>","                div<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> html<span class=\"k\">.</span>html<span class=\"k\">;</span>","                tables <span class=\"k\">=</span> div<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"table\"</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStart<span class=\"k\">(),</span> <span class=\"s\">'table'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                    utils<span class=\"k\">.</span>each<span class=\"k\">(</span>tables<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>t<span class=\"k\">)</span> <span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>t<span class=\"k\">)</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStart<span class=\"k\">(),</span> <span class=\"s\">'caption'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                        div<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> div<span class=\"k\">[</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'innerText'</span> <span class=\"k\">:</span> <span class=\"s\">'textContent'</span><span class=\"k\">];</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    utils<span class=\"k\">.</span>each<span class=\"k\">(</span>tables<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                        removeStyleSize<span class=\"k\">(</span>table<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                        domUtils<span class=\"k\">.</span>removeAttributes<span class=\"k\">(</span>table<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'style'</span><span class=\"k\">,</span> <span class=\"s\">'border'</span><span class=\"k\">]);</span>","                        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>table<span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>td<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>isEmptyBlock<span class=\"k\">(</span>td<span class=\"k\">))</span> <span class=\"k\">{</span>","                                domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> td<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                            removeStyleSize<span class=\"k\">(</span>td<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","<span class=\"c\">//                            domUtils.removeAttributes(td, ['style'])</span>","                        <span class=\"k\">}</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","                html<span class=\"k\">.</span>html <span class=\"k\">=</span> div<span class=\"k\">.</span>innerHTML<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'afterpaste'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">\"table\"</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">.</span>offsetWidth <span class=\"k\">&gt;</span> me<span class=\"k\">.</span>body<span class=\"k\">.</span>offsetWidth<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> defaultValue <span class=\"k\">=</span> getDefaultValue<span class=\"k\">(</span>me<span class=\"k\">,</span> table<span class=\"k\">);</span>","                    table<span class=\"k\">.</span>style<span class=\"k\">.</span>width <span class=\"k\">=</span> me<span class=\"k\">.</span>body<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> <span class=\"k\">(</span>needIEHack <span class=\"k\">?</span> parseInt<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">'margin-left'</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">-</span> defaultValue<span class=\"k\">.</span>tableBorder <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">-</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>options<span class=\"k\">.</span>offsetWidth <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">)</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'blur'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            tableCopyList <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> timer<span class=\"k\">;</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'keydown'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            clearTimeout<span class=\"k\">(</span>timer<span class=\"k\">);</span>","            timer <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                    cell <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>rng<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'th'</span><span class=\"k\">,</span> <span class=\"s\">'td'</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>cell<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> table <span class=\"k\">=</span> cell<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">.</span>offsetWidth <span class=\"k\">&gt;</span> table<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                        cell<span class=\"k\">.</span>style<span class=\"k\">.</span>wordBreak <span class=\"k\">=</span> <span class=\"s\">\"break-all\"</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">100</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"selectionchange\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            toggleDraggableState<span class=\"k\">(</span>me<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","","        <span class=\"c\">//&#20869;&#23481;&#21464;&#21270;&#26102;&#35302;&#21457;&#32034;&#24341;&#26356;&#26032;</span>","        <span class=\"c\">//todo &#21487;&#21542;&#32771;&#34385;&#26631;&#35760;&#26816;&#27979;&#65292;&#22914;&#26524;&#19981;&#28041;&#21450;&#34920;&#26684;&#30340;&#21464;&#21270;&#23601;&#19981;&#36827;&#34892;&#32034;&#24341;&#37325;&#24314;&#21644;&#26356;&#26032;</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"contentchange\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"c\">//&#23613;&#21487;&#33021;&#25490;&#38500;&#19968;&#20123;&#19981;&#38656;&#35201;&#26356;&#26032;&#30340;&#29366;&#20917;</span>","            hideDragLine<span class=\"k\">(</span>me<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">))</span><span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            <span class=\"k\">var</span> start <span class=\"k\">=</span> rng<span class=\"k\">.</span>startContainer<span class=\"k\">;</span>","            start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'td'</span><span class=\"k\">,</span> <span class=\"s\">'th'</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"excludetable\"</span><span class=\"k\">,</span> table<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","                table<span class=\"k\">.</span>ueTable <span class=\"k\">=</span> <span class=\"k\">new</span> UT<span class=\"k\">(</span>table<span class=\"k\">);</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">'td'</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>td<span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>td<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> td <span class=\"k\">!==</span> start<span class=\"k\">)</span> <span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> td<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">&amp;&amp;</span> browser<span class=\"k\">.</span>version <span class=\"k\">==</span> <span class=\"s\">6</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                            td<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">'&amp;nbsp;'</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">'th'</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>th<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>th<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> th <span class=\"k\">!==</span> start<span class=\"k\">)</span> <span class=\"k\">{</span>","                        domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> th<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>ie <span class=\"k\">&amp;&amp;</span> browser<span class=\"k\">.</span>version <span class=\"k\">==</span> <span class=\"s\">6</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                            th<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">'&amp;nbsp;'</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","                table<span class=\"k\">.</span>onmouseover <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'tablemouseover'</span><span class=\"k\">,</span> table<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","                table<span class=\"k\">.</span>onmousemove <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'tablemousemove'</span><span class=\"k\">,</span> table<span class=\"k\">);</span>","                    me<span class=\"k\">.</span>options<span class=\"k\">.</span>tableDragable <span class=\"k\">&amp;&amp;</span> toggleDragButton<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> me<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","                table<span class=\"k\">.</span>onmouseout <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                    me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'tablemouseout'</span><span class=\"k\">,</span> table<span class=\"k\">);</span>","                    toggleDraggableState<span class=\"k\">(</span>me<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","                    hideDragLine<span class=\"k\">(</span>me<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","                table<span class=\"k\">.</span>onclick <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>evt<span class=\"k\">)</span> <span class=\"k\">{</span>","                    evt <span class=\"k\">=</span> me<span class=\"k\">.</span>window<span class=\"k\">.</span>event <span class=\"k\">||</span> evt<span class=\"k\">;</span>","                    <span class=\"k\">var</span> target <span class=\"k\">=</span> getParentTdOrTh<span class=\"k\">(</span>evt<span class=\"k\">.</span>target <span class=\"k\">||</span> evt<span class=\"k\">.</span>srcElement<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(!</span>target<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span>","                    <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>target<span class=\"k\">),</span>","                        table <span class=\"k\">=</span> ut<span class=\"k\">.</span>table<span class=\"k\">,</span>","                        cellInfo <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>target<span class=\"k\">),</span>","                        cellsRange<span class=\"k\">,</span>","                        rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","<span class=\"c\">//                    if (\"topLeft\" == inPosition(table, mouseCoords(evt))) {</span>","<span class=\"c\">//                        cellsRange = ut.getCellsRange(ut.table.rows[0].cells[0], ut.getLastCell());</span>","<span class=\"c\">//                        ut.setSelected(cellsRange);</span>","<span class=\"c\">//                        return;</span>","<span class=\"c\">//                    }</span>","<span class=\"c\">//                    if (\"bottomRight\" == inPosition(table, mouseCoords(evt))) {</span>","<span class=\"c\">//</span>","<span class=\"c\">//                        return;</span>","<span class=\"c\">//                    }</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>inTableSide<span class=\"k\">(</span>table<span class=\"k\">,</span> target<span class=\"k\">,</span> evt<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> endTdCol <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCell<span class=\"k\">(</span>ut<span class=\"k\">.</span>indexTable<span class=\"k\">[</span>ut<span class=\"k\">.</span>rowsNum <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">][</span>cellInfo<span class=\"k\">.</span>colIndex<span class=\"k\">].</span>rowIndex<span class=\"k\">,</span> ut<span class=\"k\">.</span>indexTable<span class=\"k\">[</span>ut<span class=\"k\">.</span>rowsNum <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">][</span>cellInfo<span class=\"k\">.</span>colIndex<span class=\"k\">].</span>cellIndex<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>evt<span class=\"k\">.</span>shiftKey <span class=\"k\">&amp;&amp;</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">!==</span> endTdCol<span class=\"k\">)</span> <span class=\"k\">{</span>","                                cellsRange <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellsRange<span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> endTdCol<span class=\"k\">);</span>","                                ut<span class=\"k\">.</span>setSelected<span class=\"k\">(</span>cellsRange<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                rng <span class=\"k\">&amp;&amp;</span> rng<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>endTdCol<span class=\"k\">).</span>select<span class=\"k\">();</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>target <span class=\"k\">!==</span> endTdCol<span class=\"k\">)</span> <span class=\"k\">{</span>","                                cellsRange <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellsRange<span class=\"k\">(</span>target<span class=\"k\">,</span> endTdCol<span class=\"k\">);</span>","                                ut<span class=\"k\">.</span>setSelected<span class=\"k\">(</span>cellsRange<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                rng <span class=\"k\">&amp;&amp;</span> rng<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>endTdCol<span class=\"k\">).</span>select<span class=\"k\">();</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>inTableSide<span class=\"k\">(</span>table<span class=\"k\">,</span> target<span class=\"k\">,</span> evt<span class=\"k\">))</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> endTdRow <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCell<span class=\"k\">(</span>ut<span class=\"k\">.</span>indexTable<span class=\"k\">[</span>cellInfo<span class=\"k\">.</span>rowIndex<span class=\"k\">][</span>ut<span class=\"k\">.</span>colsNum <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">].</span>rowIndex<span class=\"k\">,</span> ut<span class=\"k\">.</span>indexTable<span class=\"k\">[</span>cellInfo<span class=\"k\">.</span>rowIndex<span class=\"k\">][</span>ut<span class=\"k\">.</span>colsNum <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">].</span>cellIndex<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>evt<span class=\"k\">.</span>shiftKey <span class=\"k\">&amp;&amp;</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">!==</span> endTdRow<span class=\"k\">)</span> <span class=\"k\">{</span>","                                cellsRange <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellsRange<span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> endTdRow<span class=\"k\">);</span>","                                ut<span class=\"k\">.</span>setSelected<span class=\"k\">(</span>cellsRange<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                rng <span class=\"k\">&amp;&amp;</span> rng<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>endTdRow<span class=\"k\">).</span>select<span class=\"k\">();</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span>target <span class=\"k\">!==</span> endTdRow<span class=\"k\">)</span> <span class=\"k\">{</span>","                                cellsRange <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellsRange<span class=\"k\">(</span>target<span class=\"k\">,</span> endTdRow<span class=\"k\">);</span>","                                ut<span class=\"k\">.</span>setSelected<span class=\"k\">(</span>cellsRange<span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                rng <span class=\"k\">&amp;&amp;</span> rng<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>endTdRow<span class=\"k\">).</span>select<span class=\"k\">();</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","","            switchBorderColor<span class=\"k\">(</span>me<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        domUtils<span class=\"k\">.</span>on<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">\"mousemove\"</span><span class=\"k\">,</span> mouseMoveEvent<span class=\"k\">);</span>","","        domUtils<span class=\"k\">.</span>on<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> <span class=\"s\">\"mouseout\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>evt<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> target <span class=\"k\">=</span> evt<span class=\"k\">.</span>target <span class=\"k\">||</span> evt<span class=\"k\">.</span>srcElement<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>target<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TABLE\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                toggleDraggableState<span class=\"k\">(</span>me<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"c\">/*</span>","<span class=\"c\">         * &#34920;&#26684;&#38548;&#34892;&#21464;&#33394;</span>","<span class=\"c\">         */</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"interlacetable\"</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>type<span class=\"k\">,</span>table<span class=\"k\">,</span>classList<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(!</span>table<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                rows <span class=\"k\">=</span> table<span class=\"k\">.</span>rows<span class=\"k\">,</span>","                len <span class=\"k\">=</span> rows<span class=\"k\">.</span>length<span class=\"k\">,</span>","                getClass <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>list<span class=\"k\">,</span>index<span class=\"k\">,</span>repeat<span class=\"k\">)</span><span class=\"k\">{</span>","                    <span class=\"k\">return</span> list<span class=\"k\">[</span>index<span class=\"k\">]</span> <span class=\"k\">?</span> list<span class=\"k\">[</span>index<span class=\"k\">]</span> <span class=\"k\">:</span> repeat <span class=\"k\">?</span> list<span class=\"k\">[</span>index <span class=\"k\">%</span> list<span class=\"k\">.</span>length<span class=\"k\">]:</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>i<span class=\"k\">&lt;</span>len<span class=\"k\">;</span>i<span class=\"k\">++)</span><span class=\"k\">{</span>","                rows<span class=\"k\">[</span>i<span class=\"k\">].</span>className <span class=\"k\">=</span> getClass<span class=\"k\">(</span> classList<span class=\"k\">||</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>classList<span class=\"k\">,</span>i<span class=\"k\">,</span><span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"uninterlacetable\"</span><span class=\"k\">,</span><span class=\"k\">function</span><span class=\"k\">(</span>type<span class=\"k\">,</span>table<span class=\"k\">)</span><span class=\"k\">{</span>","            <span class=\"k\">if</span><span class=\"k\">(!</span>table<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                rows <span class=\"k\">=</span> table<span class=\"k\">.</span>rows<span class=\"k\">,</span>","                classList <span class=\"k\">=</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>classList<span class=\"k\">,</span>","                len <span class=\"k\">=</span> rows<span class=\"k\">.</span>length<span class=\"k\">;</span>","            <span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>i<span class=\"k\">&lt;</span>len<span class=\"k\">;</span>i<span class=\"k\">++)</span><span class=\"k\">{</span>","                domUtils<span class=\"k\">.</span>removeClasses<span class=\"k\">(</span> rows<span class=\"k\">[</span>i<span class=\"k\">],</span> classList <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"mousedown\"</span><span class=\"k\">,</span> mouseDownEvent<span class=\"k\">);</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"mouseup\"</span><span class=\"k\">,</span> mouseUpEvent<span class=\"k\">);</span>","        <span class=\"c\">//&#25302;&#21160;&#30340;&#26102;&#20505;&#19981;&#20986;&#21457;mouseup</span>","        domUtils<span class=\"k\">.</span>on<span class=\"k\">(</span> me<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">'dragstart'</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> evt <span class=\"k\">)</span><span class=\"k\">{</span>","            mouseUpEvent<span class=\"k\">.</span>call<span class=\"k\">(</span> me<span class=\"k\">,</span> <span class=\"s\">'dragstart'</span><span class=\"k\">,</span> evt <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">var</span> currentRowIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"mousedown\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            currentRowIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'tabkeydown'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","                common <span class=\"k\">=</span> range<span class=\"k\">.</span>getCommonAncestor<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">),</span>","                table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>common<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>common<span class=\"k\">,</span> <span class=\"s\">'caption'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> cell <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>table<span class=\"k\">,</span> <span class=\"s\">'th td'</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>cell <span class=\"k\">&amp;&amp;</span> cell<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                        range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>cell<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> cell <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>common<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'td'</span><span class=\"k\">,</span> <span class=\"s\">'th'</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">),</span>","                        ua <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">);</span>","                    currentRowIndex <span class=\"k\">=</span> cell<span class=\"k\">.</span>rowSpan <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> currentRowIndex <span class=\"k\">:</span> ua<span class=\"k\">.</span>getCellInfo<span class=\"k\">(</span>cell<span class=\"k\">).</span>rowIndex<span class=\"k\">;</span>","                    <span class=\"k\">var</span> nextCell <span class=\"k\">=</span> ua<span class=\"k\">.</span>getTabNextCell<span class=\"k\">(</span>cell<span class=\"k\">,</span> currentRowIndex<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>nextCell<span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>isEmptyBlock<span class=\"k\">(</span>nextCell<span class=\"k\">))</span> <span class=\"k\">{</span>","                            range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>nextCell<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>nextCell<span class=\"k\">).</span>select<span class=\"k\">()</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                        me<span class=\"k\">.</span>__hasEnterExecCommand <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                        <span class=\"k\">this</span><span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'insertrownext'</span><span class=\"k\">);</span>","                        me<span class=\"k\">.</span>__hasEnterExecCommand <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                        range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","                        range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>table<span class=\"k\">.</span>rows<span class=\"k\">[</span>table<span class=\"k\">.</span>rows<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">].</span>cells<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">();</span>","                        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span><span class=\"k\">);</span>","        browser<span class=\"k\">.</span>ie <span class=\"k\">&amp;&amp;</span> me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'selectionchange'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            toggleDraggableState<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"keydown\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"c\">//&#22788;&#29702;&#22312;&#34920;&#26684;&#30340;&#26368;&#21518;&#19968;&#20010;&#36755;&#20837;tab&#20135;&#29983;&#26032;&#30340;&#34920;&#26684;</span>","            <span class=\"k\">var</span> keyCode <span class=\"k\">=</span> evt<span class=\"k\">.</span>keyCode <span class=\"k\">||</span> evt<span class=\"k\">.</span>which<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>keyCode <span class=\"k\">==</span> <span class=\"s\">8</span> <span class=\"k\">||</span> keyCode <span class=\"k\">==</span> <span class=\"s\">46</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">var</span> notCtrlKey <span class=\"k\">=</span> <span class=\"k\">!</span>evt<span class=\"k\">.</span>ctrlKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>evt<span class=\"k\">.</span>metaKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>evt<span class=\"k\">.</span>shiftKey <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>evt<span class=\"k\">.</span>altKey<span class=\"k\">;</span>","            notCtrlKey <span class=\"k\">&amp;&amp;</span> removeSelectedClass<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">));</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>ut<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","            notCtrlKey <span class=\"k\">&amp;&amp;</span> ut<span class=\"k\">.</span>clearSelected<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"beforegetcontent\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            switchBorderColor<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","            browser<span class=\"k\">.</span>ie <span class=\"k\">&amp;&amp;</span> utils<span class=\"k\">.</span>each<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'caption'</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>ci<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyNode<span class=\"k\">(</span>ci<span class=\"k\">))</span> <span class=\"k\">{</span>","                    ci<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">'&amp;nbsp;'</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"aftergetcontent\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            switchBorderColor<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"getAllHtml\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","            removeSelectedClass<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"td\"</span><span class=\"k\">));</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"c\">//&#20462;&#27491;&#20840;&#23631;&#29366;&#24577;&#19979;&#25554;&#20837;&#30340;&#34920;&#26684;&#23485;&#24230;&#22312;&#38750;&#20840;&#23631;&#29366;&#24577;&#19979;&#25745;&#24320;&#32534;&#36753;&#22120;&#30340;&#24773;&#20917;</span>","        me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">\"fullscreenchanged\"</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> fullscreen<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>fullscreen<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> ratio <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>body<span class=\"k\">.</span>offsetWidth <span class=\"k\">/</span> document<span class=\"k\">.</span>body<span class=\"k\">.</span>offsetWidth<span class=\"k\">,</span>","                    tables <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">\"table\"</span><span class=\"k\">);</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>tables<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>table<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>table<span class=\"k\">.</span>offsetWidth <span class=\"k\">&lt;</span> me<span class=\"k\">.</span>body<span class=\"k\">.</span>offsetWidth<span class=\"k\">)</span> <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                    <span class=\"k\">var</span> tds <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>table<span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">),</span>","                        backWidths <span class=\"k\">=</span> <span class=\"k\">[];</span>","                    utils<span class=\"k\">.</span>each<span class=\"k\">(</span>tds<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>td<span class=\"k\">)</span> <span class=\"k\">{</span>","                        backWidths<span class=\"k\">.</span>push<span class=\"k\">(</span>td<span class=\"k\">.</span>offsetWidth<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> td<span class=\"k\">;</span> td <span class=\"k\">=</span> tds<span class=\"k\">[</span>i<span class=\"k\">];</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                        td<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">,</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>backWidths<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">*</span> ratio<span class=\"k\">));</span>","                    <span class=\"k\">}</span>","                    table<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">,</span> Math<span class=\"k\">.</span>floor<span class=\"k\">(</span>getTableWidth<span class=\"k\">(</span>me<span class=\"k\">,</span> needIEHack<span class=\"k\">,</span> getDefaultValue<span class=\"k\">(</span>me<span class=\"k\">))))</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"c\">//&#37325;&#20889;execCommand&#21629;&#20196;&#65292;&#29992;&#20110;&#22788;&#29702;&#26694;&#36873;&#26102;&#30340;&#22788;&#29702;</span>","        <span class=\"k\">var</span> oldExecCommand <span class=\"k\">=</span> me<span class=\"k\">.</span>execCommand<span class=\"k\">;</span>","        me<span class=\"k\">.</span>execCommand <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>cmd<span class=\"k\">,</span> datatat<span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                args <span class=\"k\">=</span> arguments<span class=\"k\">;</span>","","            cmd <span class=\"k\">=</span> cmd<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">),</span> tds<span class=\"k\">,</span>","                range <span class=\"k\">=</span> <span class=\"k\">new</span> dom<span class=\"k\">.</span>Range<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">),</span>","                cmdFun <span class=\"k\">=</span> me<span class=\"k\">.</span>commands<span class=\"k\">[</span>cmd<span class=\"k\">]</span> <span class=\"k\">||</span> UE<span class=\"k\">.</span>commands<span class=\"k\">[</span>cmd<span class=\"k\">],</span>","                result<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>cmdFun<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>commands<span class=\"k\">[</span>cmd<span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>cmdFun<span class=\"k\">.</span>notNeedUndo <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>me<span class=\"k\">.</span>__hasEnterExecCommand<span class=\"k\">)</span> <span class=\"k\">{</span>","                me<span class=\"k\">.</span>__hasEnterExecCommand <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"beforeexeccommand\"</span><span class=\"k\">,</span> cmd<span class=\"k\">);</span>","                tds <span class=\"k\">=</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">;</span>","                <span class=\"k\">var</span> lastState <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">2</span><span class=\"k\">,</span> lastValue <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">2</span><span class=\"k\">,</span> value<span class=\"k\">,</span> state<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> td<span class=\"k\">;</span> td <span class=\"k\">=</span> tds<span class=\"k\">[</span>i<span class=\"k\">];</span> i<span class=\"k\">++)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>isEmptyBlock<span class=\"k\">(</span>td<span class=\"k\">))</span> <span class=\"k\">{</span>","                        range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>td<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        range<span class=\"k\">.</span>selectNode<span class=\"k\">(</span>td<span class=\"k\">).</span>select<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    state <span class=\"k\">=</span> me<span class=\"k\">.</span>queryCommandState<span class=\"k\">(</span>cmd<span class=\"k\">);</span>","                    value <span class=\"k\">=</span> me<span class=\"k\">.</span>queryCommandValue<span class=\"k\">(</span>cmd<span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>state <span class=\"k\">!=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>lastState <span class=\"k\">!==</span> state <span class=\"k\">||</span> lastValue <span class=\"k\">!==</span> value<span class=\"k\">)</span> <span class=\"k\">{</span>","                            me<span class=\"k\">.</span>_ignoreContentChange <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                            result <span class=\"k\">=</span> oldExecCommand<span class=\"k\">.</span>apply<span class=\"k\">(</span>me<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","                            me<span class=\"k\">.</span>_ignoreContentChange <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","                        <span class=\"k\">}</span>","                        lastState <span class=\"k\">=</span> me<span class=\"k\">.</span>queryCommandState<span class=\"k\">(</span>cmd<span class=\"k\">);</span>","                        lastValue <span class=\"k\">=</span> me<span class=\"k\">.</span>queryCommandValue<span class=\"k\">(</span>cmd<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>td<span class=\"k\">))</span> <span class=\"k\">{</span>","                            domUtils<span class=\"k\">.</span>fillNode<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">,</span> td<span class=\"k\">)</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>tds<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span> <span class=\"s\">0</span><span class=\"k\">).</span>shrinkBoundary<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'contentchange'</span><span class=\"k\">);</span>","                me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"afterexeccommand\"</span><span class=\"k\">,</span> cmd<span class=\"k\">);</span>","                me<span class=\"k\">.</span>__hasEnterExecCommand <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                me<span class=\"k\">.</span>_selectionChange<span class=\"k\">();</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                result <span class=\"k\">=</span> oldExecCommand<span class=\"k\">.</span>apply<span class=\"k\">(</span>me<span class=\"k\">,</span> arguments<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> result<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#21024;&#38500;obj&#30340;&#23485;&#39640;style&#65292;&#25913;&#25104;&#23646;&#24615;&#23485;&#39640;</span>","<span class=\"c\">     * @param obj</span>","<span class=\"c\">     * @param replaceToProperty</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> removeStyleSize<span class=\"k\">(</span>obj<span class=\"k\">,</span> replaceToProperty<span class=\"k\">)</span> <span class=\"k\">{</span>","        removeStyle<span class=\"k\">(</span>obj<span class=\"k\">,</span> <span class=\"s\">\"width\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        removeStyle<span class=\"k\">(</span>obj<span class=\"k\">,</span> <span class=\"s\">\"height\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> removeStyle<span class=\"k\">(</span>obj<span class=\"k\">,</span> styleName<span class=\"k\">,</span> replaceToProperty<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>obj<span class=\"k\">.</span>style<span class=\"k\">[</span>styleName<span class=\"k\">])</span> <span class=\"k\">{</span>","            replaceToProperty <span class=\"k\">&amp;&amp;</span> obj<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span>styleName<span class=\"k\">,</span> parseInt<span class=\"k\">(</span>obj<span class=\"k\">.</span>style<span class=\"k\">[</span>styleName<span class=\"k\">],</span> <span class=\"s\">10</span><span class=\"k\">));</span>","            obj<span class=\"k\">.</span>style<span class=\"k\">[</span>styleName<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> getParentTdOrTh<span class=\"k\">(</span>ele<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>ele<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TD\"</span> <span class=\"k\">||</span> ele<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TH\"</span><span class=\"k\">)</span> <span class=\"k\">return</span> ele<span class=\"k\">;</span>","        <span class=\"k\">var</span> td<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>td <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>ele<span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>ele<span class=\"k\">,</span> <span class=\"s\">\"th\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">))</span> <span class=\"k\">return</span> td<span class=\"k\">;</span>","        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> isEmptyBlock<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> reg <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>fillChar<span class=\"k\">,</span> <span class=\"s\">'g'</span><span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">[</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'innerText'</span> <span class=\"k\">:</span> <span class=\"s\">'textContent'</span><span class=\"k\">].</span>replace<span class=\"k\">(</span><span class=\"s\">/^\\s*$/</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">).</span>replace<span class=\"k\">(</span>reg<span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">).</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> n <span class=\"k\">in</span> dtd<span class=\"k\">.</span>$isNotEmpty<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>node<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>n<span class=\"k\">).</span>length<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"s\">1</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","","    <span class=\"k\">function</span> mouseCoords<span class=\"k\">(</span>evt<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>evt<span class=\"k\">.</span>pageX <span class=\"k\">||</span> evt<span class=\"k\">.</span>pageY<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">{</span> x<span class=\"k\">:</span>evt<span class=\"k\">.</span>pageX<span class=\"k\">,</span> y<span class=\"k\">:</span>evt<span class=\"k\">.</span>pageY <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"k\">{</span>","            x<span class=\"k\">:</span>evt<span class=\"k\">.</span>clientX <span class=\"k\">+</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollLeft <span class=\"k\">-</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">.</span>clientLeft<span class=\"k\">,</span>","            y<span class=\"k\">:</span>evt<span class=\"k\">.</span>clientY <span class=\"k\">+</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">.</span>scrollTop <span class=\"k\">-</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">.</span>clientTop","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> mouseMoveEvent<span class=\"k\">(</span>evt<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> isEditorDisabled<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">try</span> <span class=\"k\">{</span>","","            <span class=\"c\">//&#26222;&#36890;&#29366;&#24577;&#19979;&#40736;&#26631;&#31227;&#21160;</span>","            <span class=\"k\">var</span> target <span class=\"k\">=</span> getParentTdOrTh<span class=\"k\">(</span>evt<span class=\"k\">.</span>target <span class=\"k\">||</span> evt<span class=\"k\">.</span>srcElement<span class=\"k\">),</span>","                pos<span class=\"k\">;</span>","","            <span class=\"c\">//&#21306;&#20998;&#29992;&#25143;&#30340;&#34892;&#20026;&#26159;&#25302;&#21160;&#36824;&#26159;&#21452;&#20987;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span> isInResizeBuffer  <span class=\"k\">)</span> <span class=\"k\">{</span>","","                me<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitUserSelect <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","","                <span class=\"k\">if</span><span class=\"k\">(</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span> userActionStatus<span class=\"k\">.</span>x <span class=\"k\">-</span> evt<span class=\"k\">.</span>clientX <span class=\"k\">)</span> <span class=\"k\">&gt;</span> offsetOfTableCell <span class=\"k\">||</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span> userActionStatus<span class=\"k\">.</span>y <span class=\"k\">-</span> evt<span class=\"k\">.</span>clientY <span class=\"k\">)</span> <span class=\"k\">&gt;</span> offsetOfTableCell <span class=\"k\">)</span> <span class=\"k\">{</span>","                    clearTableDragTimer<span class=\"k\">();</span>","                    isInResizeBuffer <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                    singleClickState <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                    <span class=\"c\">//drag action</span>","                    tableBorderDrag<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">//&#20462;&#25913;&#21333;&#20803;&#26684;&#22823;&#23567;&#26102;&#30340;&#40736;&#26631;&#31227;&#21160;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>onDrag <span class=\"k\">&amp;&amp;</span> dragTd<span class=\"k\">)</span> <span class=\"k\">{</span>","                singleClickState <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                me<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitUserSelect <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","                me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getNative<span class=\"k\">()[</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'empty'</span> <span class=\"k\">:</span> <span class=\"s\">'removeAllRanges'</span><span class=\"k\">]();</span>","                pos <span class=\"k\">=</span> mouseCoords<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                toggleDraggableState<span class=\"k\">(</span>me<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> onDrag<span class=\"k\">,</span> pos<span class=\"k\">,</span> target<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>onDrag <span class=\"k\">==</span> <span class=\"s\">\"h\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    dragLine<span class=\"k\">.</span>style<span class=\"k\">.</span>left <span class=\"k\">=</span> getPermissionX<span class=\"k\">(</span>dragTd<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>onDrag <span class=\"k\">==</span> <span class=\"s\">\"v\"</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    dragLine<span class=\"k\">.</span>style<span class=\"k\">.</span>top <span class=\"k\">=</span> getPermissionY<span class=\"k\">(</span>dragTd<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"c\">//&#24403;&#40736;&#26631;&#22788;&#20110;table&#19978;&#26102;&#65292;&#20462;&#25913;&#31227;&#21160;&#36807;&#31243;&#20013;&#30340;&#20809;&#26631;&#29366;&#24577;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>target<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">//&#38024;&#23545;&#20351;&#29992;table&#20316;&#20026;&#23481;&#22120;&#30340;&#32452;&#20214;&#19981;&#35302;&#21457;&#25302;&#25341;&#25928;&#26524;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'excludetable'</span><span class=\"k\">,</span> target<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                pos <span class=\"k\">=</span> mouseCoords<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                <span class=\"k\">var</span> state <span class=\"k\">=</span> getRelation<span class=\"k\">(</span>target<span class=\"k\">,</span> pos<span class=\"k\">),</span>","                    table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>target<span class=\"k\">,</span> <span class=\"s\">\"table\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>inTableSide<span class=\"k\">(</span>table<span class=\"k\">,</span> target<span class=\"k\">,</span> evt<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"excludetable\"</span><span class=\"k\">,</span> table<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","                    me<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>cursor <span class=\"k\">=</span> <span class=\"s\">\"url(\"</span> <span class=\"k\">+</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>cursorpath <span class=\"k\">+</span> <span class=\"s\">\"h.png),pointer\"</span><span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span>inTableSide<span class=\"k\">(</span>table<span class=\"k\">,</span> target<span class=\"k\">,</span> evt<span class=\"k\">))</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"excludetable\"</span><span class=\"k\">,</span> table<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","                    me<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>cursor <span class=\"k\">=</span> <span class=\"s\">\"url(\"</span> <span class=\"k\">+</span> me<span class=\"k\">.</span>options<span class=\"k\">.</span>cursorpath <span class=\"k\">+</span> <span class=\"s\">\"v.png),pointer\"</span><span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    me<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>cursor <span class=\"k\">=</span> <span class=\"s\">\"text\"</span><span class=\"k\">;</span>","                    <span class=\"k\">var</span> curCell <span class=\"k\">=</span> target<span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/\\d/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>state<span class=\"k\">))</span> <span class=\"k\">{</span>","                        state <span class=\"k\">=</span> state<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\d/</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","                        target <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>target<span class=\"k\">).</span>getPreviewCell<span class=\"k\">(</span>target<span class=\"k\">,</span> state <span class=\"k\">==</span> <span class=\"s\">\"v\"</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    <span class=\"c\">//&#20301;&#20110;&#31532;&#19968;&#34892;&#30340;&#39030;&#37096;&#25110;&#32773;&#31532;&#19968;&#21015;&#30340;&#24038;&#36793;&#26102;&#19981;&#21487;&#25302;&#21160;</span>","                    toggleDraggableState<span class=\"k\">(</span>me<span class=\"k\">,</span> target <span class=\"k\">?</span> <span class=\"k\">!!</span>state <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span> target <span class=\"k\">?</span> state <span class=\"k\">:</span> <span class=\"s\">''</span><span class=\"k\">,</span> pos<span class=\"k\">,</span> target<span class=\"k\">);</span>","","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                toggleDragButton<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> table<span class=\"k\">,</span> me<span class=\"k\">);</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            showError<span class=\"k\">(</span>e<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">var</span> dragButtonTimer<span class=\"k\">;</span>","","    <span class=\"k\">function</span> toggleDragButton<span class=\"k\">(</span>show<span class=\"k\">,</span> table<span class=\"k\">,</span> editor<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>show<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>dragOver<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span>","            dragButtonTimer <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">!</span>dragOver <span class=\"k\">&amp;&amp;</span> dragButton <span class=\"k\">&amp;&amp;</span> dragButton<span class=\"k\">.</span>parentNode <span class=\"k\">&amp;&amp;</span> dragButton<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span>dragButton<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">2000</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            createDragButton<span class=\"k\">(</span>table<span class=\"k\">,</span> editor<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> createDragButton<span class=\"k\">(</span>table<span class=\"k\">,</span> editor<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> pos <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>table<span class=\"k\">),</span>","            doc <span class=\"k\">=</span> table<span class=\"k\">.</span>ownerDocument<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>dragButton <span class=\"k\">&amp;&amp;</span> dragButton<span class=\"k\">.</span>parentNode<span class=\"k\">)</span><span class=\"k\">return</span> dragButton<span class=\"k\">;</span>","        dragButton <span class=\"k\">=</span> doc<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">);</span>","        dragButton<span class=\"k\">.</span>contentEditable <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        dragButton<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","        dragButton<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"s\">\"width:15px;height:15px;background-image:url(\"</span> <span class=\"k\">+</span> editor<span class=\"k\">.</span>options<span class=\"k\">.</span>UEDITOR_HOME_URL <span class=\"k\">+</span> <span class=\"s\">\"dialogs/table/dragicon.png);position: absolute;cursor:move;top:\"</span> <span class=\"k\">+</span> <span class=\"k\">(</span>pos<span class=\"k\">.</span>y <span class=\"k\">-</span> <span class=\"s\">15</span><span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"px;left:\"</span> <span class=\"k\">+</span> <span class=\"k\">(</span>pos<span class=\"k\">.</span>x<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"px;\"</span><span class=\"k\">;</span>","        domUtils<span class=\"k\">.</span>unSelectable<span class=\"k\">(</span>dragButton<span class=\"k\">);</span>","        dragButton<span class=\"k\">.</span>onmouseover <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>evt<span class=\"k\">)</span> <span class=\"k\">{</span>","            dragOver <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","        dragButton<span class=\"k\">.</span>onmouseout <span class=\"k\">=</span> <span class=\"k\">function</span> <span class=\"k\">(</span>evt<span class=\"k\">)</span> <span class=\"k\">{</span>","            dragOver <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","        domUtils<span class=\"k\">.</span>on<span class=\"k\">(</span>dragButton<span class=\"k\">,</span> <span class=\"s\">'click'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","            doClick<span class=\"k\">(</span>evt<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        domUtils<span class=\"k\">.</span>on<span class=\"k\">(</span>dragButton<span class=\"k\">,</span> <span class=\"s\">'dblclick'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","            doDblClick<span class=\"k\">(</span>evt<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        domUtils<span class=\"k\">.</span>on<span class=\"k\">(</span>dragButton<span class=\"k\">,</span> <span class=\"s\">'dragstart'</span><span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>type<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>preventDefault<span class=\"k\">(</span>evt<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        <span class=\"k\">var</span> timer<span class=\"k\">;</span>","","        <span class=\"k\">function</span> doClick<span class=\"k\">(</span>evt<span class=\"k\">,</span> button<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">// &#37096;&#20998;&#27983;&#35272;&#22120;&#19979;&#38656;&#35201;&#28165;&#29702;</span>","            clearTimeout<span class=\"k\">(</span>timer<span class=\"k\">);</span>","            timer <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                editor<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"tableClicked\"</span><span class=\"k\">,</span> table<span class=\"k\">,</span> button<span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">300</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> doDblClick<span class=\"k\">(</span>evt<span class=\"k\">)</span> <span class=\"k\">{</span>","            clearTimeout<span class=\"k\">(</span>timer<span class=\"k\">);</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>table<span class=\"k\">),</span>","                start <span class=\"k\">=</span> table<span class=\"k\">.</span>rows<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>cells<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">],</span>","                end <span class=\"k\">=</span> ut<span class=\"k\">.</span>getLastCell<span class=\"k\">(),</span>","                range <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellsRange<span class=\"k\">(</span>start<span class=\"k\">,</span> end<span class=\"k\">);</span>","            editor<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">().</span>setStart<span class=\"k\">(</span>start<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            ut<span class=\"k\">.</span>setSelected<span class=\"k\">(</span>range<span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        doc<span class=\"k\">.</span>body<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>dragButton<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","","<span class=\"c\">//    function inPosition(table, pos) {</span>","<span class=\"c\">//        var tablePos = domUtils.getXY(table),</span>","<span class=\"c\">//            width = table.offsetWidth,</span>","<span class=\"c\">//            height = table.offsetHeight;</span>","<span class=\"c\">//        if (pos.x - tablePos.x &lt; 5 &amp;&amp; pos.y - tablePos.y &lt; 5) {</span>","<span class=\"c\">//            return \"topLeft\";</span>","<span class=\"c\">//        } else if (tablePos.x + width - pos.x &lt; 5 &amp;&amp; tablePos.y + height - pos.y &lt; 5) {</span>","<span class=\"c\">//            return \"bottomRight\";</span>","<span class=\"c\">//        }</span>","<span class=\"c\">//    }</span>","","    <span class=\"k\">function</span> inTableSide<span class=\"k\">(</span>table<span class=\"k\">,</span> cell<span class=\"k\">,</span> evt<span class=\"k\">,</span> top<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> pos <span class=\"k\">=</span> mouseCoords<span class=\"k\">(</span>evt<span class=\"k\">),</span>","            state <span class=\"k\">=</span> getRelation<span class=\"k\">(</span>cell<span class=\"k\">,</span> pos<span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>top<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> caption <span class=\"k\">=</span> table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"caption\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">],</span>","                capHeight <span class=\"k\">=</span> caption <span class=\"k\">?</span> caption<span class=\"k\">.</span>offsetHeight <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"k\">(</span>state <span class=\"k\">==</span> <span class=\"s\">\"v1\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">((</span>pos<span class=\"k\">.</span>y <span class=\"k\">-</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>table<span class=\"k\">).</span>y <span class=\"k\">-</span> capHeight<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">8</span><span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">(</span>state <span class=\"k\">==</span> <span class=\"s\">\"h1\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">((</span>pos<span class=\"k\">.</span>x <span class=\"k\">-</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>table<span class=\"k\">).</span>x<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">8</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#33719;&#21462;&#25302;&#21160;&#26102;&#20801;&#35768;&#30340;X&#36724;&#22352;&#26631;</span>","<span class=\"c\">     * @param dragTd</span>","<span class=\"c\">     * @param evt</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getPermissionX<span class=\"k\">(</span>dragTd<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>dragTd<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> preTd <span class=\"k\">=</span> ut<span class=\"k\">.</span>getSameEndPosCells<span class=\"k\">(</span>dragTd<span class=\"k\">,</span> <span class=\"s\">\"x\"</span><span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">],</span>","                nextTd <span class=\"k\">=</span> ut<span class=\"k\">.</span>getSameStartPosXCells<span class=\"k\">(</span>dragTd<span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">],</span>","                mouseX <span class=\"k\">=</span> mouseCoords<span class=\"k\">(</span>evt<span class=\"k\">).</span>x<span class=\"k\">,</span>","                left <span class=\"k\">=</span> <span class=\"k\">(</span>preTd <span class=\"k\">?</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>preTd<span class=\"k\">).</span>x <span class=\"k\">:</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>ut<span class=\"k\">.</span>table<span class=\"k\">).</span>x<span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">20</span> <span class=\"k\">,</span>","                right <span class=\"k\">=</span> nextTd <span class=\"k\">?</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>nextTd<span class=\"k\">).</span>x <span class=\"k\">+</span> nextTd<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> <span class=\"s\">20</span> <span class=\"k\">:</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">.</span>offsetWidth <span class=\"k\">+</span> <span class=\"s\">5</span> <span class=\"k\">||</span> parseInt<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">\"width\"</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">));</span>","","            left <span class=\"k\">+=</span> cellMinWidth<span class=\"k\">;</span>","            right <span class=\"k\">-=</span> cellMinWidth<span class=\"k\">;</span>","","            <span class=\"k\">return</span> mouseX <span class=\"k\">&lt;</span> left <span class=\"k\">?</span> left <span class=\"k\">:</span> mouseX <span class=\"k\">&gt;</span> right <span class=\"k\">?</span> right <span class=\"k\">:</span> mouseX<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#33719;&#21462;&#25302;&#21160;&#26102;&#20801;&#35768;&#30340;Y&#36724;&#22352;&#26631;</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getPermissionY<span class=\"k\">(</span>dragTd<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> top <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>dragTd<span class=\"k\">).</span>y<span class=\"k\">,</span>","                mousePosY <span class=\"k\">=</span> mouseCoords<span class=\"k\">(</span>evt<span class=\"k\">).</span>y<span class=\"k\">;</span>","            <span class=\"k\">return</span> mousePosY <span class=\"k\">&lt;</span> top <span class=\"k\">?</span> top <span class=\"k\">:</span> mousePosY<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            showError<span class=\"k\">(</span>e<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#31227;&#21160;&#29366;&#24577;&#20999;&#25442;</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> toggleDraggableState<span class=\"k\">(</span>editor<span class=\"k\">,</span> draggable<span class=\"k\">,</span> dir<span class=\"k\">,</span> mousePos<span class=\"k\">,</span> cell<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            editor<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>cursor <span class=\"k\">=</span> dir <span class=\"k\">==</span> <span class=\"s\">\"h\"</span> <span class=\"k\">?</span> <span class=\"s\">\"col-resize\"</span> <span class=\"k\">:</span> dir <span class=\"k\">==</span> <span class=\"s\">\"v\"</span> <span class=\"k\">?</span> <span class=\"s\">\"row-resize\"</span> <span class=\"k\">:</span> <span class=\"s\">\"text\"</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>browser<span class=\"k\">.</span>ie<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>dir <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>mousedown <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>getUETableBySelected<span class=\"k\">(</span>editor<span class=\"k\">))</span> <span class=\"k\">{</span>","                    getDragLine<span class=\"k\">(</span>editor<span class=\"k\">,</span> editor<span class=\"k\">.</span>document<span class=\"k\">);</span>","                    showDragLineAt<span class=\"k\">(</span>dir<span class=\"k\">,</span> cell<span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    hideDragLine<span class=\"k\">(</span>editor<span class=\"k\">)</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            onBorder <span class=\"k\">=</span> draggable<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","            showError<span class=\"k\">(</span>e<span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#33719;&#21462;&#19982;UETable&#30456;&#20851;&#30340;resize line</span>","<span class=\"c\">     * @param uetable UETable&#23545;&#35937;</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getResizeLineByUETable<span class=\"k\">()</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> lineId <span class=\"k\">=</span> <span class=\"s\">'_UETableResizeLine'</span><span class=\"k\">,</span>","            line <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span> lineId <span class=\"k\">);</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>line <span class=\"k\">)</span> <span class=\"k\">{</span>","            line <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">);</span>","            line<span class=\"k\">.</span>id <span class=\"k\">=</span> lineId<span class=\"k\">;</span>","            line<span class=\"k\">.</span>contnetEditable <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            line<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"unselectable\"</span><span class=\"k\">,</span> <span class=\"s\">\"on\"</span><span class=\"k\">);</span>","","            <span class=\"k\">var</span> styles <span class=\"k\">=</span> <span class=\"k\">{</span>","                width<span class=\"k\">:</span> <span class=\"s\">2</span><span class=\"k\">*</span>cellBorderWidth <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">,</span>","                position<span class=\"k\">:</span> <span class=\"s\">'absolute'</span><span class=\"k\">,</span>","                <span class=\"s\">'z-index'</span><span class=\"k\">:</span> <span class=\"s\">100000</span><span class=\"k\">,</span>","                cursor<span class=\"k\">:</span> <span class=\"s\">'col-resize'</span><span class=\"k\">,</span>","                background<span class=\"k\">:</span> <span class=\"s\">'red'</span><span class=\"k\">,</span>","                display<span class=\"k\">:</span> <span class=\"s\">'none'</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">//&#20999;&#25442;&#29366;&#24577;</span>","            line<span class=\"k\">.</span>onmouseout <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            utils<span class=\"k\">.</span>extend<span class=\"k\">(</span> line<span class=\"k\">.</span>style<span class=\"k\">,</span> styles <span class=\"k\">);</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> line <span class=\"k\">);</span>","","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> line<span class=\"k\">;</span>","","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#26356;&#26032;resize-line</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> updateResizeLine<span class=\"k\">(</span> cell<span class=\"k\">,</span> uetable <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> line <span class=\"k\">=</span> getResizeLineByUETable<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">),</span>","            table <span class=\"k\">=</span> uetable<span class=\"k\">.</span>table<span class=\"k\">,</span>","            styles <span class=\"k\">=</span> <span class=\"k\">{</span>","                top<span class=\"k\">:</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span> table <span class=\"k\">).</span>y <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">,</span>","                left<span class=\"k\">:</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span> cell<span class=\"k\">).</span>x <span class=\"k\">+</span> cell<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> cellBorderWidth <span class=\"k\">+</span> <span class=\"s\">'px'</span><span class=\"k\">,</span>","                display<span class=\"k\">:</span> <span class=\"s\">'block'</span><span class=\"k\">,</span>","                height<span class=\"k\">:</span> table<span class=\"k\">.</span>offsetHeight <span class=\"k\">+</span> <span class=\"s\">'px'</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","        utils<span class=\"k\">.</span>extend<span class=\"k\">(</span> line<span class=\"k\">.</span>style<span class=\"k\">,</span> styles <span class=\"k\">);</span>","","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#26174;&#31034;resize-line</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> showResizeLine<span class=\"k\">(</span> cell <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> uetable <span class=\"k\">=</span> getUETable<span class=\"k\">(</span> cell <span class=\"k\">);</span>","","        updateResizeLine<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> cell<span class=\"k\">,</span> uetable <span class=\"k\">);</span>","","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#33719;&#21462;&#40736;&#26631;&#19982;&#24403;&#21069;&#21333;&#20803;&#26684;&#30340;&#30456;&#23545;&#20301;&#32622;</span>","<span class=\"c\">     * @param ele</span>","<span class=\"c\">     * @param mousePos</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getRelation<span class=\"k\">(</span>ele<span class=\"k\">,</span> mousePos<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> elePos <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>ele<span class=\"k\">);</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>elePos <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>elePos<span class=\"k\">.</span>x <span class=\"k\">+</span> ele<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> mousePos<span class=\"k\">.</span>x <span class=\"k\">&lt;</span> cellBorderWidth<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">\"h\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>mousePos<span class=\"k\">.</span>x <span class=\"k\">-</span> elePos<span class=\"k\">.</span>x <span class=\"k\">&lt;</span> cellBorderWidth<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">'h1'</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>elePos<span class=\"k\">.</span>y <span class=\"k\">+</span> ele<span class=\"k\">.</span>offsetHeight <span class=\"k\">-</span> mousePos<span class=\"k\">.</span>y <span class=\"k\">&lt;</span> cellBorderWidth<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">\"v\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>mousePos<span class=\"k\">.</span>y <span class=\"k\">-</span> elePos<span class=\"k\">.</span>y <span class=\"k\">&lt;</span> cellBorderWidth<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">'v1'</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"s\">''</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> mouseDownEvent<span class=\"k\">(</span>type<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> isEditorDisabled<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        userActionStatus <span class=\"k\">=</span> <span class=\"k\">{</span>","            x<span class=\"k\">:</span> evt<span class=\"k\">.</span>clientX<span class=\"k\">,</span>","            y<span class=\"k\">:</span> evt<span class=\"k\">.</span>clientY","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"c\">//&#21491;&#38190;&#33756;&#21333;&#21333;&#29420;&#22788;&#29702;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>evt<span class=\"k\">.</span>button <span class=\"k\">==</span> <span class=\"s\">2</span><span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETableBySelected<span class=\"k\">(</span>me<span class=\"k\">),</span>","                flag <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> td <span class=\"k\">=</span> getTargetTd<span class=\"k\">(</span>me<span class=\"k\">,</span> evt<span class=\"k\">);</span>","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span>ut<span class=\"k\">.</span>selectedTds<span class=\"k\">,</span> <span class=\"k\">function</span> <span class=\"k\">(</span>ti<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>ti <span class=\"k\">===</span> td<span class=\"k\">)</span> <span class=\"k\">{</span>","                        flag <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>flag<span class=\"k\">)</span> <span class=\"k\">{</span>","                    removeSelectedClass<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">\"th td\"</span><span class=\"k\">));</span>","                    ut<span class=\"k\">.</span>clearSelected<span class=\"k\">()</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    td <span class=\"k\">=</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                    setTimeout<span class=\"k\">(</span><span class=\"k\">function</span> <span class=\"k\">()</span> <span class=\"k\">{</span>","                        me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">().</span>setStart<span class=\"k\">(</span>td<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">);</span>","","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            tableClickHander<span class=\"k\">(</span> evt <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span>","","    <span class=\"c\">//&#28165;&#38500;&#34920;&#26684;&#30340;&#35745;&#26102;&#22120;</span>","    <span class=\"k\">function</span> clearTableTimer<span class=\"k\">()</span> <span class=\"k\">{</span>","        tabTimer <span class=\"k\">&amp;&amp;</span> clearTimeout<span class=\"k\">(</span> tabTimer <span class=\"k\">);</span>","        tabTimer <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">//&#21452;&#20987;&#25910;&#32553;</span>","    <span class=\"k\">function</span> tableDbclickHandler<span class=\"k\">(</span>evt<span class=\"k\">)</span> <span class=\"k\">{</span>","        singleClickState <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        evt <span class=\"k\">=</span> evt <span class=\"k\">||</span> me<span class=\"k\">.</span>window<span class=\"k\">.</span>event<span class=\"k\">;</span>","        <span class=\"k\">var</span> target <span class=\"k\">=</span> getParentTdOrTh<span class=\"k\">(</span>evt<span class=\"k\">.</span>target <span class=\"k\">||</span> evt<span class=\"k\">.</span>srcElement<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>target<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> h<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>h <span class=\"k\">=</span> getRelation<span class=\"k\">(</span>target<span class=\"k\">,</span> mouseCoords<span class=\"k\">(</span>evt<span class=\"k\">)))</span> <span class=\"k\">{</span>","","                hideDragLine<span class=\"k\">(</span> me <span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span>h <span class=\"k\">==</span> <span class=\"s\">'h1'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    h <span class=\"k\">=</span> <span class=\"s\">'h'</span><span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>inTableSide<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>target<span class=\"k\">,</span> <span class=\"s\">\"table\"</span><span class=\"k\">),</span> target<span class=\"k\">,</span> evt<span class=\"k\">))</span> <span class=\"k\">{</span>","                        me<span class=\"k\">.</span>execCommand<span class=\"k\">(</span><span class=\"s\">'adaptbywindow'</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        target <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>target<span class=\"k\">).</span>getPreviewCell<span class=\"k\">(</span>target<span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span>target<span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> rng <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","                            rng<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>target<span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>h <span class=\"k\">==</span> <span class=\"s\">'h'</span><span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>target<span class=\"k\">),</span>","                        table <span class=\"k\">=</span> ut<span class=\"k\">.</span>table<span class=\"k\">,</span>","                        cells <span class=\"k\">=</span> getCellsByMoveBorder<span class=\"k\">(</span> target<span class=\"k\">,</span> table<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","","                    cells <span class=\"k\">=</span> extractArray<span class=\"k\">(</span> cells<span class=\"k\">,</span> <span class=\"s\">'left'</span> <span class=\"k\">);</span>","","                    ut<span class=\"k\">.</span>width <span class=\"k\">=</span> ut<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","","                    <span class=\"k\">var</span> oldWidth <span class=\"k\">=</span> <span class=\"k\">[],</span>","                        newWidth <span class=\"k\">=</span> <span class=\"k\">[];</span>","","                    utils<span class=\"k\">.</span>each<span class=\"k\">(</span> cells<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> cell <span class=\"k\">)</span><span class=\"k\">{</span>","","                        oldWidth<span class=\"k\">.</span>push<span class=\"k\">(</span> cell<span class=\"k\">.</span>offsetWidth <span class=\"k\">);</span>","","                    <span class=\"k\">}</span> <span class=\"k\">);</span>","","                    utils<span class=\"k\">.</span>each<span class=\"k\">(</span> cells<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> cell <span class=\"k\">)</span><span class=\"k\">{</span>","","                        cell<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">);</span>","","                    <span class=\"k\">}</span> <span class=\"k\">);</span>","","                    window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","","                        <span class=\"c\">//&#26159;&#21542;&#20801;&#35768;&#25913;&#21464;</span>","                        <span class=\"k\">var</span> changeable <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","                        utils<span class=\"k\">.</span>each<span class=\"k\">(</span> cells<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> cell<span class=\"k\">,</span> index <span class=\"k\">)</span><span class=\"k\">{</span>","","                            <span class=\"k\">var</span> width <span class=\"k\">=</span> cell<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","","                            <span class=\"k\">if</span><span class=\"k\">(</span> width <span class=\"k\">&gt;</span> oldWidth<span class=\"k\">[</span>index<span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                changeable <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","","                            newWidth<span class=\"k\">.</span>push<span class=\"k\">(</span> width <span class=\"k\">);</span>","","                        <span class=\"k\">}</span> <span class=\"k\">);</span>","","                        <span class=\"k\">var</span> change <span class=\"k\">=</span> changeable <span class=\"k\">?</span> newWidth <span class=\"k\">:</span> oldWidth<span class=\"k\">;</span>","","                        utils<span class=\"k\">.</span>each<span class=\"k\">(</span> cells<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> cell<span class=\"k\">,</span> index <span class=\"k\">)</span><span class=\"k\">{</span>","","                            cell<span class=\"k\">.</span>width <span class=\"k\">=</span> change<span class=\"k\">[</span>index<span class=\"k\">]</span> <span class=\"k\">-</span> getTabcellSpace<span class=\"k\">();</span>","","                        <span class=\"k\">}</span> <span class=\"k\">);</span>","","","                    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","","<span class=\"c\">//                    minWidth -= cellMinWidth;</span>","<span class=\"c\">//</span>","<span class=\"c\">//                    table.removeAttribute(\"width\");</span>","<span class=\"c\">//                    utils.each(cells, function (cell) {</span>","<span class=\"c\">//                        cell.style.width = \"\";</span>","<span class=\"c\">//                        cell.width -= minWidth;</span>","<span class=\"c\">//                    });</span>","","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> tableClickHander<span class=\"k\">(</span> evt <span class=\"k\">)</span> <span class=\"k\">{</span>","","        removeSelectedClass<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>me<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">\"td th\"</span><span class=\"k\">));</span>","        <span class=\"c\">//trace:3113</span>","        <span class=\"c\">//&#36873;&#20013;&#21333;&#20803;&#26684;&#65292;&#28857;&#20987;table&#22806;&#37096;&#65292;&#19981;&#20250;&#28165;&#25481;table&#19978;&#25346;&#30340;ueTable,&#20250;&#24341;&#36215;getUETableBySelected&#26041;&#27861;&#36820;&#22238;&#20540;</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'table'</span><span class=\"k\">),</span> <span class=\"k\">function</span> <span class=\"k\">(</span>t<span class=\"k\">)</span> <span class=\"k\">{</span>","            t<span class=\"k\">.</span>ueTable <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        startTd <span class=\"k\">=</span> getTargetTd<span class=\"k\">(</span>me<span class=\"k\">,</span> evt<span class=\"k\">);</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>startTd <span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>startTd<span class=\"k\">,</span> <span class=\"s\">\"table\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>table<span class=\"k\">);</span>","        ut <span class=\"k\">&amp;&amp;</span> ut<span class=\"k\">.</span>clearSelected<span class=\"k\">();</span>","","        <span class=\"c\">//&#21028;&#26029;&#24403;&#21069;&#40736;&#26631;&#29366;&#24577;</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>onBorder<span class=\"k\">)</span> <span class=\"k\">{</span>","            me<span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitUserSelect <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            mousedown <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            me<span class=\"k\">.</span>addListener<span class=\"k\">(</span><span class=\"s\">'mouseover'</span><span class=\"k\">,</span> mouseOverEvent<span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"c\">//&#36793;&#26694;&#19978;&#30340;&#21160;&#20316;&#22788;&#29702;</span>","            borderActionHandler<span class=\"k\">(</span> evt <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","","    <span class=\"k\">}</span>","","    <span class=\"c\">//&#22788;&#29702;&#34920;&#26684;&#36793;&#26694;&#19978;&#30340;&#21160;&#20316;, &#36825;&#37324;&#20570;&#24310;&#26102;&#22788;&#29702;&#65292;&#36991;&#20813;&#20004;&#31181;&#21160;&#20316;&#20114;&#30456;&#24433;&#21709;</span>","    <span class=\"k\">function</span> borderActionHandler<span class=\"k\">(</span> evt <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> browser<span class=\"k\">.</span>ie <span class=\"k\">)</span> <span class=\"k\">{</span>","            evt <span class=\"k\">=</span> reconstruct<span class=\"k\">(</span>evt <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        clearTableDragTimer<span class=\"k\">();</span>","","        <span class=\"c\">//&#26159;&#21542;&#27491;&#22312;&#31561;&#24453;resize&#30340;&#32531;&#20914;&#20013;</span>","        isInResizeBuffer <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","        tableDragTimer <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","            tableBorderDrag<span class=\"k\">(</span> evt <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span> dblclickTime<span class=\"k\">);</span>","","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> extractArray<span class=\"k\">(</span> originArr<span class=\"k\">,</span> key <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> result <span class=\"k\">=</span> <span class=\"k\">[],</span>","            tmp <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","        <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> len <span class=\"k\">=</span> originArr<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">&lt;</span>len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            tmp <span class=\"k\">=</span> originArr<span class=\"k\">[</span> i <span class=\"k\">][</span> key <span class=\"k\">];</span>","","            <span class=\"k\">if</span><span class=\"k\">(</span> tmp <span class=\"k\">)</span> <span class=\"k\">{</span>","                result<span class=\"k\">.</span>push<span class=\"k\">(</span> tmp <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> result<span class=\"k\">;</span>","","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> clearTableDragTimer<span class=\"k\">()</span> <span class=\"k\">{</span>","        tableDragTimer <span class=\"k\">&amp;&amp;</span> clearTimeout<span class=\"k\">(</span>tableDragTimer<span class=\"k\">);</span>","        tableDragTimer <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> reconstruct<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> attrs <span class=\"k\">=</span> <span class=\"k\">[</span><span class=\"s\">'pageX'</span><span class=\"k\">,</span> <span class=\"s\">'pageY'</span><span class=\"k\">,</span> <span class=\"s\">'clientX'</span><span class=\"k\">,</span> <span class=\"s\">'clientY'</span><span class=\"k\">,</span> <span class=\"s\">'srcElement'</span><span class=\"k\">,</span> <span class=\"s\">'target'</span><span class=\"k\">],</span>","            newObj <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> key<span class=\"k\">,</span> val<span class=\"k\">;</span> key <span class=\"k\">=</span> attrs<span class=\"k\">[</span>i<span class=\"k\">];</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                val<span class=\"k\">=</span>obj<span class=\"k\">[</span> key <span class=\"k\">];</span>","                val <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>newObj<span class=\"k\">[</span> key <span class=\"k\">]</span> <span class=\"k\">=</span> val<span class=\"k\">);</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> newObj<span class=\"k\">;</span>","","    <span class=\"k\">}</span>","","    <span class=\"c\">//&#36793;&#26694;&#25302;&#21160;</span>","    <span class=\"k\">function</span> tableBorderDrag<span class=\"k\">(</span> evt <span class=\"k\">)</span> <span class=\"k\">{</span>","","        isInResizeBuffer <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>startTd <span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> state <span class=\"k\">=</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span> userActionStatus<span class=\"k\">.</span>x <span class=\"k\">-</span> evt<span class=\"k\">.</span>clientX <span class=\"k\">)</span> <span class=\"k\">&gt;=</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span> userActionStatus<span class=\"k\">.</span>y <span class=\"k\">-</span> evt<span class=\"k\">.</span>clientY <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">'h'</span> <span class=\"k\">:</span> <span class=\"s\">'v'</span><span class=\"k\">;</span>","<span class=\"c\">//        var state = getRelation(startTd, mouseCoords(evt));</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/\\d/</span><span class=\"k\">.</span>test<span class=\"k\">(</span>state<span class=\"k\">))</span> <span class=\"k\">{</span>","            state <span class=\"k\">=</span> state<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/\\d/</span><span class=\"k\">,</span> <span class=\"s\">''</span><span class=\"k\">);</span>","            startTd <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>startTd<span class=\"k\">).</span>getPreviewCell<span class=\"k\">(</span>startTd<span class=\"k\">,</span> state <span class=\"k\">==</span> <span class=\"s\">'v'</span><span class=\"k\">);</span>","        <span class=\"k\">}</span>","        hideDragLine<span class=\"k\">(</span>me<span class=\"k\">);</span>","        getDragLine<span class=\"k\">(</span>me<span class=\"k\">,</span> me<span class=\"k\">.</span>document<span class=\"k\">);</span>","        me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","        showDragLineAt<span class=\"k\">(</span>state<span class=\"k\">,</span> startTd<span class=\"k\">);</span>","        mousedown <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"c\">//&#25302;&#21160;&#24320;&#22987;</span>","        onDrag <span class=\"k\">=</span> state<span class=\"k\">;</span>","        dragTd <span class=\"k\">=</span> startTd<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> mouseUpEvent<span class=\"k\">(</span>type<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> isEditorDisabled<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        clearTableDragTimer<span class=\"k\">();</span>","","        isInResizeBuffer <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> onBorder <span class=\"k\">)</span> <span class=\"k\">{</span>","            singleClickState <span class=\"k\">=</span> <span class=\"k\">++</span>singleClickState <span class=\"k\">%</span> <span class=\"s\">3</span><span class=\"k\">;</span>","","            userActionStatus <span class=\"k\">=</span> <span class=\"k\">{</span>","                x<span class=\"k\">:</span> evt<span class=\"k\">.</span>clientX<span class=\"k\">,</span>","                y<span class=\"k\">:</span> evt<span class=\"k\">.</span>clientY","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            tableResizeTimer <span class=\"k\">=</span> setTimeout<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span>","                singleClickState <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> singleClickState<span class=\"k\">--;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> dblclickTime <span class=\"k\">);</span>","","            <span class=\"k\">if</span><span class=\"k\">(</span> singleClickState <span class=\"k\">===</span> <span class=\"s\">2</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                singleClickState <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                tableDbclickHandler<span class=\"k\">(</span>evt<span class=\"k\">);</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>evt<span class=\"k\">.</span>button <span class=\"k\">==</span> <span class=\"s\">2</span><span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"c\">//&#28165;&#38500;&#34920;&#26684;&#19978;&#21407;&#29983;&#36328;&#36873;&#38382;&#39064;</span>","        <span class=\"k\">var</span> range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">(),</span>","            start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">),</span>","            end <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">||</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">===</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'td'</span><span class=\"k\">,</span> <span class=\"s\">'th'</span><span class=\"k\">,</span> <span class=\"s\">'caption'</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                end <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'td'</span><span class=\"k\">,</span> <span class=\"s\">'th'</span><span class=\"k\">,</span> <span class=\"s\">'caption'</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">!==</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                    me<span class=\"k\">.</span>selection<span class=\"k\">.</span>clearRange<span class=\"k\">()</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                me<span class=\"k\">.</span>selection<span class=\"k\">.</span>clearRange<span class=\"k\">()</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        mousedown <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        me<span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitUserSelect <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","        <span class=\"c\">//&#25302;&#25341;&#29366;&#24577;&#19979;&#30340;mouseUP</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> onDrag <span class=\"k\">&amp;&amp;</span> dragTd <span class=\"k\">)</span> <span class=\"k\">{</span>","","            me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getNative<span class=\"k\">()[</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'empty'</span> <span class=\"k\">:</span> <span class=\"s\">'removeAllRanges'</span><span class=\"k\">]();</span>","","            singleClickState <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            dragLine <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">'ue_tableDragLine'</span><span class=\"k\">);</span>","","            <span class=\"k\">var</span> dragTdPos <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>dragTd<span class=\"k\">),</span>","                dragLinePos <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>dragLine<span class=\"k\">);</span>","","            <span class=\"k\">switch</span> <span class=\"k\">(</span>onDrag<span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">case</span> <span class=\"s\">\"h\"</span><span class=\"k\">:</span>","                    changeColWidth<span class=\"k\">(</span>dragTd<span class=\"k\">,</span> dragLinePos<span class=\"k\">.</span>x <span class=\"k\">-</span> dragTdPos<span class=\"k\">.</span>x<span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">case</span> <span class=\"s\">\"v\"</span><span class=\"k\">:</span>","                    changeRowHeight<span class=\"k\">(</span>dragTd<span class=\"k\">,</span> dragLinePos<span class=\"k\">.</span>y <span class=\"k\">-</span> dragTdPos<span class=\"k\">.</span>y <span class=\"k\">-</span> dragTd<span class=\"k\">.</span>offsetHeight<span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">default</span><span class=\"k\">:</span>","            <span class=\"k\">}</span>","            onDrag <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","            dragTd <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","            hideDragLine<span class=\"k\">(</span>me<span class=\"k\">);</span>","            me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">'saveScene'</span><span class=\"k\">);</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"c\">//&#27491;&#24120;&#29366;&#24577;&#19979;&#30340;mouseup</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>startTd<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> target <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>evt<span class=\"k\">.</span>target <span class=\"k\">||</span> evt<span class=\"k\">.</span>srcElement<span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(!</span>target<span class=\"k\">)</span> target <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>evt<span class=\"k\">.</span>target <span class=\"k\">||</span> evt<span class=\"k\">.</span>srcElement<span class=\"k\">,</span> <span class=\"s\">\"th\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>target <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>target<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TD\"</span> <span class=\"k\">||</span> target<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TH\"</span><span class=\"k\">))</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>me<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"excludetable\"</span><span class=\"k\">,</span> target<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","                range <span class=\"k\">=</span> <span class=\"k\">new</span> dom<span class=\"k\">.</span>Range<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">);</span>","                range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>target<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>startTd<span class=\"k\">),</span>","                cell <span class=\"k\">=</span> ut <span class=\"k\">?</span> ut<span class=\"k\">.</span>selectedTds<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>cell<span class=\"k\">)</span> <span class=\"k\">{</span>","                range <span class=\"k\">=</span> <span class=\"k\">new</span> dom<span class=\"k\">.</span>Range<span class=\"k\">(</span>me<span class=\"k\">.</span>document<span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>domUtils<span class=\"k\">.</span>isEmptyBlock<span class=\"k\">(</span>cell<span class=\"k\">))</span> <span class=\"k\">{</span>","                    range<span class=\"k\">.</span>setStart<span class=\"k\">(</span>cell<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">).</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    range<span class=\"k\">.</span>selectNodeContents<span class=\"k\">(</span>cell<span class=\"k\">).</span>shrinkBoundary<span class=\"k\">().</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                range <span class=\"k\">=</span> me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">().</span>shrinkBoundary<span class=\"k\">();</span>","                <span class=\"k\">if</span> <span class=\"k\">(!</span>range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> start <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>startContainer<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'td'</span><span class=\"k\">,</span> <span class=\"s\">'th'</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">),</span>","                        end <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>range<span class=\"k\">.</span>endContainer<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">'td'</span><span class=\"k\">,</span> <span class=\"s\">'th'</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"c\">//&#22312;table&#37324;&#36793;&#30340;&#19981;&#33021;&#28165;&#38500;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span>start <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>end <span class=\"k\">||</span> <span class=\"k\">!</span>start <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">||</span> start <span class=\"k\">&amp;&amp;</span> end <span class=\"k\">&amp;&amp;</span> start <span class=\"k\">!==</span> end<span class=\"k\">)</span> <span class=\"k\">{</span>","                        range<span class=\"k\">.</span>setCursor<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            startTd <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            me<span class=\"k\">.</span>removeListener<span class=\"k\">(</span><span class=\"s\">'mouseover'</span><span class=\"k\">,</span> mouseOverEvent<span class=\"k\">);</span>","        <span class=\"k\">}</span>","        me<span class=\"k\">.</span>_selectionChange<span class=\"k\">(</span><span class=\"s\">250</span><span class=\"k\">,</span> evt<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> mouseOverEvent<span class=\"k\">(</span>type<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> isEditorDisabled<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> me <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","            tar <span class=\"k\">=</span> evt<span class=\"k\">.</span>target <span class=\"k\">||</span> evt<span class=\"k\">.</span>srcElement<span class=\"k\">;</span>","        currentTd <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>tar<span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">||</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>tar<span class=\"k\">,</span> <span class=\"s\">\"th\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">);</span>","        <span class=\"c\">//&#38656;&#35201;&#21028;&#26029;&#20004;&#20010;TD&#26159;&#21542;&#20301;&#20110;&#21516;&#19968;&#20010;&#34920;&#26684;&#20869;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>startTd <span class=\"k\">&amp;&amp;</span> currentTd <span class=\"k\">&amp;&amp;</span>","            <span class=\"k\">((</span>startTd<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TD\"</span> <span class=\"k\">&amp;&amp;</span> currentTd<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TD\"</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>startTd<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TH\"</span> <span class=\"k\">&amp;&amp;</span> currentTd<span class=\"k\">.</span>tagName <span class=\"k\">==</span> <span class=\"s\">\"TH\"</span><span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span>","            domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>startTd<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">)</span> <span class=\"k\">==</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>currentTd<span class=\"k\">,</span> <span class=\"s\">'table'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>currentTd<span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>startTd <span class=\"k\">!=</span> currentTd<span class=\"k\">)</span> <span class=\"k\">{</span>","                me<span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitUserSelect <span class=\"k\">=</span> <span class=\"s\">'none'</span><span class=\"k\">;</span>","                me<span class=\"k\">.</span>selection<span class=\"k\">.</span>getNative<span class=\"k\">()[</span>browser<span class=\"k\">.</span>ie <span class=\"k\">?</span> <span class=\"s\">'empty'</span> <span class=\"k\">:</span> <span class=\"s\">'removeAllRanges'</span><span class=\"k\">]();</span>","                <span class=\"k\">var</span> range <span class=\"k\">=</span> ut<span class=\"k\">.</span>getCellsRange<span class=\"k\">(</span>startTd<span class=\"k\">,</span> currentTd<span class=\"k\">);</span>","                ut<span class=\"k\">.</span>setSelected<span class=\"k\">(</span>range<span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                me<span class=\"k\">.</span>document<span class=\"k\">.</span>body<span class=\"k\">.</span>style<span class=\"k\">.</span>webkitUserSelect <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","                ut<span class=\"k\">.</span>clearSelected<span class=\"k\">();</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","        evt<span class=\"k\">.</span>preventDefault <span class=\"k\">?</span> evt<span class=\"k\">.</span>preventDefault<span class=\"k\">()</span> <span class=\"k\">:</span> <span class=\"k\">(</span>evt<span class=\"k\">.</span>returnValue <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> setCellHeight<span class=\"k\">(</span>cell<span class=\"k\">,</span> height<span class=\"k\">,</span> backHeight<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> lineHight <span class=\"k\">=</span> parseInt<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>cell<span class=\"k\">,</span> <span class=\"s\">\"line-height\"</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">),</span>","            tmpHeight <span class=\"k\">=</span> backHeight <span class=\"k\">+</span> height<span class=\"k\">;</span>","        height <span class=\"k\">=</span> tmpHeight <span class=\"k\">&lt;</span> lineHight <span class=\"k\">?</span> lineHight <span class=\"k\">:</span> tmpHeight<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>cell<span class=\"k\">.</span>style<span class=\"k\">.</span>height<span class=\"k\">)</span> cell<span class=\"k\">.</span>style<span class=\"k\">.</span>height <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","        cell<span class=\"k\">.</span>rowSpan <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> cell<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span><span class=\"s\">\"height\"</span><span class=\"k\">,</span> height<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">(</span>cell<span class=\"k\">.</span>removeAttribute <span class=\"k\">&amp;&amp;</span> cell<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">\"height\"</span><span class=\"k\">));</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> getWidth<span class=\"k\">(</span>cell<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>cell<span class=\"k\">)</span><span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">return</span> parseInt<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>cell<span class=\"k\">,</span> <span class=\"s\">\"width\"</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> changeColWidth<span class=\"k\">(</span>cell<span class=\"k\">,</span> changeValue<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>cell<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">//&#26681;&#25454;&#24403;&#21069;&#31227;&#21160;&#30340;&#36793;&#26694;&#33719;&#21462;&#30456;&#20851;&#30340;&#21333;&#20803;&#26684;</span>","            <span class=\"k\">var</span> table <span class=\"k\">=</span> ut<span class=\"k\">.</span>table<span class=\"k\">,</span>","                cells <span class=\"k\">=</span> getCellsByMoveBorder<span class=\"k\">(</span> cell<span class=\"k\">,</span> table <span class=\"k\">);</span>","","            table<span class=\"k\">.</span>style<span class=\"k\">.</span>width <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","            table<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span><span class=\"s\">\"width\"</span><span class=\"k\">);</span>","","            <span class=\"c\">//&#20462;&#27491;&#25913;&#21464;&#37327;</span>","            changeValue <span class=\"k\">=</span> correctChangeValue<span class=\"k\">(</span> changeValue<span class=\"k\">,</span> cell<span class=\"k\">,</span> cells <span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span>cell<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">var</span> i<span class=\"k\">=</span><span class=\"s\">0</span><span class=\"k\">;</span>","","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span> cells<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> cellGroup <span class=\"k\">)</span><span class=\"k\">{</span>","","                    cellGroup<span class=\"k\">.</span>left<span class=\"k\">.</span>width <span class=\"k\">=</span> <span class=\"k\">(+</span>cellGroup<span class=\"k\">.</span>left<span class=\"k\">.</span>width<span class=\"k\">)+</span>changeValue<span class=\"k\">;</span>","                    cellGroup<span class=\"k\">.</span>right <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> cellGroup<span class=\"k\">.</span>right<span class=\"k\">.</span>width <span class=\"k\">=</span> <span class=\"k\">(+</span>cellGroup<span class=\"k\">.</span>right<span class=\"k\">.</span>width<span class=\"k\">)-</span>changeValue <span class=\"k\">);</span>","","                <span class=\"k\">}</span> <span class=\"k\">);</span>","","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                utils<span class=\"k\">.</span>each<span class=\"k\">(</span> cells<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> cellGroup <span class=\"k\">)</span><span class=\"k\">{</span>","                    cellGroup<span class=\"k\">.</span>left<span class=\"k\">.</span>width <span class=\"k\">-=</span> <span class=\"k\">-</span>changeValue<span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> isEditorDisabled<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> me<span class=\"k\">.</span>body<span class=\"k\">.</span>contentEditable <span class=\"k\">===</span> <span class=\"s\">\"false\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> changeRowHeight<span class=\"k\">(</span>td<span class=\"k\">,</span> changeValue<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>changeValue<span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> ut <span class=\"k\">=</span> getUETable<span class=\"k\">(</span>td<span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>ut<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> cells <span class=\"k\">=</span> ut<span class=\"k\">.</span>getSameEndPosCells<span class=\"k\">(</span>td<span class=\"k\">,</span> <span class=\"s\">\"y\"</span><span class=\"k\">),</span>","            <span class=\"c\">//&#22791;&#20221;&#38656;&#35201;&#36830;&#24102;&#21464;&#21270;&#30340;td&#30340;&#21407;&#22987;&#39640;&#24230;&#65292;&#21542;&#21017;&#21518;&#26399;&#26080;&#27861;&#33719;&#21462;&#27491;&#30830;&#30340;&#20540;</span>","                backHeight <span class=\"k\">=</span> cells<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">?</span> cells<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>offsetHeight <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> cell<span class=\"k\">;</span> cell <span class=\"k\">=</span> cells<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","                setCellHeight<span class=\"k\">(</span>cell<span class=\"k\">,</span> changeValue<span class=\"k\">,</span> backHeight<span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#33719;&#21462;&#35843;&#25972;&#21333;&#20803;&#26684;&#22823;&#23567;&#30340;&#30456;&#20851;&#21333;&#20803;&#26684;</span>","<span class=\"c\">     * @isContainMergeCell &#36820;&#22238;&#30340;&#32467;&#26524;&#20013;&#26159;&#21542;&#21253;&#21547;&#21457;&#29983;&#21512;&#24182;&#21518;&#30340;&#21333;&#20803;&#26684;</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getCellsByMoveBorder<span class=\"k\">(</span> cell<span class=\"k\">,</span> table<span class=\"k\">,</span> isContainMergeCell <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>table <span class=\"k\">)</span> <span class=\"k\">{</span>","            table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span> cell<span class=\"k\">,</span> <span class=\"s\">'table'</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>table <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">//&#33719;&#21462;&#21040;&#35813;&#21333;&#20803;&#26684;&#25152;&#22312;&#34892;&#30340;&#24207;&#21015;&#21495;</span>","        <span class=\"k\">var</span> index <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNodeIndex<span class=\"k\">(</span> cell <span class=\"k\">),</span>","            temp <span class=\"k\">=</span> cell<span class=\"k\">,</span>","            rows <span class=\"k\">=</span> table<span class=\"k\">.</span>rows<span class=\"k\">,</span>","            colIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","        <span class=\"k\">while</span><span class=\"k\">(</span> temp <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"c\">//&#33719;&#21462;&#21040;&#24403;&#21069;&#21333;&#20803;&#26684;&#22312;&#26410;&#21457;&#29983;&#21333;&#20803;&#26684;&#21512;&#24182;&#26102;&#30340;&#24207;&#21015;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span> temp<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                colIndex <span class=\"k\">+=</span> <span class=\"k\">(</span>temp<span class=\"k\">.</span>colSpan <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","            temp <span class=\"k\">=</span> temp<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        temp <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","        <span class=\"c\">//&#35760;&#24405;&#24819;&#20851;&#30340;&#21333;&#20803;&#26684;</span>","        <span class=\"k\">var</span> borderCells <span class=\"k\">=</span> <span class=\"k\">[];</span>","","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span>rows<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> tabRow <span class=\"k\">)</span><span class=\"k\">{</span>","","            <span class=\"k\">var</span> cells <span class=\"k\">=</span> tabRow<span class=\"k\">.</span>cells<span class=\"k\">,</span>","                currIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            utils<span class=\"k\">.</span>each<span class=\"k\">(</span> cells<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> tabCell <span class=\"k\">)</span><span class=\"k\">{</span>","","                currIndex <span class=\"k\">+=</span> <span class=\"k\">(</span>tabCell<span class=\"k\">.</span>colSpan <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">);</span>","","                <span class=\"k\">if</span><span class=\"k\">(</span> currIndex <span class=\"k\">===</span> colIndex <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    borderCells<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span>","                        left<span class=\"k\">:</span> tabCell<span class=\"k\">,</span>","                        right<span class=\"k\">:</span> tabCell<span class=\"k\">.</span>nextSibling <span class=\"k\">||</span> <span class=\"k\">null</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","","                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span> currIndex <span class=\"k\">&gt;</span> colIndex <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">if</span><span class=\"k\">(</span> isContainMergeCell <span class=\"k\">)</span> <span class=\"k\">{</span>","                        borderCells<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span>","                            left<span class=\"k\">:</span> tabCell","                        <span class=\"k\">}</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","","            <span class=\"k\">}</span> <span class=\"k\">);</span>","","        <span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">return</span> borderCells<span class=\"k\">;</span>","","    <span class=\"k\">}</span>","","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#36890;&#36807;&#32473;&#23450;&#30340;&#21333;&#20803;&#26684;&#38598;&#21512;&#33719;&#21462;&#26368;&#23567;&#30340;&#21333;&#20803;&#26684;width</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getMinWidthByTableCells<span class=\"k\">(</span> cells <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> minWidth <span class=\"k\">=</span> Number<span class=\"k\">.</span>MAX_VALUE<span class=\"k\">;</span>","","        <span class=\"k\">for</span><span class=\"k\">(</span> <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> curCell<span class=\"k\">;</span> curCell <span class=\"k\">=</span> cells<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            minWidth <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span> minWidth<span class=\"k\">,</span> curCell<span class=\"k\">.</span>width <span class=\"k\">||</span> getTableCellWidth<span class=\"k\">(</span> curCell <span class=\"k\">)</span> <span class=\"k\">);</span>","","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> minWidth<span class=\"k\">;</span>","","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> correctChangeValue<span class=\"k\">(</span> changeValue<span class=\"k\">,</span> relatedCell<span class=\"k\">,</span> cells <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">//&#20026;&#21333;&#20803;&#26684;&#30340;paading&#39044;&#30041;&#31354;&#38388;</span>","        changeValue <span class=\"k\">-=</span> getTabcellSpace<span class=\"k\">();</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> changeValue <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        changeValue <span class=\"k\">-=</span> getTableCellWidth<span class=\"k\">(</span> relatedCell <span class=\"k\">);</span>","","        <span class=\"c\">//&#30830;&#23450;&#26041;&#21521;</span>","        <span class=\"k\">var</span> direction <span class=\"k\">=</span> changeValue <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">'left'</span><span class=\"k\">:</span><span class=\"s\">'right'</span><span class=\"k\">;</span>","","        changeValue <span class=\"k\">=</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span>changeValue<span class=\"k\">);</span>","","        <span class=\"c\">//&#21482;&#20851;&#24515;&#38750;&#26368;&#21518;&#19968;&#20010;&#21333;&#20803;&#26684;&#23601;&#21487;&#20197;</span>","        utils<span class=\"k\">.</span>each<span class=\"k\">(</span> cells<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> cellGroup <span class=\"k\">)</span><span class=\"k\">{</span>","","            <span class=\"k\">var</span> curCell <span class=\"k\">=</span> cellGroup<span class=\"k\">[</span>direction<span class=\"k\">];</span>","","            <span class=\"c\">//&#20026;&#21333;&#20803;&#26684;&#20445;&#30041;&#26368;&#23567;&#31354;&#38388;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span> curCell <span class=\"k\">)</span> <span class=\"k\">{</span>","                changeValue <span class=\"k\">=</span> Math<span class=\"k\">.</span>min<span class=\"k\">(</span> changeValue<span class=\"k\">,</span> getTableCellWidth<span class=\"k\">(</span> curCell <span class=\"k\">)-</span>cellMinWidth <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","","        <span class=\"k\">}</span> <span class=\"k\">);</span>","","","        <span class=\"c\">//&#20462;&#27491;&#36234;&#30028;</span>","        changeValue <span class=\"k\">=</span> changeValue <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> changeValue<span class=\"k\">;</span>","","        <span class=\"k\">return</span> direction <span class=\"k\">===</span> <span class=\"s\">'left'</span> <span class=\"k\">?</span> <span class=\"k\">-</span>changeValue <span class=\"k\">:</span> changeValue<span class=\"k\">;</span>","","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> getTableCellWidth<span class=\"k\">(</span> cell <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> width <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            <span class=\"c\">//&#20559;&#31227;&#32416;&#27491;&#37327;</span>","            offset <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            width <span class=\"k\">=</span> cell<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> getTabcellSpace<span class=\"k\">();</span>","","        <span class=\"c\">//&#26368;&#21518;&#19968;&#20010;&#33410;&#28857;&#32416;&#27491;&#19968;&#19979;</span>","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>cell<span class=\"k\">.</span>nextSibling <span class=\"k\">)</span> <span class=\"k\">{</span>","","            width <span class=\"k\">-=</span> getTableCellOffset<span class=\"k\">(</span> cell <span class=\"k\">);</span>","","        <span class=\"k\">}</span>","","        width <span class=\"k\">=</span> width <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> width<span class=\"k\">;</span>","","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            cell<span class=\"k\">.</span>width <span class=\"k\">=</span> width<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span><span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> width<span class=\"k\">;</span>","","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#33719;&#21462;&#21333;&#20803;&#26684;&#25152;&#22312;&#34920;&#26684;&#30340;&#26368;&#26411;&#21333;&#20803;&#26684;&#30340;&#20559;&#31227;&#37327;</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getTableCellOffset<span class=\"k\">(</span> cell <span class=\"k\">)</span> <span class=\"k\">{</span>","","        tab <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span> cell<span class=\"k\">,</span> <span class=\"s\">\"table\"</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">);</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> tab<span class=\"k\">.</span>offsetVal <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> prev <span class=\"k\">=</span> cell<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","","            <span class=\"k\">if</span><span class=\"k\">(</span> prev <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">//&#26368;&#21518;&#19968;&#20010;&#21333;&#20803;&#26684;&#21644;&#21069;&#19968;&#20010;&#21333;&#20803;&#26684;&#30340;width diff&#32467;&#26524; &#22914;&#26524;&#24688;&#22909;&#20026;&#19968;&#20010;border width&#65292; &#21017;&#26465;&#20214;&#25104;&#31435;</span>","                tab<span class=\"k\">.</span>offsetVal <span class=\"k\">=</span> cell<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> prev<span class=\"k\">.</span>offsetWidth <span class=\"k\">===</span> UT<span class=\"k\">.</span>borderWidth <span class=\"k\">?</span> UT<span class=\"k\">.</span>borderWidth <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                tab<span class=\"k\">.</span>offsetVal <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> tab<span class=\"k\">.</span>offsetVal<span class=\"k\">;</span>","","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> getTabcellSpace<span class=\"k\">()</span> <span class=\"k\">{</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> UT<span class=\"k\">.</span>tabcellSpace <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> cell <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">,</span>","                tab <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"table\"</span><span class=\"k\">),</span>","                tbody <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"tbody\"</span><span class=\"k\">),</span>","                trow <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"tr\"</span><span class=\"k\">),</span>","                tabcell <span class=\"k\">=</span> me<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"td\"</span><span class=\"k\">),</span>","                mirror <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","            tabcell<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"s\">'border: 0;'</span><span class=\"k\">;</span>","            tabcell<span class=\"k\">.</span>width <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","            trow<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> tabcell <span class=\"k\">);</span>","            trow<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> mirror <span class=\"k\">=</span> tabcell<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","","            tbody<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> trow <span class=\"k\">);</span>","","            tab<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> tbody <span class=\"k\">);</span>","","            tab<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"s\">\"visibility: hidden;\"</span><span class=\"k\">;</span>","","            me<span class=\"k\">.</span>body<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> tab <span class=\"k\">);</span>","","            UT<span class=\"k\">.</span>paddingSpace <span class=\"k\">=</span> tabcell<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> tmpTabWidth <span class=\"k\">=</span> tab<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","","            tabcell<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","            mirror<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"s\">''</span><span class=\"k\">;</span>","","            UT<span class=\"k\">.</span>borderWidth <span class=\"k\">=</span> <span class=\"k\">(</span> tab<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> tmpTabWidth <span class=\"k\">)</span> <span class=\"k\">/</span> <span class=\"s\">3</span><span class=\"k\">;</span>","","            UT<span class=\"k\">.</span>tabcellSpace <span class=\"k\">=</span> UT<span class=\"k\">.</span>paddingSpace <span class=\"k\">+</span> UT<span class=\"k\">.</span>borderWidth<span class=\"k\">;</span>","","            me<span class=\"k\">.</span>body<span class=\"k\">.</span>removeChild<span class=\"k\">(</span> tab <span class=\"k\">);</span>","","        <span class=\"k\">}</span>","","        getTabcellSpace <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span><span class=\"k\">{</span> <span class=\"k\">return</span> UT<span class=\"k\">.</span>tabcellSpace<span class=\"k\">;</span> <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> UT<span class=\"k\">.</span>tabcellSpace<span class=\"k\">;</span>","","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> getDragLine<span class=\"k\">(</span>editor<span class=\"k\">,</span> doc<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>mousedown<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span>","        dragLine <span class=\"k\">=</span> editor<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"div\"</span><span class=\"k\">);</span>","        domUtils<span class=\"k\">.</span>setAttributes<span class=\"k\">(</span>dragLine<span class=\"k\">,</span> <span class=\"k\">{</span>","            id<span class=\"k\">:</span><span class=\"s\">\"ue_tableDragLine\"</span><span class=\"k\">,</span>","            unselectable<span class=\"k\">:</span><span class=\"s\">'on'</span><span class=\"k\">,</span>","            contenteditable<span class=\"k\">:</span><span class=\"k\">false</span><span class=\"k\">,</span>","            <span class=\"s\">'onresizestart'</span><span class=\"k\">:</span><span class=\"s\">'return false'</span><span class=\"k\">,</span>","            <span class=\"s\">'ondragstart'</span><span class=\"k\">:</span><span class=\"s\">'return false'</span><span class=\"k\">,</span>","            <span class=\"s\">'onselectstart'</span><span class=\"k\">:</span><span class=\"s\">'return false'</span><span class=\"k\">,</span>","            style<span class=\"k\">:</span><span class=\"s\">\"background-color:blue;position:absolute;padding:0;margin:0;background-image:none;border:0px none;opacity:0;filter:alpha(opacity=0)\"</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","        editor<span class=\"k\">.</span>body<span class=\"k\">.</span>appendChild<span class=\"k\">(</span>dragLine<span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> hideDragLine<span class=\"k\">(</span>editor<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span>mousedown<span class=\"k\">)</span><span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> line<span class=\"k\">;</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span>line <span class=\"k\">=</span> editor<span class=\"k\">.</span>document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span><span class=\"s\">'ue_tableDragLine'</span><span class=\"k\">))</span> <span class=\"k\">{</span>","            domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>line<span class=\"k\">)</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#20381;&#25454;state&#65288;v|h&#65289;&#22312;cell&#20301;&#32622;&#26174;&#31034;&#27178;&#32447;</span>","<span class=\"c\">     * @param state</span>","<span class=\"c\">     * @param cell</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> showDragLineAt<span class=\"k\">(</span>state<span class=\"k\">,</span> cell<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(!</span>cell<span class=\"k\">)</span> <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">var</span> table <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>cell<span class=\"k\">,</span> <span class=\"s\">\"table\"</span><span class=\"k\">),</span>","            caption <span class=\"k\">=</span> table<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">'caption'</span><span class=\"k\">),</span>","            width <span class=\"k\">=</span> table<span class=\"k\">.</span>offsetWidth<span class=\"k\">,</span>","            height <span class=\"k\">=</span> table<span class=\"k\">.</span>offsetHeight <span class=\"k\">-</span> <span class=\"k\">(</span>caption<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> caption<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>offsetHeight <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">),</span>","            tablePos <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>table<span class=\"k\">),</span>","            cellPos <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span>cell<span class=\"k\">),</span> css<span class=\"k\">;</span>","        <span class=\"k\">switch</span> <span class=\"k\">(</span>state<span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">case</span> <span class=\"s\">\"h\"</span><span class=\"k\">:</span>","                css <span class=\"k\">=</span> <span class=\"s\">'height:'</span> <span class=\"k\">+</span> height <span class=\"k\">+</span> <span class=\"s\">'px;top:'</span> <span class=\"k\">+</span> <span class=\"k\">(</span>tablePos<span class=\"k\">.</span>y <span class=\"k\">+</span> <span class=\"k\">(</span>caption<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> caption<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>offsetHeight <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">))</span> <span class=\"k\">+</span> <span class=\"s\">'px;left:'</span> <span class=\"k\">+</span> <span class=\"k\">(</span>cellPos<span class=\"k\">.</span>x <span class=\"k\">+</span> cell<span class=\"k\">.</span>offsetWidth<span class=\"k\">);</span>","                dragLine<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> css <span class=\"k\">+</span> <span class=\"s\">'px;position: absolute;display:block;background-color:blue;width:1px;border:0; color:blue;opacity:.3;filter:alpha(opacity=30)'</span><span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">case</span> <span class=\"s\">\"v\"</span><span class=\"k\">:</span>","                css <span class=\"k\">=</span> <span class=\"s\">'width:'</span> <span class=\"k\">+</span> width <span class=\"k\">+</span> <span class=\"s\">'px;left:'</span> <span class=\"k\">+</span> tablePos<span class=\"k\">.</span>x <span class=\"k\">+</span> <span class=\"s\">'px;top:'</span> <span class=\"k\">+</span> <span class=\"k\">(</span>cellPos<span class=\"k\">.</span>y <span class=\"k\">+</span> cell<span class=\"k\">.</span>offsetHeight <span class=\"k\">);</span>","                <span class=\"c\">//&#24517;&#39035;&#21152;&#19978;border:0&#21644;color:blue&#65292;&#21542;&#21017;&#20302;&#29256;ie&#19981;&#25903;&#25345;&#32972;&#26223;&#33394;&#26174;&#31034;</span>","                dragLine<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> css <span class=\"k\">+</span> <span class=\"s\">'px;overflow:hidden;position: absolute;display:block;background-color:blue;height:1px;border:0;color:blue;opacity:.2;filter:alpha(opacity=20)'</span><span class=\"k\">;</span>","                <span class=\"k\">break</span><span class=\"k\">;</span>","            <span class=\"k\">default</span><span class=\"k\">:</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#24403;&#34920;&#26684;&#36793;&#26694;&#39068;&#33394;&#20026;&#30333;&#33394;&#26102;&#35774;&#32622;&#20026;&#34394;&#32447;,true&#20026;&#28155;&#21152;&#34394;&#32447;</span>","<span class=\"c\">     * @param editor</span>","<span class=\"c\">     * @param flag</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> switchBorderColor<span class=\"k\">(</span>editor<span class=\"k\">,</span> flag<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tableArr <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>editor<span class=\"k\">.</span>body<span class=\"k\">,</span> <span class=\"s\">\"table\"</span><span class=\"k\">),</span> color<span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span><span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> node<span class=\"k\">;</span> node <span class=\"k\">=</span> tableArr<span class=\"k\">[</span>i<span class=\"k\">++];)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> td <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">\"td\"</span><span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span>td<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">])</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span>flag<span class=\"k\">)</span> <span class=\"k\">{</span>","                    color <span class=\"k\">=</span> <span class=\"k\">(</span>td<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>style<span class=\"k\">.</span>borderColor<span class=\"k\">).</span>replace<span class=\"k\">(</span><span class=\"s\">/\\s/g</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span><span class=\"s\">/(#ffffff)|(rgb\\(255,f55,255\\))/ig</span><span class=\"k\">.</span>test<span class=\"k\">(</span>color<span class=\"k\">))</span>","                        domUtils<span class=\"k\">.</span>addClass<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">\"noBorderTable\"</span><span class=\"k\">)</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    domUtils<span class=\"k\">.</span>removeClasses<span class=\"k\">(</span>node<span class=\"k\">,</span> <span class=\"s\">\"noBorderTable\"</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> getTableWidth<span class=\"k\">(</span>editor<span class=\"k\">,</span> needIEHack<span class=\"k\">,</span> defaultValue<span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> body <span class=\"k\">=</span> editor<span class=\"k\">.</span>body<span class=\"k\">;</span>","        <span class=\"k\">return</span> body<span class=\"k\">.</span>offsetWidth <span class=\"k\">-</span> <span class=\"k\">(</span>needIEHack <span class=\"k\">?</span> parseInt<span class=\"k\">(</span>domUtils<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span>body<span class=\"k\">,</span> <span class=\"s\">'margin-left'</span><span class=\"k\">),</span> <span class=\"s\">10</span><span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">-</span> defaultValue<span class=\"k\">.</span>tableBorder <span class=\"k\">*</span> <span class=\"s\">2</span> <span class=\"k\">-</span> <span class=\"k\">(</span>editor<span class=\"k\">.</span>options<span class=\"k\">.</span>offsetWidth <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\">     * &#33719;&#21462;&#24403;&#21069;&#25302;&#21160;&#30340;&#21333;&#20803;&#26684;</span>","<span class=\"c\">     */</span>","    <span class=\"k\">function</span> getTargetTd<span class=\"k\">(</span>editor<span class=\"k\">,</span> evt<span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> target <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>findParentByTagName<span class=\"k\">(</span>evt<span class=\"k\">.</span>target <span class=\"k\">||</span> evt<span class=\"k\">.</span>srcElement<span class=\"k\">,</span> <span class=\"k\">[</span><span class=\"s\">\"td\"</span><span class=\"k\">,</span> <span class=\"s\">\"th\"</span><span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">),</span>","            dir <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>target <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        dir <span class=\"k\">=</span> getRelation<span class=\"k\">(</span> target<span class=\"k\">,</span> mouseCoords<span class=\"k\">(</span> evt <span class=\"k\">)</span> <span class=\"k\">);</span>","","        <span class=\"c\">//&#22914;&#26524;&#26377;&#21069;&#19968;&#20010;&#33410;&#28857;&#65292; &#38656;&#35201;&#20570;&#19968;&#20010;&#20462;&#27491;&#65292; &#21542;&#21017;&#21487;&#33021;&#20250;&#24471;&#21040;&#19968;&#20010;&#38169;&#35823;&#30340;td</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> <span class=\"k\">!</span>target <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span><span class=\"k\">(</span> dir <span class=\"k\">===</span> <span class=\"s\">'h1'</span> <span class=\"k\">&amp;&amp;</span> target<span class=\"k\">.</span>previousSibling <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> position <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span> target<span class=\"k\">),</span>","                cellWidth <span class=\"k\">=</span> target<span class=\"k\">.</span>offsetWidth<span class=\"k\">;</span>","","            <span class=\"k\">if</span><span class=\"k\">(</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span> position<span class=\"k\">.</span>x <span class=\"k\">+</span> cellWidth <span class=\"k\">-</span> evt<span class=\"k\">.</span>clientX <span class=\"k\">)</span> <span class=\"k\">&gt;</span> cellWidth <span class=\"k\">/</span> <span class=\"s\">3</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                target <span class=\"k\">=</span> target<span class=\"k\">.</span>previousSibling<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"k\">(</span> dir <span class=\"k\">===</span> <span class=\"s\">'v1'</span> <span class=\"k\">&amp;&amp;</span> target<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>previousSibling <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> position <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getXY<span class=\"k\">(</span> target<span class=\"k\">),</span>","                cellHeight <span class=\"k\">=</span> target<span class=\"k\">.</span>offsetHeight<span class=\"k\">;</span>","","            <span class=\"k\">if</span><span class=\"k\">(</span> Math<span class=\"k\">.</span>abs<span class=\"k\">(</span> position<span class=\"k\">.</span>y <span class=\"k\">+</span> cellHeight <span class=\"k\">-</span> evt<span class=\"k\">.</span>clientY <span class=\"k\">)</span> <span class=\"k\">&gt;</span> cellHeight <span class=\"k\">/</span> <span class=\"s\">3</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                target <span class=\"k\">=</span> target<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>previousSibling<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span>","","","        <span class=\"c\">//&#25490;&#38500;&#20102;&#38750;td&#20869;&#37096;&#20197;&#21450;&#29992;&#20110;&#20195;&#30721;&#39640;&#20142;&#37096;&#20998;&#30340;td</span>","        <span class=\"k\">return</span> target <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!(</span>editor<span class=\"k\">.</span>fireEvent<span class=\"k\">(</span><span class=\"s\">\"excludetable\"</span><span class=\"k\">,</span> target<span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">)</span> <span class=\"k\">?</span> target <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","<span class=\"k\">}</span><span class=\"k\">;</span>"];
_$jscoverage['plugins/table.action.js'][8]++;
UE.plugins.table = (function () {
  _$jscoverage['plugins/table.action.js'][9]++;
  var me = this, tabTimer = null, tableDragTimer = null, tableResizeTimer = null, cellMinWidth = 5, isInResizeBuffer = false, cellBorderWidth = 5, offsetOfTableCell = 10, singleClickState = 0, userActionStatus = null, dblclickTime = 360, UT = UE.UETable, getUETable = (function (tdOrTable) {
  _$jscoverage['plugins/table.action.js'][29]++;
  return UT.getUETable(tdOrTable);
}), getUETableBySelected = (function (editor) {
  _$jscoverage['plugins/table.action.js'][32]++;
  return UT.getUETableBySelected(editor);
}), getDefaultValue = (function (editor, table) {
  _$jscoverage['plugins/table.action.js'][35]++;
  return UT.getDefaultValue(editor, table);
}), removeSelectedClass = (function (cells) {
  _$jscoverage['plugins/table.action.js'][38]++;
  return UT.removeSelectedClass(cells);
});
  _$jscoverage['plugins/table.action.js'][41]++;
  function showError(e) {
}
  _$jscoverage['plugins/table.action.js'][44]++;
  me.ready((function () {
  _$jscoverage['plugins/table.action.js'][45]++;
  var me = this;
  _$jscoverage['plugins/table.action.js'][46]++;
  var orgGetText = me.selection.getText;
  _$jscoverage['plugins/table.action.js'][47]++;
  me.selection.getText = (function () {
  _$jscoverage['plugins/table.action.js'][48]++;
  var table = getUETableBySelected(me);
  _$jscoverage['plugins/table.action.js'][49]++;
  if (table) {
    _$jscoverage['plugins/table.action.js'][50]++;
    var str = "";
    _$jscoverage['plugins/table.action.js'][51]++;
    utils.each(table.selectedTds, (function (td) {
  _$jscoverage['plugins/table.action.js'][52]++;
  str += td[(browser.ie? "innerText": "textContent")];
}));
    _$jscoverage['plugins/table.action.js'][54]++;
    return str;
  }
  else {
    _$jscoverage['plugins/table.action.js'][56]++;
    return orgGetText.call(me.selection);
  }
});
}));
  _$jscoverage['plugins/table.action.js'][63]++;
  var startTd = null, currentTd = null, onDrag = "", onBorder = false, dragButton = null, dragOver = false, dragLine = null, dragTd = null;
  _$jscoverage['plugins/table.action.js'][72]++;
  var mousedown = false, needIEHack = true;
  _$jscoverage['plugins/table.action.js'][76]++;
  me.setOpt({"maxColNum": 20, "maxRowNum": 100, "defaultCols": 5, "defaultRows": 5, "tdvalign": "top", "cursorpath": (me.options.UEDITOR_HOME_URL + "themes/default/images/cursor_"), "tableDragable": false, "classList": ["ue-table-interlace-color-single", "ue-table-interlace-color-double"]});
  _$jscoverage['plugins/table.action.js'][86]++;
  me.getUETable = getUETable;
  _$jscoverage['plugins/table.action.js'][87]++;
  var commands = {"deletetable": 1, "inserttable": 1, "cellvalign": 1, "insertcaption": 1, "deletecaption": 1, "inserttitle": 1, "deletetitle": 1, "mergeright": 1, "mergedown": 1, "mergecells": 1, "insertrow": 1, "insertrownext": 1, "deleterow": 1, "insertcol": 1, "insertcolnext": 1, "deletecol": 1, "splittocells": 1, "splittorows": 1, "splittocols": 1, "adaptbytext": 1, "adaptbywindow": 1, "adaptbycustomer": 1, "insertparagraph": 1, "insertparagraphbeforetable": 1, "averagedistributecol": 1, "averagedistributerow": 1};
  _$jscoverage['plugins/table.action.js'][115]++;
  me.ready((function () {
  _$jscoverage['plugins/table.action.js'][116]++;
  utils.cssRule("table", ".selectTdClass{background-color:#edf5fa !important}table.noBorderTable td,table.noBorderTable th,table.noBorderTable caption{border:1px dashed #ddd !important}table{margin-bottom:10px;border-collapse:collapse;display:table;}td,th{padding: 5px 10px;border: 1px solid #DDD;}caption{border:1px dashed #DDD;border-bottom:0;padding:3px;text-align:center;}th{border-top:2px solid #BBB;background:#F7F7F7;}.ue-table-interlace-color-single{ background-color: #fcfcfc; } .ue-table-interlace-color-double{ background-color: #f7faff; }td p{margin:0;padding:0;}", me.document);
  _$jscoverage['plugins/table.action.js'][128]++;
  var tableCopyList, isFullCol, isFullRow;
  _$jscoverage['plugins/table.action.js'][130]++;
  me.addListener("keydown", (function (cmd, evt) {
  _$jscoverage['plugins/table.action.js'][131]++;
  var me = this;
  _$jscoverage['plugins/table.action.js'][132]++;
  var keyCode = (evt.keyCode || evt.which);
  _$jscoverage['plugins/table.action.js'][134]++;
  if ((keyCode == 8)) {
    _$jscoverage['plugins/table.action.js'][136]++;
    var ut = getUETableBySelected(me);
    _$jscoverage['plugins/table.action.js'][137]++;
    if ((ut && ut.selectedTds.length)) {
      _$jscoverage['plugins/table.action.js'][139]++;
      if (ut.isFullCol()) {
        _$jscoverage['plugins/table.action.js'][140]++;
        me.execCommand("deletecol");
      }
      else {
        _$jscoverage['plugins/table.action.js'][141]++;
        if (ut.isFullRow()) {
          _$jscoverage['plugins/table.action.js'][142]++;
          me.execCommand("deleterow");
        }
        else {
          _$jscoverage['plugins/table.action.js'][144]++;
          me.fireEvent("delcells");
        }
      }
      _$jscoverage['plugins/table.action.js'][146]++;
      domUtils.preventDefault(evt);
    }
    _$jscoverage['plugins/table.action.js'][149]++;
    var caption = domUtils.findParentByTagName(me.selection.getStart(), "caption", true), range = me.selection.getRange();
    _$jscoverage['plugins/table.action.js'][151]++;
    if ((range.collapsed && caption && isEmptyBlock(caption))) {
      _$jscoverage['plugins/table.action.js'][152]++;
      me.fireEvent("saveScene");
      _$jscoverage['plugins/table.action.js'][153]++;
      var table = caption.parentNode;
      _$jscoverage['plugins/table.action.js'][154]++;
      domUtils.remove(caption);
      _$jscoverage['plugins/table.action.js'][155]++;
      if (table) {
        _$jscoverage['plugins/table.action.js'][156]++;
        range.setStart(table.rows[0].cells[0], 0).setCursor(false, true);
      }
      _$jscoverage['plugins/table.action.js'][158]++;
      me.fireEvent("saveScene");
    }
  }
  _$jscoverage['plugins/table.action.js'][163]++;
  if ((keyCode == 46)) {
    _$jscoverage['plugins/table.action.js'][165]++;
    ut = getUETableBySelected(me);
    _$jscoverage['plugins/table.action.js'][166]++;
    if (ut) {
      _$jscoverage['plugins/table.action.js'][167]++;
      me.fireEvent("saveScene");
      _$jscoverage['plugins/table.action.js'][168]++;
      for (var i = 0, ci; (ci = ut.selectedTds[(i++)]);) {
        _$jscoverage['plugins/table.action.js'][169]++;
        domUtils.fillNode(me.document, ci);
}
      _$jscoverage['plugins/table.action.js'][171]++;
      me.fireEvent("saveScene");
      _$jscoverage['plugins/table.action.js'][172]++;
      domUtils.preventDefault(evt);
    }
  }
  _$jscoverage['plugins/table.action.js'][177]++;
  if ((keyCode == 13)) {
    _$jscoverage['plugins/table.action.js'][179]++;
    var rng = me.selection.getRange(), caption = domUtils.findParentByTagName(rng.startContainer, "caption", true);
    _$jscoverage['plugins/table.action.js'][181]++;
    if (caption) {
      _$jscoverage['plugins/table.action.js'][182]++;
      var table = domUtils.findParentByTagName(caption, "table");
      _$jscoverage['plugins/table.action.js'][183]++;
      if ((! rng.collapsed)) {
        _$jscoverage['plugins/table.action.js'][185]++;
        rng.deleteContents();
        _$jscoverage['plugins/table.action.js'][186]++;
        me.fireEvent("saveScene");
      }
      else {
        _$jscoverage['plugins/table.action.js'][188]++;
        if (caption) {
          _$jscoverage['plugins/table.action.js'][189]++;
          rng.setStart(table.rows[0].cells[0], 0).setCursor(false, true);
        }
      }
      _$jscoverage['plugins/table.action.js'][192]++;
      domUtils.preventDefault(evt);
      _$jscoverage['plugins/table.action.js'][193]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][195]++;
    if (rng.collapsed) {
      _$jscoverage['plugins/table.action.js'][196]++;
      var table = domUtils.findParentByTagName(rng.startContainer, "table");
      _$jscoverage['plugins/table.action.js'][197]++;
      if (table) {
        _$jscoverage['plugins/table.action.js'][198]++;
        var cell = table.rows[0].cells[0], start = domUtils.findParentByTagName(me.selection.getStart(), ["td", "th"], true), preNode = table.previousSibling;
        _$jscoverage['plugins/table.action.js'][201]++;
        if (((cell === start) && ((! preNode) || ((preNode.nodeType == 1) && (preNode.tagName == "TABLE"))) && domUtils.isStartInblock(rng))) {
          _$jscoverage['plugins/table.action.js'][202]++;
          var first = domUtils.findParent(me.selection.getStart(), (function (n) {
  _$jscoverage['plugins/table.action.js'][202]++;
  return domUtils.isBlockElm(n);
}), true);
          _$jscoverage['plugins/table.action.js'][203]++;
          if ((first && (/t(h|d)/i.test(first.tagName) || (first === start.firstChild)))) {
            _$jscoverage['plugins/table.action.js'][204]++;
            me.execCommand("insertparagraphbeforetable");
            _$jscoverage['plugins/table.action.js'][205]++;
            domUtils.preventDefault(evt);
          }
        }
      }
    }
  }
  _$jscoverage['plugins/table.action.js'][213]++;
  if (((evt.ctrlKey || evt.metaKey) && (evt.keyCode == "67"))) {
    _$jscoverage['plugins/table.action.js'][214]++;
    tableCopyList = null;
    _$jscoverage['plugins/table.action.js'][215]++;
    var ut = getUETableBySelected(me);
    _$jscoverage['plugins/table.action.js'][216]++;
    if (ut) {
      _$jscoverage['plugins/table.action.js'][217]++;
      var tds = ut.selectedTds;
      _$jscoverage['plugins/table.action.js'][218]++;
      isFullCol = ut.isFullCol();
      _$jscoverage['plugins/table.action.js'][219]++;
      isFullRow = ut.isFullRow();
      _$jscoverage['plugins/table.action.js'][220]++;
      tableCopyList = [[ut.cloneCell(tds[0], null, true)]];
      _$jscoverage['plugins/table.action.js'][223]++;
      for (var i = 1, ci = ci; (ci = tds[i]); (i++)) {
        _$jscoverage['plugins/table.action.js'][224]++;
        if ((ci.parentNode !== tds[(i - 1)].parentNode)) {
          _$jscoverage['plugins/table.action.js'][225]++;
          tableCopyList.push([ut.cloneCell(ci, null, true)]);
        }
        else {
          _$jscoverage['plugins/table.action.js'][227]++;
          tableCopyList[(tableCopyList.length - 1)].push(ut.cloneCell(ci, null, true));
        }
}
    }
  }
}));
  _$jscoverage['plugins/table.action.js'][234]++;
  me.addListener("tablehasdeleted", (function () {
  _$jscoverage['plugins/table.action.js'][235]++;
  toggleDraggableState(this, false, "", null);
  _$jscoverage['plugins/table.action.js'][236]++;
  if (dragButton) {
    _$jscoverage['plugins/table.action.js'][236]++;
    domUtils.remove(dragButton);
  }
}));
  _$jscoverage['plugins/table.action.js'][239]++;
  me.addListener("beforepaste", (function (cmd, html) {
  _$jscoverage['plugins/table.action.js'][240]++;
  var me = this;
  _$jscoverage['plugins/table.action.js'][241]++;
  var rng = me.selection.getRange();
  _$jscoverage['plugins/table.action.js'][242]++;
  if (domUtils.findParentByTagName(rng.startContainer, "caption", true)) {
    _$jscoverage['plugins/table.action.js'][243]++;
    var div = me.document.createElement("div");
    _$jscoverage['plugins/table.action.js'][244]++;
    div.innerHTML = html.html;
    _$jscoverage['plugins/table.action.js'][245]++;
    html.html = div[(browser.ie? "innerText": "textContent")];
    _$jscoverage['plugins/table.action.js'][246]++;
    return;
  }
  _$jscoverage['plugins/table.action.js'][248]++;
  var table = getUETableBySelected(me);
  _$jscoverage['plugins/table.action.js'][249]++;
  if (tableCopyList) {
    _$jscoverage['plugins/table.action.js'][250]++;
    me.fireEvent("saveScene");
    _$jscoverage['plugins/table.action.js'][251]++;
    var rng = me.selection.getRange();
    _$jscoverage['plugins/table.action.js'][252]++;
    var td = domUtils.findParentByTagName(rng.startContainer, ["td", "th"], true), tmpNode, preNode;
    _$jscoverage['plugins/table.action.js'][253]++;
    if (td) {
      _$jscoverage['plugins/table.action.js'][254]++;
      var ut = getUETable(td);
      _$jscoverage['plugins/table.action.js'][255]++;
      if (isFullRow) {
        _$jscoverage['plugins/table.action.js'][256]++;
        var rowIndex = ut.getCellInfo(td).rowIndex;
        _$jscoverage['plugins/table.action.js'][257]++;
        if ((td.tagName == "TH")) {
          _$jscoverage['plugins/table.action.js'][258]++;
          (rowIndex++);
        }
        _$jscoverage['plugins/table.action.js'][260]++;
        for (var i = 0, ci; (ci = tableCopyList[(i++)]);) {
          _$jscoverage['plugins/table.action.js'][261]++;
          var tr = ut.insertRow((rowIndex++), "td");
          _$jscoverage['plugins/table.action.js'][262]++;
          for (var j = 0, cj; (cj = ci[j]); (j++)) {
            _$jscoverage['plugins/table.action.js'][263]++;
            var cell = tr.cells[j];
            _$jscoverage['plugins/table.action.js'][264]++;
            if ((! cell)) {
              _$jscoverage['plugins/table.action.js'][265]++;
              cell = tr.insertCell(j);
            }
            _$jscoverage['plugins/table.action.js'][267]++;
            cell.innerHTML = cj.innerHTML;
            _$jscoverage['plugins/table.action.js'][268]++;
            (cj.getAttribute("width") && cell.setAttribute("width", cj.getAttribute("width")));
            _$jscoverage['plugins/table.action.js'][269]++;
            (cj.getAttribute("vAlign") && cell.setAttribute("vAlign", cj.getAttribute("vAlign")));
            _$jscoverage['plugins/table.action.js'][270]++;
            (cj.getAttribute("align") && cell.setAttribute("align", cj.getAttribute("align")));
            _$jscoverage['plugins/table.action.js'][271]++;
            (cj.style.cssText && (cell.style.cssText = cj.style.cssText));
}
          _$jscoverage['plugins/table.action.js'][273]++;
          for (var j = 0, cj = cj; (cj = tr.cells[j]); (j++)) {
            _$jscoverage['plugins/table.action.js'][274]++;
            if ((! ci[j])) {
              _$jscoverage['plugins/table.action.js'][275]++;
              break;
            }
            _$jscoverage['plugins/table.action.js'][276]++;
            cj.innerHTML = ci[j].innerHTML;
            _$jscoverage['plugins/table.action.js'][277]++;
            (ci[j].getAttribute("width") && cj.setAttribute("width", ci[j].getAttribute("width")));
            _$jscoverage['plugins/table.action.js'][278]++;
            (ci[j].getAttribute("vAlign") && cj.setAttribute("vAlign", ci[j].getAttribute("vAlign")));
            _$jscoverage['plugins/table.action.js'][279]++;
            (ci[j].getAttribute("align") && cj.setAttribute("align", ci[j].getAttribute("align")));
            _$jscoverage['plugins/table.action.js'][280]++;
            (ci[j].style.cssText && (cj.style.cssText = ci[j].style.cssText));
}
}
      }
      else {
        _$jscoverage['plugins/table.action.js'][284]++;
        if (isFullCol) {
          _$jscoverage['plugins/table.action.js'][285]++;
          cellInfo = ut.getCellInfo(td);
          _$jscoverage['plugins/table.action.js'][286]++;
          var maxColNum = 0;
          _$jscoverage['plugins/table.action.js'][287]++;
          for (var j = 0, ci = tableCopyList[0], cj = cj; (cj = ci[(j++)]);) {
            _$jscoverage['plugins/table.action.js'][288]++;
            maxColNum += (cj.colSpan || 1);
}
          _$jscoverage['plugins/table.action.js'][290]++;
          me.__hasEnterExecCommand = true;
          _$jscoverage['plugins/table.action.js'][291]++;
          for (i = 0; (i < maxColNum); (i++)) {
            _$jscoverage['plugins/table.action.js'][292]++;
            me.execCommand("insertcol");
}
          _$jscoverage['plugins/table.action.js'][294]++;
          me.__hasEnterExecCommand = false;
          _$jscoverage['plugins/table.action.js'][295]++;
          td = ut.table.rows[0].cells[cellInfo.cellIndex];
          _$jscoverage['plugins/table.action.js'][296]++;
          if ((td.tagName == "TH")) {
            _$jscoverage['plugins/table.action.js'][297]++;
            td = ut.table.rows[1].cells[cellInfo.cellIndex];
          }
        }
        _$jscoverage['plugins/table.action.js'][300]++;
        for (var i = 0, ci = ci; (ci = tableCopyList[(i++)]);) {
          _$jscoverage['plugins/table.action.js'][301]++;
          tmpNode = td;
          _$jscoverage['plugins/table.action.js'][302]++;
          for (var j = 0, cj = cj; (cj = ci[(j++)]);) {
            _$jscoverage['plugins/table.action.js'][303]++;
            if (td) {
              _$jscoverage['plugins/table.action.js'][304]++;
              td.innerHTML = cj.innerHTML;
              _$jscoverage['plugins/table.action.js'][306]++;
              (cj.getAttribute("width") && td.setAttribute("width", cj.getAttribute("width")));
              _$jscoverage['plugins/table.action.js'][307]++;
              (cj.getAttribute("vAlign") && td.setAttribute("vAlign", cj.getAttribute("vAlign")));
              _$jscoverage['plugins/table.action.js'][308]++;
              (cj.getAttribute("align") && td.setAttribute("align", cj.getAttribute("align")));
              _$jscoverage['plugins/table.action.js'][309]++;
              (cj.style.cssText && (td.style.cssText = cj.style.cssText));
              _$jscoverage['plugins/table.action.js'][310]++;
              preNode = td;
              _$jscoverage['plugins/table.action.js'][311]++;
              td = td.nextSibling;
            }
            else {
              _$jscoverage['plugins/table.action.js'][313]++;
              var cloneTd = cj.cloneNode(true);
              _$jscoverage['plugins/table.action.js'][314]++;
              domUtils.removeAttributes(cloneTd, ["class", "rowSpan", "colSpan"]);
              _$jscoverage['plugins/table.action.js'][316]++;
              preNode.parentNode.appendChild(cloneTd);
            }
}
          _$jscoverage['plugins/table.action.js'][319]++;
          td = ut.getNextCell(tmpNode, true, true);
          _$jscoverage['plugins/table.action.js'][320]++;
          if ((! tableCopyList[i])) {
            _$jscoverage['plugins/table.action.js'][321]++;
            break;
          }
          _$jscoverage['plugins/table.action.js'][322]++;
          if ((! td)) {
            _$jscoverage['plugins/table.action.js'][323]++;
            var cellInfo = ut.getCellInfo(tmpNode);
            _$jscoverage['plugins/table.action.js'][324]++;
            ut.table.insertRow(ut.table.rows.length);
            _$jscoverage['plugins/table.action.js'][325]++;
            ut.update();
            _$jscoverage['plugins/table.action.js'][326]++;
            td = ut.getVSideCell(tmpNode, true);
          }
}
      }
      _$jscoverage['plugins/table.action.js'][330]++;
      ut.update();
    }
    else {
      _$jscoverage['plugins/table.action.js'][332]++;
      table = me.document.createElement("table");
      _$jscoverage['plugins/table.action.js'][333]++;
      for (var i = 0, ci = ci; (ci = tableCopyList[(i++)]);) {
        _$jscoverage['plugins/table.action.js'][334]++;
        var tr = table.insertRow(table.rows.length);
        _$jscoverage['plugins/table.action.js'][335]++;
        for (var j = 0, cj = cj; (cj = ci[(j++)]);) {
          _$jscoverage['plugins/table.action.js'][336]++;
          cloneTd = UT.cloneCell(cj, null, true);
          _$jscoverage['plugins/table.action.js'][337]++;
          domUtils.removeAttributes(cloneTd, ["class"]);
          _$jscoverage['plugins/table.action.js'][338]++;
          tr.appendChild(cloneTd);
}
        _$jscoverage['plugins/table.action.js'][340]++;
        if (((j == 2) && (cloneTd.rowSpan > 1))) {
          _$jscoverage['plugins/table.action.js'][341]++;
          cloneTd.rowSpan = 1;
        }
}
      _$jscoverage['plugins/table.action.js'][345]++;
      var defaultValue = getDefaultValue(me), width = (me.body.offsetWidth - (needIEHack? (parseInt(domUtils.getComputedStyle(me.body, "margin-left"), 10) * 2): 0) - (defaultValue.tableBorder * 2) - (me.options.offsetWidth || 0));
      _$jscoverage['plugins/table.action.js'][348]++;
      me.execCommand("insertHTML", ("<table  " + ((isFullCol && isFullRow)? ("width=\"" + width + "\""): "") + ">" + table.innerHTML.replace(/>\s*</g, "><").replace(/\bth\b/gi, "td") + "</table>"));
    }
    _$jscoverage['plugins/table.action.js'][352]++;
    me.fireEvent("contentchange");
    _$jscoverage['plugins/table.action.js'][353]++;
    me.fireEvent("saveScene");
    _$jscoverage['plugins/table.action.js'][354]++;
    html.html = "";
    _$jscoverage['plugins/table.action.js'][355]++;
    return true;
  }
  else {
    _$jscoverage['plugins/table.action.js'][357]++;
    var div = me.document.createElement("div"), tables;
    _$jscoverage['plugins/table.action.js'][358]++;
    div.innerHTML = html.html;
    _$jscoverage['plugins/table.action.js'][359]++;
    tables = div.getElementsByTagName("table");
    _$jscoverage['plugins/table.action.js'][360]++;
    if (domUtils.findParentByTagName(me.selection.getStart(), "table")) {
      _$jscoverage['plugins/table.action.js'][361]++;
      utils.each(tables, (function (t) {
  _$jscoverage['plugins/table.action.js'][362]++;
  domUtils.remove(t);
}));
      _$jscoverage['plugins/table.action.js'][364]++;
      if (domUtils.findParentByTagName(me.selection.getStart(), "caption", true)) {
        _$jscoverage['plugins/table.action.js'][365]++;
        div.innerHTML = div[(browser.ie? "innerText": "textContent")];
      }
    }
    else {
      _$jscoverage['plugins/table.action.js'][368]++;
      utils.each(tables, (function (table) {
  _$jscoverage['plugins/table.action.js'][369]++;
  removeStyleSize(table, true);
  _$jscoverage['plugins/table.action.js'][370]++;
  domUtils.removeAttributes(table, ["style", "border"]);
  _$jscoverage['plugins/table.action.js'][371]++;
  utils.each(domUtils.getElementsByTagName(table, "td"), (function (td) {
  _$jscoverage['plugins/table.action.js'][372]++;
  if (isEmptyBlock(td)) {
    _$jscoverage['plugins/table.action.js'][373]++;
    domUtils.fillNode(me.document, td);
  }
  _$jscoverage['plugins/table.action.js'][375]++;
  removeStyleSize(td, true);
}));
}));
    }
    _$jscoverage['plugins/table.action.js'][380]++;
    html.html = div.innerHTML;
  }
}));
  _$jscoverage['plugins/table.action.js'][384]++;
  me.addListener("afterpaste", (function () {
  _$jscoverage['plugins/table.action.js'][385]++;
  utils.each(domUtils.getElementsByTagName(me.body, "table"), (function (table) {
  _$jscoverage['plugins/table.action.js'][386]++;
  if ((table.offsetWidth > me.body.offsetWidth)) {
    _$jscoverage['plugins/table.action.js'][387]++;
    var defaultValue = getDefaultValue(me, table);
    _$jscoverage['plugins/table.action.js'][388]++;
    table.style.width = ((me.body.offsetWidth - (needIEHack? (parseInt(domUtils.getComputedStyle(me.body, "margin-left"), 10) * 2): 0) - (defaultValue.tableBorder * 2) - (me.options.offsetWidth || 0)) + "px");
  }
}));
}));
  _$jscoverage['plugins/table.action.js'][392]++;
  me.addListener("blur", (function () {
  _$jscoverage['plugins/table.action.js'][393]++;
  tableCopyList = null;
}));
  _$jscoverage['plugins/table.action.js'][395]++;
  var timer;
  _$jscoverage['plugins/table.action.js'][396]++;
  me.addListener("keydown", (function () {
  _$jscoverage['plugins/table.action.js'][397]++;
  clearTimeout(timer);
  _$jscoverage['plugins/table.action.js'][398]++;
  timer = setTimeout((function () {
  _$jscoverage['plugins/table.action.js'][399]++;
  var rng = me.selection.getRange(), cell = domUtils.findParentByTagName(rng.startContainer, ["th", "td"], true);
  _$jscoverage['plugins/table.action.js'][401]++;
  if (cell) {
    _$jscoverage['plugins/table.action.js'][402]++;
    var table = cell.parentNode.parentNode.parentNode;
    _$jscoverage['plugins/table.action.js'][403]++;
    if ((table.offsetWidth > table.getAttribute("width"))) {
      _$jscoverage['plugins/table.action.js'][404]++;
      cell.style.wordBreak = "break-all";
    }
  }
}), 100);
}));
  _$jscoverage['plugins/table.action.js'][410]++;
  me.addListener("selectionchange", (function () {
  _$jscoverage['plugins/table.action.js'][411]++;
  toggleDraggableState(me, false, "", null);
}));
  _$jscoverage['plugins/table.action.js'][417]++;
  me.addListener("contentchange", (function () {
  _$jscoverage['plugins/table.action.js'][418]++;
  var me = this;
  _$jscoverage['plugins/table.action.js'][420]++;
  hideDragLine(me);
  _$jscoverage['plugins/table.action.js'][421]++;
  if (getUETableBySelected(me)) {
    _$jscoverage['plugins/table.action.js'][421]++;
    return;
  }
  _$jscoverage['plugins/table.action.js'][422]++;
  var rng = me.selection.getRange();
  _$jscoverage['plugins/table.action.js'][423]++;
  var start = rng.startContainer;
  _$jscoverage['plugins/table.action.js'][424]++;
  start = domUtils.findParentByTagName(start, ["td", "th"], true);
  _$jscoverage['plugins/table.action.js'][425]++;
  utils.each(domUtils.getElementsByTagName(me.document, "table"), (function (table) {
  _$jscoverage['plugins/table.action.js'][426]++;
  if ((me.fireEvent("excludetable", table) === true)) {
    _$jscoverage['plugins/table.action.js'][426]++;
    return;
  }
  _$jscoverage['plugins/table.action.js'][427]++;
  table.ueTable = new UT(table);
  _$jscoverage['plugins/table.action.js'][428]++;
  utils.each(domUtils.getElementsByTagName(me.document, "td"), (function (td) {
  _$jscoverage['plugins/table.action.js'][430]++;
  if ((domUtils.isEmptyBlock(td) && (td !== start))) {
    _$jscoverage['plugins/table.action.js'][431]++;
    domUtils.fillNode(me.document, td);
    _$jscoverage['plugins/table.action.js'][432]++;
    if ((browser.ie && (browser.version == 6))) {
      _$jscoverage['plugins/table.action.js'][433]++;
      td.innerHTML = "&nbsp;";
    }
  }
}));
  _$jscoverage['plugins/table.action.js'][437]++;
  utils.each(domUtils.getElementsByTagName(me.document, "th"), (function (th) {
  _$jscoverage['plugins/table.action.js'][438]++;
  if ((domUtils.isEmptyBlock(th) && (th !== start))) {
    _$jscoverage['plugins/table.action.js'][439]++;
    domUtils.fillNode(me.document, th);
    _$jscoverage['plugins/table.action.js'][440]++;
    if ((browser.ie && (browser.version == 6))) {
      _$jscoverage['plugins/table.action.js'][441]++;
      th.innerHTML = "&nbsp;";
    }
  }
}));
  _$jscoverage['plugins/table.action.js'][445]++;
  table.onmouseover = (function () {
  _$jscoverage['plugins/table.action.js'][446]++;
  me.fireEvent("tablemouseover", table);
});
  _$jscoverage['plugins/table.action.js'][448]++;
  table.onmousemove = (function () {
  _$jscoverage['plugins/table.action.js'][449]++;
  me.fireEvent("tablemousemove", table);
  _$jscoverage['plugins/table.action.js'][450]++;
  (me.options.tableDragable && toggleDragButton(true, this, me));
});
  _$jscoverage['plugins/table.action.js'][452]++;
  table.onmouseout = (function () {
  _$jscoverage['plugins/table.action.js'][453]++;
  me.fireEvent("tablemouseout", table);
  _$jscoverage['plugins/table.action.js'][454]++;
  toggleDraggableState(me, false, "", null);
  _$jscoverage['plugins/table.action.js'][455]++;
  hideDragLine(me);
});
  _$jscoverage['plugins/table.action.js'][457]++;
  table.onclick = (function (evt) {
  _$jscoverage['plugins/table.action.js'][458]++;
  evt = (me.window.event || evt);
  _$jscoverage['plugins/table.action.js'][459]++;
  var target = getParentTdOrTh((evt.target || evt.srcElement));
  _$jscoverage['plugins/table.action.js'][460]++;
  if ((! target)) {
    _$jscoverage['plugins/table.action.js'][460]++;
    return;
  }
  _$jscoverage['plugins/table.action.js'][461]++;
  var ut = getUETable(target), table = ut.table, cellInfo = ut.getCellInfo(target), cellsRange, rng = me.selection.getRange();
  _$jscoverage['plugins/table.action.js'][475]++;
  if (inTableSide(table, target, evt, true)) {
    _$jscoverage['plugins/table.action.js'][476]++;
    var endTdCol = ut.getCell(ut.indexTable[(ut.rowsNum - 1)][cellInfo.colIndex].rowIndex, ut.indexTable[(ut.rowsNum - 1)][cellInfo.colIndex].cellIndex);
    _$jscoverage['plugins/table.action.js'][477]++;
    if ((evt.shiftKey && ut.selectedTds.length)) {
      _$jscoverage['plugins/table.action.js'][478]++;
      if ((ut.selectedTds[0] !== endTdCol)) {
        _$jscoverage['plugins/table.action.js'][479]++;
        cellsRange = ut.getCellsRange(ut.selectedTds[0], endTdCol);
        _$jscoverage['plugins/table.action.js'][480]++;
        ut.setSelected(cellsRange);
      }
      else {
        _$jscoverage['plugins/table.action.js'][482]++;
        (rng && rng.selectNodeContents(endTdCol).select());
      }
    }
    else {
      _$jscoverage['plugins/table.action.js'][485]++;
      if ((target !== endTdCol)) {
        _$jscoverage['plugins/table.action.js'][486]++;
        cellsRange = ut.getCellsRange(target, endTdCol);
        _$jscoverage['plugins/table.action.js'][487]++;
        ut.setSelected(cellsRange);
      }
      else {
        _$jscoverage['plugins/table.action.js'][489]++;
        (rng && rng.selectNodeContents(endTdCol).select());
      }
    }
    _$jscoverage['plugins/table.action.js'][492]++;
    return;
  }
  _$jscoverage['plugins/table.action.js'][494]++;
  if (inTableSide(table, target, evt)) {
    _$jscoverage['plugins/table.action.js'][495]++;
    var endTdRow = ut.getCell(ut.indexTable[cellInfo.rowIndex][(ut.colsNum - 1)].rowIndex, ut.indexTable[cellInfo.rowIndex][(ut.colsNum - 1)].cellIndex);
    _$jscoverage['plugins/table.action.js'][496]++;
    if ((evt.shiftKey && ut.selectedTds.length)) {
      _$jscoverage['plugins/table.action.js'][497]++;
      if ((ut.selectedTds[0] !== endTdRow)) {
        _$jscoverage['plugins/table.action.js'][498]++;
        cellsRange = ut.getCellsRange(ut.selectedTds[0], endTdRow);
        _$jscoverage['plugins/table.action.js'][499]++;
        ut.setSelected(cellsRange);
      }
      else {
        _$jscoverage['plugins/table.action.js'][501]++;
        (rng && rng.selectNodeContents(endTdRow).select());
      }
    }
    else {
      _$jscoverage['plugins/table.action.js'][504]++;
      if ((target !== endTdRow)) {
        _$jscoverage['plugins/table.action.js'][505]++;
        cellsRange = ut.getCellsRange(target, endTdRow);
        _$jscoverage['plugins/table.action.js'][506]++;
        ut.setSelected(cellsRange);
      }
      else {
        _$jscoverage['plugins/table.action.js'][508]++;
        (rng && rng.selectNodeContents(endTdRow).select());
      }
    }
  }
});
}));
  _$jscoverage['plugins/table.action.js'][515]++;
  switchBorderColor(me, true);
}));
  _$jscoverage['plugins/table.action.js'][518]++;
  domUtils.on(me.document, "mousemove", mouseMoveEvent);
  _$jscoverage['plugins/table.action.js'][520]++;
  domUtils.on(me.document, "mouseout", (function (evt) {
  _$jscoverage['plugins/table.action.js'][521]++;
  var target = (evt.target || evt.srcElement);
  _$jscoverage['plugins/table.action.js'][522]++;
  if ((target.tagName == "TABLE")) {
    _$jscoverage['plugins/table.action.js'][523]++;
    toggleDraggableState(me, false, "", null);
  }
}));
  _$jscoverage['plugins/table.action.js'][529]++;
  me.addListener("interlacetable", (function (type, table, classList) {
  _$jscoverage['plugins/table.action.js'][530]++;
  if ((! table)) {
    _$jscoverage['plugins/table.action.js'][530]++;
    return;
  }
  _$jscoverage['plugins/table.action.js'][531]++;
  var me = this, rows = table.rows, len = rows.length, getClass = (function (list, index, repeat) {
  _$jscoverage['plugins/table.action.js'][535]++;
  return (list[index]? list[index]: (repeat? list[(index % list.length)]: ""));
});
  _$jscoverage['plugins/table.action.js'][537]++;
  for (var i = 0; (i < len); (i++)) {
    _$jscoverage['plugins/table.action.js'][538]++;
    rows[i].className = getClass((classList || me.options.classList), i, true);
}
}));
  _$jscoverage['plugins/table.action.js'][541]++;
  me.addListener("uninterlacetable", (function (type, table) {
  _$jscoverage['plugins/table.action.js'][542]++;
  if ((! table)) {
    _$jscoverage['plugins/table.action.js'][542]++;
    return;
  }
  _$jscoverage['plugins/table.action.js'][543]++;
  var me = this, rows = table.rows, classList = me.options.classList, len = rows.length;
  _$jscoverage['plugins/table.action.js'][547]++;
  for (var i = 0; (i < len); (i++)) {
    _$jscoverage['plugins/table.action.js'][548]++;
    domUtils.removeClasses(rows[i], classList);
}
}));
  _$jscoverage['plugins/table.action.js'][552]++;
  me.addListener("mousedown", mouseDownEvent);
  _$jscoverage['plugins/table.action.js'][553]++;
  me.addListener("mouseup", mouseUpEvent);
  _$jscoverage['plugins/table.action.js'][555]++;
  domUtils.on(me.body, "dragstart", (function (evt) {
  _$jscoverage['plugins/table.action.js'][556]++;
  mouseUpEvent.call(me, "dragstart", evt);
}));
  _$jscoverage['plugins/table.action.js'][559]++;
  var currentRowIndex = 0;
  _$jscoverage['plugins/table.action.js'][560]++;
  me.addListener("mousedown", (function () {
  _$jscoverage['plugins/table.action.js'][561]++;
  currentRowIndex = 0;
}));
  _$jscoverage['plugins/table.action.js'][563]++;
  me.addListener("tabkeydown", (function () {
  _$jscoverage['plugins/table.action.js'][564]++;
  var range = this.selection.getRange(), common = range.getCommonAncestor(true, true), table = domUtils.findParentByTagName(common, "table");
  _$jscoverage['plugins/table.action.js'][567]++;
  if (table) {
    _$jscoverage['plugins/table.action.js'][568]++;
    if (domUtils.findParentByTagName(common, "caption", true)) {
      _$jscoverage['plugins/table.action.js'][569]++;
      var cell = domUtils.getElementsByTagName(table, "th td");
      _$jscoverage['plugins/table.action.js'][570]++;
      if ((cell && cell.length)) {
        _$jscoverage['plugins/table.action.js'][571]++;
        range.setStart(cell[0], 0).setCursor(false, true);
      }
    }
    else {
      _$jscoverage['plugins/table.action.js'][574]++;
      var cell = domUtils.findParentByTagName(common, ["td", "th"], true), ua = getUETable(cell);
      _$jscoverage['plugins/table.action.js'][576]++;
      currentRowIndex = ((cell.rowSpan > 1)? currentRowIndex: ua.getCellInfo(cell).rowIndex);
      _$jscoverage['plugins/table.action.js'][577]++;
      var nextCell = ua.getTabNextCell(cell, currentRowIndex);
      _$jscoverage['plugins/table.action.js'][578]++;
      if (nextCell) {
        _$jscoverage['plugins/table.action.js'][579]++;
        if (isEmptyBlock(nextCell)) {
          _$jscoverage['plugins/table.action.js'][580]++;
          range.setStart(nextCell, 0).setCursor(false, true);
        }
        else {
          _$jscoverage['plugins/table.action.js'][582]++;
          range.selectNodeContents(nextCell).select();
        }
      }
      else {
        _$jscoverage['plugins/table.action.js'][585]++;
        me.fireEvent("saveScene");
        _$jscoverage['plugins/table.action.js'][586]++;
        me.__hasEnterExecCommand = true;
        _$jscoverage['plugins/table.action.js'][587]++;
        this.execCommand("insertrownext");
        _$jscoverage['plugins/table.action.js'][588]++;
        me.__hasEnterExecCommand = false;
        _$jscoverage['plugins/table.action.js'][589]++;
        range = this.selection.getRange();
        _$jscoverage['plugins/table.action.js'][590]++;
        range.setStart(table.rows[(table.rows.length - 1)].cells[0], 0).setCursor();
        _$jscoverage['plugins/table.action.js'][591]++;
        me.fireEvent("saveScene");
      }
    }
    _$jscoverage['plugins/table.action.js'][594]++;
    return true;
  }
}));
  _$jscoverage['plugins/table.action.js'][598]++;
  (browser.ie && me.addListener("selectionchange", (function () {
  _$jscoverage['plugins/table.action.js'][599]++;
  toggleDraggableState(this, false, "", null);
})));
  _$jscoverage['plugins/table.action.js'][601]++;
  me.addListener("keydown", (function (type, evt) {
  _$jscoverage['plugins/table.action.js'][602]++;
  var me = this;
  _$jscoverage['plugins/table.action.js'][604]++;
  var keyCode = (evt.keyCode || evt.which);
  _$jscoverage['plugins/table.action.js'][605]++;
  if (((keyCode == 8) || (keyCode == 46))) {
    _$jscoverage['plugins/table.action.js'][606]++;
    return;
  }
  _$jscoverage['plugins/table.action.js'][608]++;
  var notCtrlKey = ((! evt.ctrlKey) && (! evt.metaKey) && (! evt.shiftKey) && (! evt.altKey));
  _$jscoverage['plugins/table.action.js'][609]++;
  (notCtrlKey && removeSelectedClass(domUtils.getElementsByTagName(me.body, "td")));
  _$jscoverage['plugins/table.action.js'][610]++;
  var ut = getUETableBySelected(me);
  _$jscoverage['plugins/table.action.js'][611]++;
  if ((! ut)) {
    _$jscoverage['plugins/table.action.js'][611]++;
    return;
  }
  _$jscoverage['plugins/table.action.js'][612]++;
  (notCtrlKey && ut.clearSelected());
}));
  _$jscoverage['plugins/table.action.js'][615]++;
  me.addListener("beforegetcontent", (function () {
  _$jscoverage['plugins/table.action.js'][616]++;
  switchBorderColor(this, false);
  _$jscoverage['plugins/table.action.js'][617]++;
  (browser.ie && utils.each(this.document.getElementsByTagName("caption"), (function (ci) {
  _$jscoverage['plugins/table.action.js'][618]++;
  if (domUtils.isEmptyNode(ci)) {
    _$jscoverage['plugins/table.action.js'][619]++;
    ci.innerHTML = "&nbsp;";
  }
})));
}));
  _$jscoverage['plugins/table.action.js'][623]++;
  me.addListener("aftergetcontent", (function () {
  _$jscoverage['plugins/table.action.js'][624]++;
  switchBorderColor(this, true);
}));
  _$jscoverage['plugins/table.action.js'][626]++;
  me.addListener("getAllHtml", (function () {
  _$jscoverage['plugins/table.action.js'][627]++;
  removeSelectedClass(me.document.getElementsByTagName("td"));
}));
  _$jscoverage['plugins/table.action.js'][630]++;
  me.addListener("fullscreenchanged", (function (type, fullscreen) {
  _$jscoverage['plugins/table.action.js'][631]++;
  if ((! fullscreen)) {
    _$jscoverage['plugins/table.action.js'][632]++;
    var ratio = (this.body.offsetWidth / document.body.offsetWidth), tables = domUtils.getElementsByTagName(this.body, "table");
    _$jscoverage['plugins/table.action.js'][634]++;
    utils.each(tables, (function (table) {
  _$jscoverage['plugins/table.action.js'][635]++;
  if ((table.offsetWidth < me.body.offsetWidth)) {
    _$jscoverage['plugins/table.action.js'][635]++;
    return false;
  }
  _$jscoverage['plugins/table.action.js'][636]++;
  var tds = domUtils.getElementsByTagName(table, "td"), backWidths = [];
  _$jscoverage['plugins/table.action.js'][638]++;
  utils.each(tds, (function (td) {
  _$jscoverage['plugins/table.action.js'][639]++;
  backWidths.push(td.offsetWidth);
}));
  _$jscoverage['plugins/table.action.js'][641]++;
  for (var i = 0, td; (td = tds[i]); (i++)) {
    _$jscoverage['plugins/table.action.js'][642]++;
    td.setAttribute("width", Math.floor((backWidths[i] * ratio)));
}
  _$jscoverage['plugins/table.action.js'][644]++;
  table.setAttribute("width", Math.floor(getTableWidth(me, needIEHack, getDefaultValue(me))));
}));
  }
}));
  _$jscoverage['plugins/table.action.js'][650]++;
  var oldExecCommand = me.execCommand;
  _$jscoverage['plugins/table.action.js'][651]++;
  me.execCommand = (function (cmd, datatat) {
  _$jscoverage['plugins/table.action.js'][653]++;
  var me = this, args = arguments;
  _$jscoverage['plugins/table.action.js'][656]++;
  cmd = cmd.toLowerCase();
  _$jscoverage['plugins/table.action.js'][657]++;
  var ut = getUETableBySelected(me), tds, range = new (dom.Range)(me.document), cmdFun = (me.commands[cmd] || UE.commands[cmd]), result;
  _$jscoverage['plugins/table.action.js'][661]++;
  if ((! cmdFun)) {
    _$jscoverage['plugins/table.action.js'][661]++;
    return;
  }
  _$jscoverage['plugins/table.action.js'][662]++;
  if ((ut && (! commands[cmd]) && (! cmdFun.notNeedUndo) && (! me.__hasEnterExecCommand))) {
    _$jscoverage['plugins/table.action.js'][663]++;
    me.__hasEnterExecCommand = true;
    _$jscoverage['plugins/table.action.js'][664]++;
    me.fireEvent("beforeexeccommand", cmd);
    _$jscoverage['plugins/table.action.js'][665]++;
    tds = ut.selectedTds;
    _$jscoverage['plugins/table.action.js'][666]++;
    var lastState = -2, lastValue = -2, value, state;
    _$jscoverage['plugins/table.action.js'][667]++;
    for (var i = 0, td; (td = tds[i]); (i++)) {
      _$jscoverage['plugins/table.action.js'][668]++;
      if (isEmptyBlock(td)) {
        _$jscoverage['plugins/table.action.js'][669]++;
        range.setStart(td, 0).setCursor(false, true);
      }
      else {
        _$jscoverage['plugins/table.action.js'][671]++;
        range.selectNode(td).select(true);
      }
      _$jscoverage['plugins/table.action.js'][673]++;
      state = me.queryCommandState(cmd);
      _$jscoverage['plugins/table.action.js'][674]++;
      value = me.queryCommandValue(cmd);
      _$jscoverage['plugins/table.action.js'][675]++;
      if ((state != -1)) {
        _$jscoverage['plugins/table.action.js'][676]++;
        if (((lastState !== state) || (lastValue !== value))) {
          _$jscoverage['plugins/table.action.js'][677]++;
          me._ignoreContentChange = true;
          _$jscoverage['plugins/table.action.js'][678]++;
          result = oldExecCommand.apply(me, arguments);
          _$jscoverage['plugins/table.action.js'][679]++;
          me._ignoreContentChange = false;
        }
        _$jscoverage['plugins/table.action.js'][682]++;
        lastState = me.queryCommandState(cmd);
        _$jscoverage['plugins/table.action.js'][683]++;
        lastValue = me.queryCommandValue(cmd);
        _$jscoverage['plugins/table.action.js'][684]++;
        if (domUtils.isEmptyBlock(td)) {
          _$jscoverage['plugins/table.action.js'][685]++;
          domUtils.fillNode(me.document, td);
        }
      }
}
    _$jscoverage['plugins/table.action.js'][689]++;
    range.setStart(tds[0], 0).shrinkBoundary(true).setCursor(false, true);
    _$jscoverage['plugins/table.action.js'][690]++;
    me.fireEvent("contentchange");
    _$jscoverage['plugins/table.action.js'][691]++;
    me.fireEvent("afterexeccommand", cmd);
    _$jscoverage['plugins/table.action.js'][692]++;
    me.__hasEnterExecCommand = false;
    _$jscoverage['plugins/table.action.js'][693]++;
    me._selectionChange();
  }
  else {
    _$jscoverage['plugins/table.action.js'][695]++;
    result = oldExecCommand.apply(me, arguments);
  }
  _$jscoverage['plugins/table.action.js'][697]++;
  return result;
});
}));
  _$jscoverage['plugins/table.action.js'][707]++;
  function removeStyleSize(obj, replaceToProperty) {
    _$jscoverage['plugins/table.action.js'][708]++;
    removeStyle(obj, "width", true);
    _$jscoverage['plugins/table.action.js'][709]++;
    removeStyle(obj, "height", true);
}
  _$jscoverage['plugins/table.action.js'][712]++;
  function removeStyle(obj, styleName, replaceToProperty) {
    _$jscoverage['plugins/table.action.js'][713]++;
    if (obj.style[styleName]) {
      _$jscoverage['plugins/table.action.js'][714]++;
      (replaceToProperty && obj.setAttribute(styleName, parseInt(obj.style[styleName], 10)));
      _$jscoverage['plugins/table.action.js'][715]++;
      obj.style[styleName] = "";
    }
}
  _$jscoverage['plugins/table.action.js'][719]++;
  function getParentTdOrTh(ele) {
    _$jscoverage['plugins/table.action.js'][720]++;
    if (((ele.tagName == "TD") || (ele.tagName == "TH"))) {
      _$jscoverage['plugins/table.action.js'][720]++;
      return ele;
    }
    _$jscoverage['plugins/table.action.js'][721]++;
    var td;
    _$jscoverage['plugins/table.action.js'][722]++;
    if ((td = (domUtils.findParentByTagName(ele, "td", true) || domUtils.findParentByTagName(ele, "th", true)))) {
      _$jscoverage['plugins/table.action.js'][722]++;
      return td;
    }
    _$jscoverage['plugins/table.action.js'][723]++;
    return null;
}
  _$jscoverage['plugins/table.action.js'][726]++;
  function isEmptyBlock(node) {
    _$jscoverage['plugins/table.action.js'][727]++;
    var reg = new RegExp(domUtils.fillChar, "g");
    _$jscoverage['plugins/table.action.js'][728]++;
    if ((node[(browser.ie? "innerText": "textContent")].replace(/^\s*$/, "").replace(reg, "").length > 0)) {
      _$jscoverage['plugins/table.action.js'][729]++;
      return 0;
    }
    _$jscoverage['plugins/table.action.js'][731]++;
    for (var n in dtd.$isNotEmpty) {
      _$jscoverage['plugins/table.action.js'][732]++;
      if (node.getElementsByTagName(n).length) {
        _$jscoverage['plugins/table.action.js'][733]++;
        return 0;
      }
}
    _$jscoverage['plugins/table.action.js'][736]++;
    return 1;
}
  _$jscoverage['plugins/table.action.js'][740]++;
  function mouseCoords(evt) {
    _$jscoverage['plugins/table.action.js'][741]++;
    if ((evt.pageX || evt.pageY)) {
      _$jscoverage['plugins/table.action.js'][742]++;
      return ({x: evt.pageX, y: evt.pageY});
    }
    _$jscoverage['plugins/table.action.js'][744]++;
    return ({x: ((evt.clientX + me.document.body.scrollLeft) - me.document.body.clientLeft), y: ((evt.clientY + me.document.body.scrollTop) - me.document.body.clientTop)});
}
  _$jscoverage['plugins/table.action.js'][750]++;
  function mouseMoveEvent(evt) {
    _$jscoverage['plugins/table.action.js'][752]++;
    if (isEditorDisabled()) {
      _$jscoverage['plugins/table.action.js'][753]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][756]++;
    try {
      _$jscoverage['plugins/table.action.js'][759]++;
      var target = getParentTdOrTh((evt.target || evt.srcElement)), pos;
      _$jscoverage['plugins/table.action.js'][763]++;
      if (isInResizeBuffer) {
        _$jscoverage['plugins/table.action.js'][765]++;
        me.body.style.webkitUserSelect = "none";
        _$jscoverage['plugins/table.action.js'][767]++;
        if (((Math.abs((userActionStatus.x - evt.clientX)) > offsetOfTableCell) || (Math.abs((userActionStatus.y - evt.clientY)) > offsetOfTableCell))) {
          _$jscoverage['plugins/table.action.js'][768]++;
          clearTableDragTimer();
          _$jscoverage['plugins/table.action.js'][769]++;
          isInResizeBuffer = false;
          _$jscoverage['plugins/table.action.js'][770]++;
          singleClickState = 0;
          _$jscoverage['plugins/table.action.js'][772]++;
          tableBorderDrag(evt);
        }
      }
      _$jscoverage['plugins/table.action.js'][777]++;
      if ((onDrag && dragTd)) {
        _$jscoverage['plugins/table.action.js'][778]++;
        singleClickState = 0;
        _$jscoverage['plugins/table.action.js'][779]++;
        me.body.style.webkitUserSelect = "none";
        _$jscoverage['plugins/table.action.js'][780]++;
        (me.selection.getNative()[(browser.ie? "empty": "removeAllRanges")])();
        _$jscoverage['plugins/table.action.js'][781]++;
        pos = mouseCoords(evt);
        _$jscoverage['plugins/table.action.js'][782]++;
        toggleDraggableState(me, true, onDrag, pos, target);
        _$jscoverage['plugins/table.action.js'][783]++;
        if ((onDrag == "h")) {
          _$jscoverage['plugins/table.action.js'][784]++;
          dragLine.style.left = (getPermissionX(dragTd, evt) + "px");
        }
        else {
          _$jscoverage['plugins/table.action.js'][785]++;
          if ((onDrag == "v")) {
            _$jscoverage['plugins/table.action.js'][786]++;
            dragLine.style.top = (getPermissionY(dragTd, evt) + "px");
          }
        }
        _$jscoverage['plugins/table.action.js'][788]++;
        return;
      }
      _$jscoverage['plugins/table.action.js'][791]++;
      if (target) {
        _$jscoverage['plugins/table.action.js'][793]++;
        if ((me.fireEvent("excludetable", target) === true)) {
          _$jscoverage['plugins/table.action.js'][794]++;
          return;
        }
        _$jscoverage['plugins/table.action.js'][795]++;
        pos = mouseCoords(evt);
        _$jscoverage['plugins/table.action.js'][796]++;
        var state = getRelation(target, pos), table = domUtils.findParentByTagName(target, "table", true);
        _$jscoverage['plugins/table.action.js'][799]++;
        if (inTableSide(table, target, evt, true)) {
          _$jscoverage['plugins/table.action.js'][800]++;
          if ((me.fireEvent("excludetable", table) === true)) {
            _$jscoverage['plugins/table.action.js'][800]++;
            return;
          }
          _$jscoverage['plugins/table.action.js'][801]++;
          me.body.style.cursor = ("url(" + me.options.cursorpath + "h.png),pointer");
        }
        else {
          _$jscoverage['plugins/table.action.js'][802]++;
          if (inTableSide(table, target, evt)) {
            _$jscoverage['plugins/table.action.js'][803]++;
            if ((me.fireEvent("excludetable", table) === true)) {
              _$jscoverage['plugins/table.action.js'][803]++;
              return;
            }
            _$jscoverage['plugins/table.action.js'][804]++;
            me.body.style.cursor = ("url(" + me.options.cursorpath + "v.png),pointer");
          }
          else {
            _$jscoverage['plugins/table.action.js'][806]++;
            me.body.style.cursor = "text";
            _$jscoverage['plugins/table.action.js'][807]++;
            var curCell = target;
            _$jscoverage['plugins/table.action.js'][808]++;
            if (/\d/.test(state)) {
              _$jscoverage['plugins/table.action.js'][809]++;
              state = state.replace(/\d/, "");
              _$jscoverage['plugins/table.action.js'][810]++;
              target = getUETable(target).getPreviewCell(target, (state == "v"));
            }
            _$jscoverage['plugins/table.action.js'][813]++;
            toggleDraggableState(me, (target? (! (! state)): false), (target? state: ""), pos, target);
          }
        }
      }
      else {
        _$jscoverage['plugins/table.action.js'][817]++;
        toggleDragButton(false, table, me);
      }
    }
    catch (e) {
      _$jscoverage['plugins/table.action.js'][821]++;
      showError(e);
    }
}
  _$jscoverage['plugins/table.action.js'][825]++;
  var dragButtonTimer;
  _$jscoverage['plugins/table.action.js'][827]++;
  function toggleDragButton(show, table, editor) {
    _$jscoverage['plugins/table.action.js'][828]++;
    if ((! show)) {
      _$jscoverage['plugins/table.action.js'][829]++;
      if (dragOver) {
        _$jscoverage['plugins/table.action.js'][829]++;
        return;
      }
      _$jscoverage['plugins/table.action.js'][830]++;
      dragButtonTimer = setTimeout((function () {
  _$jscoverage['plugins/table.action.js'][831]++;
  ((! dragOver) && dragButton && dragButton.parentNode && dragButton.parentNode.removeChild(dragButton));
}), 2000);
    }
    else {
      _$jscoverage['plugins/table.action.js'][834]++;
      createDragButton(table, editor);
    }
}
  _$jscoverage['plugins/table.action.js'][838]++;
  function createDragButton(table, editor) {
    _$jscoverage['plugins/table.action.js'][839]++;
    var pos = domUtils.getXY(table), doc = table.ownerDocument;
    _$jscoverage['plugins/table.action.js'][841]++;
    if ((dragButton && dragButton.parentNode)) {
      _$jscoverage['plugins/table.action.js'][841]++;
      return dragButton;
    }
    _$jscoverage['plugins/table.action.js'][842]++;
    dragButton = doc.createElement("div");
    _$jscoverage['plugins/table.action.js'][843]++;
    dragButton.contentEditable = false;
    _$jscoverage['plugins/table.action.js'][844]++;
    dragButton.innerHTML = "";
    _$jscoverage['plugins/table.action.js'][845]++;
    dragButton.style.cssText = ("width:15px;height:15px;background-image:url(" + editor.options.UEDITOR_HOME_URL + "dialogs/table/dragicon.png);position: absolute;cursor:move;top:" + (pos.y - 15) + "px;left:" + pos.x + "px;");
    _$jscoverage['plugins/table.action.js'][846]++;
    domUtils.unSelectable(dragButton);
    _$jscoverage['plugins/table.action.js'][847]++;
    dragButton.onmouseover = (function (evt) {
  _$jscoverage['plugins/table.action.js'][848]++;
  dragOver = true;
});
    _$jscoverage['plugins/table.action.js'][850]++;
    dragButton.onmouseout = (function (evt) {
  _$jscoverage['plugins/table.action.js'][851]++;
  dragOver = false;
});
    _$jscoverage['plugins/table.action.js'][853]++;
    domUtils.on(dragButton, "click", (function (type, evt) {
  _$jscoverage['plugins/table.action.js'][854]++;
  doClick(evt, this);
}));
    _$jscoverage['plugins/table.action.js'][856]++;
    domUtils.on(dragButton, "dblclick", (function (type, evt) {
  _$jscoverage['plugins/table.action.js'][857]++;
  doDblClick(evt);
}));
    _$jscoverage['plugins/table.action.js'][859]++;
    domUtils.on(dragButton, "dragstart", (function (type, evt) {
  _$jscoverage['plugins/table.action.js'][860]++;
  domUtils.preventDefault(evt);
}));
    _$jscoverage['plugins/table.action.js'][862]++;
    var timer;
    _$jscoverage['plugins/table.action.js'][864]++;
    function doClick(evt, button) {
      _$jscoverage['plugins/table.action.js'][866]++;
      clearTimeout(timer);
      _$jscoverage['plugins/table.action.js'][867]++;
      timer = setTimeout((function () {
  _$jscoverage['plugins/table.action.js'][868]++;
  editor.fireEvent("tableClicked", table, button);
}), 300);
}
    _$jscoverage['plugins/table.action.js'][872]++;
    function doDblClick(evt) {
      _$jscoverage['plugins/table.action.js'][873]++;
      clearTimeout(timer);
      _$jscoverage['plugins/table.action.js'][874]++;
      var ut = getUETable(table), start = table.rows[0].cells[0], end = ut.getLastCell(), range = ut.getCellsRange(start, end);
      _$jscoverage['plugins/table.action.js'][878]++;
      editor.selection.getRange().setStart(start, 0).setCursor(false, true);
      _$jscoverage['plugins/table.action.js'][879]++;
      ut.setSelected(range);
}
    _$jscoverage['plugins/table.action.js'][882]++;
    doc.body.appendChild(dragButton);
}
  _$jscoverage['plugins/table.action.js'][897]++;
  function inTableSide(table, cell, evt, top) {
    _$jscoverage['plugins/table.action.js'][898]++;
    var pos = mouseCoords(evt), state = getRelation(cell, pos);
    _$jscoverage['plugins/table.action.js'][901]++;
    if (top) {
      _$jscoverage['plugins/table.action.js'][902]++;
      var caption = table.getElementsByTagName("caption")[0], capHeight = (caption? caption.offsetHeight: 0);
      _$jscoverage['plugins/table.action.js'][904]++;
      return ((state == "v1") && ((pos.y - domUtils.getXY(table).y - capHeight) < 8));
    }
    else {
      _$jscoverage['plugins/table.action.js'][906]++;
      return ((state == "h1") && ((pos.x - domUtils.getXY(table).x) < 8));
    }
}
  _$jscoverage['plugins/table.action.js'][915]++;
  function getPermissionX(dragTd, evt) {
    _$jscoverage['plugins/table.action.js'][916]++;
    var ut = getUETable(dragTd);
    _$jscoverage['plugins/table.action.js'][917]++;
    if (ut) {
      _$jscoverage['plugins/table.action.js'][918]++;
      var preTd = ut.getSameEndPosCells(dragTd, "x")[0], nextTd = ut.getSameStartPosXCells(dragTd)[0], mouseX = mouseCoords(evt).x, left = ((preTd? domUtils.getXY(preTd).x: domUtils.getXY(ut.table).x) + 20), right = (nextTd? ((domUtils.getXY(nextTd).x + nextTd.offsetWidth) - 20): ((me.body.offsetWidth + 5) || parseInt(domUtils.getComputedStyle(me.body, "width"), 10)));
      _$jscoverage['plugins/table.action.js'][924]++;
      left += cellMinWidth;
      _$jscoverage['plugins/table.action.js'][925]++;
      right -= cellMinWidth;
      _$jscoverage['plugins/table.action.js'][927]++;
      return ((mouseX < left)? left: ((mouseX > right)? right: mouseX));
    }
}
  _$jscoverage['plugins/table.action.js'][934]++;
  function getPermissionY(dragTd, evt) {
    _$jscoverage['plugins/table.action.js'][935]++;
    try {
      _$jscoverage['plugins/table.action.js'][936]++;
      var top = domUtils.getXY(dragTd).y, mousePosY = mouseCoords(evt).y;
      _$jscoverage['plugins/table.action.js'][938]++;
      return ((mousePosY < top)? top: mousePosY);
    }
    catch (e) {
      _$jscoverage['plugins/table.action.js'][940]++;
      showError(e);
    }
}
  _$jscoverage['plugins/table.action.js'][947]++;
  function toggleDraggableState(editor, draggable, dir, mousePos, cell) {
    _$jscoverage['plugins/table.action.js'][948]++;
    try {
      _$jscoverage['plugins/table.action.js'][949]++;
      editor.body.style.cursor = ((dir == "h")? "col-resize": ((dir == "v")? "row-resize": "text"));
      _$jscoverage['plugins/table.action.js'][950]++;
      if (browser.ie) {
        _$jscoverage['plugins/table.action.js'][951]++;
        if ((dir && (! mousedown) && (! getUETableBySelected(editor)))) {
          _$jscoverage['plugins/table.action.js'][952]++;
          getDragLine(editor, editor.document);
          _$jscoverage['plugins/table.action.js'][953]++;
          showDragLineAt(dir, cell);
        }
        else {
          _$jscoverage['plugins/table.action.js'][955]++;
          hideDragLine(editor);
        }
      }
      _$jscoverage['plugins/table.action.js'][958]++;
      onBorder = draggable;
    }
    catch (e) {
      _$jscoverage['plugins/table.action.js'][960]++;
      showError(e);
    }
}
  _$jscoverage['plugins/table.action.js'][968]++;
  function getResizeLineByUETable() {
    _$jscoverage['plugins/table.action.js'][970]++;
    var lineId = "_UETableResizeLine", line = this.document.getElementById(lineId);
    _$jscoverage['plugins/table.action.js'][973]++;
    if ((! line)) {
      _$jscoverage['plugins/table.action.js'][974]++;
      line = this.document.createElement("div");
      _$jscoverage['plugins/table.action.js'][975]++;
      line.id = lineId;
      _$jscoverage['plugins/table.action.js'][976]++;
      line.contnetEditable = false;
      _$jscoverage['plugins/table.action.js'][977]++;
      line.setAttribute("unselectable", "on");
      _$jscoverage['plugins/table.action.js'][979]++;
      var styles = {width: ((2 * cellBorderWidth) + 1 + "px"), position: "absolute", "z-index": 100000, cursor: "col-resize", background: "red", display: "none"};
      _$jscoverage['plugins/table.action.js'][989]++;
      line.onmouseout = (function () {
  _$jscoverage['plugins/table.action.js'][990]++;
  this.style.display = "none";
});
      _$jscoverage['plugins/table.action.js'][993]++;
      utils.extend(line.style, styles);
      _$jscoverage['plugins/table.action.js'][995]++;
      this.document.body.appendChild(line);
    }
    _$jscoverage['plugins/table.action.js'][999]++;
    return line;
}
  _$jscoverage['plugins/table.action.js'][1006]++;
  function updateResizeLine(cell, uetable) {
    _$jscoverage['plugins/table.action.js'][1008]++;
    var line = getResizeLineByUETable.call(this), table = uetable.table, styles = {top: (domUtils.getXY(table).y + "px"), left: (((domUtils.getXY(cell).x + cell.offsetWidth) - cellBorderWidth) + "px"), display: "block", height: (table.offsetHeight + "px")};
    _$jscoverage['plugins/table.action.js'][1017]++;
    utils.extend(line.style, styles);
}
  _$jscoverage['plugins/table.action.js'][1024]++;
  function showResizeLine(cell) {
    _$jscoverage['plugins/table.action.js'][1026]++;
    var uetable = getUETable(cell);
    _$jscoverage['plugins/table.action.js'][1028]++;
    updateResizeLine.call(this, cell, uetable);
}
  _$jscoverage['plugins/table.action.js'][1037]++;
  function getRelation(ele, mousePos) {
    _$jscoverage['plugins/table.action.js'][1038]++;
    var elePos = domUtils.getXY(ele);
    _$jscoverage['plugins/table.action.js'][1040]++;
    if ((! elePos)) {
      _$jscoverage['plugins/table.action.js'][1041]++;
      return "";
    }
    _$jscoverage['plugins/table.action.js'][1044]++;
    if ((((elePos.x + ele.offsetWidth) - mousePos.x) < cellBorderWidth)) {
      _$jscoverage['plugins/table.action.js'][1045]++;
      return "h";
    }
    _$jscoverage['plugins/table.action.js'][1047]++;
    if (((mousePos.x - elePos.x) < cellBorderWidth)) {
      _$jscoverage['plugins/table.action.js'][1048]++;
      return "h1";
    }
    _$jscoverage['plugins/table.action.js'][1050]++;
    if ((((elePos.y + ele.offsetHeight) - mousePos.y) < cellBorderWidth)) {
      _$jscoverage['plugins/table.action.js'][1051]++;
      return "v";
    }
    _$jscoverage['plugins/table.action.js'][1053]++;
    if (((mousePos.y - elePos.y) < cellBorderWidth)) {
      _$jscoverage['plugins/table.action.js'][1054]++;
      return "v1";
    }
    _$jscoverage['plugins/table.action.js'][1056]++;
    return "";
}
  _$jscoverage['plugins/table.action.js'][1059]++;
  function mouseDownEvent(type, evt) {
    _$jscoverage['plugins/table.action.js'][1061]++;
    if (isEditorDisabled()) {
      _$jscoverage['plugins/table.action.js'][1062]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1065]++;
    userActionStatus = {x: evt.clientX, y: evt.clientY};
    _$jscoverage['plugins/table.action.js'][1071]++;
    if ((evt.button == 2)) {
      _$jscoverage['plugins/table.action.js'][1072]++;
      var ut = getUETableBySelected(me), flag = false;
      _$jscoverage['plugins/table.action.js'][1075]++;
      if (ut) {
        _$jscoverage['plugins/table.action.js'][1076]++;
        var td = getTargetTd(me, evt);
        _$jscoverage['plugins/table.action.js'][1077]++;
        utils.each(ut.selectedTds, (function (ti) {
  _$jscoverage['plugins/table.action.js'][1078]++;
  if ((ti === td)) {
    _$jscoverage['plugins/table.action.js'][1079]++;
    flag = true;
  }
}));
        _$jscoverage['plugins/table.action.js'][1082]++;
        if ((! flag)) {
          _$jscoverage['plugins/table.action.js'][1083]++;
          removeSelectedClass(domUtils.getElementsByTagName(me.body, "th td"));
          _$jscoverage['plugins/table.action.js'][1084]++;
          ut.clearSelected();
        }
        else {
          _$jscoverage['plugins/table.action.js'][1086]++;
          td = ut.selectedTds[0];
          _$jscoverage['plugins/table.action.js'][1087]++;
          setTimeout((function () {
  _$jscoverage['plugins/table.action.js'][1088]++;
  me.selection.getRange().setStart(td, 0).setCursor(false, true);
}), 0);
        }
      }
    }
    else {
      _$jscoverage['plugins/table.action.js'][1094]++;
      tableClickHander(evt);
    }
}
  _$jscoverage['plugins/table.action.js'][1100]++;
  function clearTableTimer() {
    _$jscoverage['plugins/table.action.js'][1101]++;
    (tabTimer && clearTimeout(tabTimer));
    _$jscoverage['plugins/table.action.js'][1102]++;
    tabTimer = null;
}
  _$jscoverage['plugins/table.action.js'][1106]++;
  function tableDbclickHandler(evt) {
    _$jscoverage['plugins/table.action.js'][1107]++;
    singleClickState = 0;
    _$jscoverage['plugins/table.action.js'][1108]++;
    evt = (evt || me.window.event);
    _$jscoverage['plugins/table.action.js'][1109]++;
    var target = getParentTdOrTh((evt.target || evt.srcElement));
    _$jscoverage['plugins/table.action.js'][1110]++;
    if (target) {
      _$jscoverage['plugins/table.action.js'][1111]++;
      var h;
      _$jscoverage['plugins/table.action.js'][1112]++;
      if ((h = getRelation(target, mouseCoords(evt)))) {
        _$jscoverage['plugins/table.action.js'][1114]++;
        hideDragLine(me);
        _$jscoverage['plugins/table.action.js'][1116]++;
        if ((h == "h1")) {
          _$jscoverage['plugins/table.action.js'][1117]++;
          h = "h";
          _$jscoverage['plugins/table.action.js'][1118]++;
          if (inTableSide(domUtils.findParentByTagName(target, "table"), target, evt)) {
            _$jscoverage['plugins/table.action.js'][1119]++;
            me.execCommand("adaptbywindow");
          }
          else {
            _$jscoverage['plugins/table.action.js'][1121]++;
            target = getUETable(target).getPreviewCell(target);
            _$jscoverage['plugins/table.action.js'][1122]++;
            if (target) {
              _$jscoverage['plugins/table.action.js'][1123]++;
              var rng = me.selection.getRange();
              _$jscoverage['plugins/table.action.js'][1124]++;
              rng.selectNodeContents(target).setCursor(true, true);
            }
          }
        }
        _$jscoverage['plugins/table.action.js'][1128]++;
        if ((h == "h")) {
          _$jscoverage['plugins/table.action.js'][1129]++;
          var ut = getUETable(target), table = ut.table, cells = getCellsByMoveBorder(target, table, true);
          _$jscoverage['plugins/table.action.js'][1133]++;
          cells = extractArray(cells, "left");
          _$jscoverage['plugins/table.action.js'][1135]++;
          ut.width = ut.offsetWidth;
          _$jscoverage['plugins/table.action.js'][1137]++;
          var oldWidth = [], newWidth = [];
          _$jscoverage['plugins/table.action.js'][1140]++;
          utils.each(cells, (function (cell) {
  _$jscoverage['plugins/table.action.js'][1142]++;
  oldWidth.push(cell.offsetWidth);
}));
          _$jscoverage['plugins/table.action.js'][1146]++;
          utils.each(cells, (function (cell) {
  _$jscoverage['plugins/table.action.js'][1148]++;
  cell.removeAttribute("width");
}));
          _$jscoverage['plugins/table.action.js'][1152]++;
          window.setTimeout((function () {
  _$jscoverage['plugins/table.action.js'][1155]++;
  var changeable = true;
  _$jscoverage['plugins/table.action.js'][1157]++;
  utils.each(cells, (function (cell, index) {
  _$jscoverage['plugins/table.action.js'][1159]++;
  var width = cell.offsetWidth;
  _$jscoverage['plugins/table.action.js'][1161]++;
  if ((width > oldWidth[index])) {
    _$jscoverage['plugins/table.action.js'][1162]++;
    changeable = false;
    _$jscoverage['plugins/table.action.js'][1163]++;
    return false;
  }
  _$jscoverage['plugins/table.action.js'][1166]++;
  newWidth.push(width);
}));
  _$jscoverage['plugins/table.action.js'][1170]++;
  var change = (changeable? newWidth: oldWidth);
  _$jscoverage['plugins/table.action.js'][1172]++;
  utils.each(cells, (function (cell, index) {
  _$jscoverage['plugins/table.action.js'][1174]++;
  cell.width = (change[index] - getTabcellSpace());
}));
}), 0);
        }
      }
    }
}
  _$jscoverage['plugins/table.action.js'][1194]++;
  function tableClickHander(evt) {
    _$jscoverage['plugins/table.action.js'][1196]++;
    removeSelectedClass(domUtils.getElementsByTagName(me.body, "td th"));
    _$jscoverage['plugins/table.action.js'][1199]++;
    utils.each(me.document.getElementsByTagName("table"), (function (t) {
  _$jscoverage['plugins/table.action.js'][1200]++;
  t.ueTable = null;
}));
    _$jscoverage['plugins/table.action.js'][1202]++;
    startTd = getTargetTd(me, evt);
    _$jscoverage['plugins/table.action.js'][1203]++;
    if ((! startTd)) {
      _$jscoverage['plugins/table.action.js'][1203]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1204]++;
    var table = domUtils.findParentByTagName(startTd, "table", true);
    _$jscoverage['plugins/table.action.js'][1205]++;
    ut = getUETable(table);
    _$jscoverage['plugins/table.action.js'][1206]++;
    (ut && ut.clearSelected());
    _$jscoverage['plugins/table.action.js'][1209]++;
    if ((! onBorder)) {
      _$jscoverage['plugins/table.action.js'][1210]++;
      me.document.body.style.webkitUserSelect = "";
      _$jscoverage['plugins/table.action.js'][1211]++;
      mousedown = true;
      _$jscoverage['plugins/table.action.js'][1212]++;
      me.addListener("mouseover", mouseOverEvent);
    }
    else {
      _$jscoverage['plugins/table.action.js'][1215]++;
      borderActionHandler(evt);
    }
}
  _$jscoverage['plugins/table.action.js'][1222]++;
  function borderActionHandler(evt) {
    _$jscoverage['plugins/table.action.js'][1224]++;
    if (browser.ie) {
      _$jscoverage['plugins/table.action.js'][1225]++;
      evt = reconstruct(evt);
    }
    _$jscoverage['plugins/table.action.js'][1228]++;
    clearTableDragTimer();
    _$jscoverage['plugins/table.action.js'][1231]++;
    isInResizeBuffer = true;
    _$jscoverage['plugins/table.action.js'][1233]++;
    tableDragTimer = setTimeout((function () {
  _$jscoverage['plugins/table.action.js'][1234]++;
  tableBorderDrag(evt);
}), dblclickTime);
}
  _$jscoverage['plugins/table.action.js'][1239]++;
  function extractArray(originArr, key) {
    _$jscoverage['plugins/table.action.js'][1241]++;
    var result = [], tmp = null;
    _$jscoverage['plugins/table.action.js'][1244]++;
    for (var i = 0, len = originArr.length; (i < len); (i++)) {
      _$jscoverage['plugins/table.action.js'][1246]++;
      tmp = originArr[i][key];
      _$jscoverage['plugins/table.action.js'][1248]++;
      if (tmp) {
        _$jscoverage['plugins/table.action.js'][1249]++;
        result.push(tmp);
      }
}
    _$jscoverage['plugins/table.action.js'][1254]++;
    return result;
}
  _$jscoverage['plugins/table.action.js'][1258]++;
  function clearTableDragTimer() {
    _$jscoverage['plugins/table.action.js'][1259]++;
    (tableDragTimer && clearTimeout(tableDragTimer));
    _$jscoverage['plugins/table.action.js'][1260]++;
    tableDragTimer = null;
}
  _$jscoverage['plugins/table.action.js'][1263]++;
  function reconstruct(obj) {
    _$jscoverage['plugins/table.action.js'][1265]++;
    var attrs = ["pageX", "pageY", "clientX", "clientY", "srcElement", "target"], newObj = {};
    _$jscoverage['plugins/table.action.js'][1268]++;
    if (obj) {
      _$jscoverage['plugins/table.action.js'][1270]++;
      for (var i = 0, key, val; (key = attrs[i]); (i++)) {
        _$jscoverage['plugins/table.action.js'][1271]++;
        val = obj[key];
        _$jscoverage['plugins/table.action.js'][1272]++;
        (val && (newObj[key] = val));
}
    }
    _$jscoverage['plugins/table.action.js'][1277]++;
    return newObj;
}
  _$jscoverage['plugins/table.action.js'][1282]++;
  function tableBorderDrag(evt) {
    _$jscoverage['plugins/table.action.js'][1284]++;
    isInResizeBuffer = false;
    _$jscoverage['plugins/table.action.js'][1286]++;
    if ((! startTd)) {
      _$jscoverage['plugins/table.action.js'][1286]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1287]++;
    var state = ((Math.abs((userActionStatus.x - evt.clientX)) >= Math.abs((userActionStatus.y - evt.clientY)))? "h": "v");
    _$jscoverage['plugins/table.action.js'][1289]++;
    if (/\d/.test(state)) {
      _$jscoverage['plugins/table.action.js'][1290]++;
      state = state.replace(/\d/, "");
      _$jscoverage['plugins/table.action.js'][1291]++;
      startTd = getUETable(startTd).getPreviewCell(startTd, (state == "v"));
    }
    _$jscoverage['plugins/table.action.js'][1293]++;
    hideDragLine(me);
    _$jscoverage['plugins/table.action.js'][1294]++;
    getDragLine(me, me.document);
    _$jscoverage['plugins/table.action.js'][1295]++;
    me.fireEvent("saveScene");
    _$jscoverage['plugins/table.action.js'][1296]++;
    showDragLineAt(state, startTd);
    _$jscoverage['plugins/table.action.js'][1297]++;
    mousedown = true;
    _$jscoverage['plugins/table.action.js'][1299]++;
    onDrag = state;
    _$jscoverage['plugins/table.action.js'][1300]++;
    dragTd = startTd;
}
  _$jscoverage['plugins/table.action.js'][1303]++;
  function mouseUpEvent(type, evt) {
    _$jscoverage['plugins/table.action.js'][1305]++;
    if (isEditorDisabled()) {
      _$jscoverage['plugins/table.action.js'][1306]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1309]++;
    clearTableDragTimer();
    _$jscoverage['plugins/table.action.js'][1311]++;
    isInResizeBuffer = false;
    _$jscoverage['plugins/table.action.js'][1313]++;
    if (onBorder) {
      _$jscoverage['plugins/table.action.js'][1314]++;
      singleClickState = ((++singleClickState) % 3);
      _$jscoverage['plugins/table.action.js'][1316]++;
      userActionStatus = {x: evt.clientX, y: evt.clientY};
      _$jscoverage['plugins/table.action.js'][1321]++;
      tableResizeTimer = setTimeout((function () {
  _$jscoverage['plugins/table.action.js'][1322]++;
  ((singleClickState > 0) && (singleClickState--));
}), dblclickTime);
      _$jscoverage['plugins/table.action.js'][1325]++;
      if ((singleClickState === 2)) {
        _$jscoverage['plugins/table.action.js'][1327]++;
        singleClickState = 0;
        _$jscoverage['plugins/table.action.js'][1328]++;
        tableDbclickHandler(evt);
        _$jscoverage['plugins/table.action.js'][1329]++;
        return;
      }
    }
    _$jscoverage['plugins/table.action.js'][1335]++;
    if ((evt.button == 2)) {
      _$jscoverage['plugins/table.action.js'][1335]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1336]++;
    var me = this;
    _$jscoverage['plugins/table.action.js'][1338]++;
    var range = me.selection.getRange(), start = domUtils.findParentByTagName(range.startContainer, "table", true), end = domUtils.findParentByTagName(range.endContainer, "table", true);
    _$jscoverage['plugins/table.action.js'][1342]++;
    if ((start || end)) {
      _$jscoverage['plugins/table.action.js'][1343]++;
      if ((start === end)) {
        _$jscoverage['plugins/table.action.js'][1344]++;
        start = domUtils.findParentByTagName(range.startContainer, ["td", "th", "caption"], true);
        _$jscoverage['plugins/table.action.js'][1345]++;
        end = domUtils.findParentByTagName(range.endContainer, ["td", "th", "caption"], true);
        _$jscoverage['plugins/table.action.js'][1346]++;
        if ((start !== end)) {
          _$jscoverage['plugins/table.action.js'][1347]++;
          me.selection.clearRange();
        }
      }
      else {
        _$jscoverage['plugins/table.action.js'][1350]++;
        me.selection.clearRange();
      }
    }
    _$jscoverage['plugins/table.action.js'][1353]++;
    mousedown = false;
    _$jscoverage['plugins/table.action.js'][1354]++;
    me.document.body.style.webkitUserSelect = "";
    _$jscoverage['plugins/table.action.js'][1356]++;
    if ((onDrag && dragTd)) {
      _$jscoverage['plugins/table.action.js'][1358]++;
      (me.selection.getNative()[(browser.ie? "empty": "removeAllRanges")])();
      _$jscoverage['plugins/table.action.js'][1360]++;
      singleClickState = 0;
      _$jscoverage['plugins/table.action.js'][1361]++;
      dragLine = me.document.getElementById("ue_tableDragLine");
      _$jscoverage['plugins/table.action.js'][1363]++;
      var dragTdPos = domUtils.getXY(dragTd), dragLinePos = domUtils.getXY(dragLine);
      _$jscoverage['plugins/table.action.js'][1366]++;
      switch (onDrag) {
      case "h":
        _$jscoverage['plugins/table.action.js'][1368]++;
        changeColWidth(dragTd, (dragLinePos.x - dragTdPos.x));
        _$jscoverage['plugins/table.action.js'][1369]++;
        break;
      case "v":
        _$jscoverage['plugins/table.action.js'][1371]++;
        changeRowHeight(dragTd, (dragLinePos.y - dragTdPos.y - dragTd.offsetHeight));
        _$jscoverage['plugins/table.action.js'][1372]++;
        break;
      default:
      }
      _$jscoverage['plugins/table.action.js'][1375]++;
      onDrag = "";
      _$jscoverage['plugins/table.action.js'][1376]++;
      dragTd = null;
      _$jscoverage['plugins/table.action.js'][1378]++;
      hideDragLine(me);
      _$jscoverage['plugins/table.action.js'][1379]++;
      me.fireEvent("saveScene");
      _$jscoverage['plugins/table.action.js'][1380]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1383]++;
    if ((! startTd)) {
      _$jscoverage['plugins/table.action.js'][1384]++;
      var target = domUtils.findParentByTagName((evt.target || evt.srcElement), "td", true);
      _$jscoverage['plugins/table.action.js'][1385]++;
      if ((! target)) {
        _$jscoverage['plugins/table.action.js'][1385]++;
        target = domUtils.findParentByTagName((evt.target || evt.srcElement), "th", true);
      }
      _$jscoverage['plugins/table.action.js'][1386]++;
      if ((target && ((target.tagName == "TD") || (target.tagName == "TH")))) {
        _$jscoverage['plugins/table.action.js'][1387]++;
        if ((me.fireEvent("excludetable", target) === true)) {
          _$jscoverage['plugins/table.action.js'][1387]++;
          return;
        }
        _$jscoverage['plugins/table.action.js'][1388]++;
        range = new (dom.Range)(me.document);
        _$jscoverage['plugins/table.action.js'][1389]++;
        range.setStart(target, 0).setCursor(false, true);
      }
    }
    else {
      _$jscoverage['plugins/table.action.js'][1392]++;
      var ut = getUETable(startTd), cell = (ut? ut.selectedTds[0]: null);
      _$jscoverage['plugins/table.action.js'][1394]++;
      if (cell) {
        _$jscoverage['plugins/table.action.js'][1395]++;
        range = new (dom.Range)(me.document);
        _$jscoverage['plugins/table.action.js'][1396]++;
        if (domUtils.isEmptyBlock(cell)) {
          _$jscoverage['plugins/table.action.js'][1397]++;
          range.setStart(cell, 0).setCursor(false, true);
        }
        else {
          _$jscoverage['plugins/table.action.js'][1399]++;
          range.selectNodeContents(cell).shrinkBoundary().setCursor(false, true);
        }
      }
      else {
        _$jscoverage['plugins/table.action.js'][1402]++;
        range = me.selection.getRange().shrinkBoundary();
        _$jscoverage['plugins/table.action.js'][1403]++;
        if ((! range.collapsed)) {
          _$jscoverage['plugins/table.action.js'][1404]++;
          var start = domUtils.findParentByTagName(range.startContainer, ["td", "th"], true), end = domUtils.findParentByTagName(range.endContainer, ["td", "th"], true);
          _$jscoverage['plugins/table.action.js'][1407]++;
          if (((start && (! end)) || ((! start) && end) || (start && end && (start !== end)))) {
            _$jscoverage['plugins/table.action.js'][1408]++;
            range.setCursor(false, true);
          }
        }
      }
      _$jscoverage['plugins/table.action.js'][1412]++;
      startTd = null;
      _$jscoverage['plugins/table.action.js'][1413]++;
      me.removeListener("mouseover", mouseOverEvent);
    }
    _$jscoverage['plugins/table.action.js'][1415]++;
    me._selectionChange(250, evt);
}
  _$jscoverage['plugins/table.action.js'][1418]++;
  function mouseOverEvent(type, evt) {
    _$jscoverage['plugins/table.action.js'][1420]++;
    if (isEditorDisabled()) {
      _$jscoverage['plugins/table.action.js'][1421]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1424]++;
    var me = this, tar = (evt.target || evt.srcElement);
    _$jscoverage['plugins/table.action.js'][1426]++;
    currentTd = (domUtils.findParentByTagName(tar, "td", true) || domUtils.findParentByTagName(tar, "th", true));
    _$jscoverage['plugins/table.action.js'][1428]++;
    if ((startTd && currentTd && (((startTd.tagName == "TD") && (currentTd.tagName == "TD")) || ((startTd.tagName == "TH") && (currentTd.tagName == "TH"))) && (domUtils.findParentByTagName(startTd, "table") == domUtils.findParentByTagName(currentTd, "table")))) {
      _$jscoverage['plugins/table.action.js'][1431]++;
      var ut = getUETable(currentTd);
      _$jscoverage['plugins/table.action.js'][1432]++;
      if ((startTd != currentTd)) {
        _$jscoverage['plugins/table.action.js'][1433]++;
        me.document.body.style.webkitUserSelect = "none";
        _$jscoverage['plugins/table.action.js'][1434]++;
        (me.selection.getNative()[(browser.ie? "empty": "removeAllRanges")])();
        _$jscoverage['plugins/table.action.js'][1435]++;
        var range = ut.getCellsRange(startTd, currentTd);
        _$jscoverage['plugins/table.action.js'][1436]++;
        ut.setSelected(range);
      }
      else {
        _$jscoverage['plugins/table.action.js'][1438]++;
        me.document.body.style.webkitUserSelect = "";
        _$jscoverage['plugins/table.action.js'][1439]++;
        ut.clearSelected();
      }
    }
    _$jscoverage['plugins/table.action.js'][1443]++;
    (evt.preventDefault? evt.preventDefault(): (evt.returnValue = false));
}
  _$jscoverage['plugins/table.action.js'][1446]++;
  function setCellHeight(cell, height, backHeight) {
    _$jscoverage['plugins/table.action.js'][1447]++;
    var lineHight = parseInt(domUtils.getComputedStyle(cell, "line-height"), 10), tmpHeight = (backHeight + height);
    _$jscoverage['plugins/table.action.js'][1449]++;
    height = ((tmpHeight < lineHight)? lineHight: tmpHeight);
    _$jscoverage['plugins/table.action.js'][1450]++;
    if (cell.style.height) {
      _$jscoverage['plugins/table.action.js'][1450]++;
      cell.style.height = "";
    }
    _$jscoverage['plugins/table.action.js'][1451]++;
    ((cell.rowSpan == 1)? cell.setAttribute("height", height): (cell.removeAttribute && cell.removeAttribute("height")));
}
  _$jscoverage['plugins/table.action.js'][1454]++;
  function getWidth(cell) {
    _$jscoverage['plugins/table.action.js'][1455]++;
    if ((! cell)) {
      _$jscoverage['plugins/table.action.js'][1455]++;
      return 0;
    }
    _$jscoverage['plugins/table.action.js'][1456]++;
    return parseInt(domUtils.getComputedStyle(cell, "width"), 10);
}
  _$jscoverage['plugins/table.action.js'][1459]++;
  function changeColWidth(cell, changeValue) {
    _$jscoverage['plugins/table.action.js'][1461]++;
    var ut = getUETable(cell);
    _$jscoverage['plugins/table.action.js'][1462]++;
    if (ut) {
      _$jscoverage['plugins/table.action.js'][1465]++;
      var table = ut.table, cells = getCellsByMoveBorder(cell, table);
      _$jscoverage['plugins/table.action.js'][1468]++;
      table.style.width = "";
      _$jscoverage['plugins/table.action.js'][1469]++;
      table.removeAttribute("width");
      _$jscoverage['plugins/table.action.js'][1472]++;
      changeValue = correctChangeValue(changeValue, cell, cells);
      _$jscoverage['plugins/table.action.js'][1474]++;
      if (cell.nextSibling) {
        _$jscoverage['plugins/table.action.js'][1476]++;
        var i = 0;
        _$jscoverage['plugins/table.action.js'][1478]++;
        utils.each(cells, (function (cellGroup) {
  _$jscoverage['plugins/table.action.js'][1480]++;
  cellGroup.left.width = ((+ cellGroup.left.width) + changeValue);
  _$jscoverage['plugins/table.action.js'][1481]++;
  (cellGroup.right && (cellGroup.right.width = ((+ cellGroup.right.width) - changeValue)));
}));
      }
      else {
        _$jscoverage['plugins/table.action.js'][1487]++;
        utils.each(cells, (function (cellGroup) {
  _$jscoverage['plugins/table.action.js'][1488]++;
  cellGroup.left.width -= (- changeValue);
}));
      }
    }
}
  _$jscoverage['plugins/table.action.js'][1496]++;
  function isEditorDisabled() {
    _$jscoverage['plugins/table.action.js'][1497]++;
    return (me.body.contentEditable === "false");
}
  _$jscoverage['plugins/table.action.js'][1500]++;
  function changeRowHeight(td, changeValue) {
    _$jscoverage['plugins/table.action.js'][1501]++;
    if ((Math.abs(changeValue) < 10)) {
      _$jscoverage['plugins/table.action.js'][1501]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1502]++;
    var ut = getUETable(td);
    _$jscoverage['plugins/table.action.js'][1503]++;
    if (ut) {
      _$jscoverage['plugins/table.action.js'][1504]++;
      var cells = ut.getSameEndPosCells(td, "y"), backHeight = (cells[0]? cells[0].offsetHeight: 0);
      _$jscoverage['plugins/table.action.js'][1507]++;
      for (var i = 0, cell; (cell = cells[(i++)]);) {
        _$jscoverage['plugins/table.action.js'][1508]++;
        setCellHeight(cell, changeValue, backHeight);
}
    }
}
  _$jscoverage['plugins/table.action.js'][1518]++;
  function getCellsByMoveBorder(cell, table, isContainMergeCell) {
    _$jscoverage['plugins/table.action.js'][1520]++;
    if ((! table)) {
      _$jscoverage['plugins/table.action.js'][1521]++;
      table = domUtils.findParentByTagName(cell, "table");
    }
    _$jscoverage['plugins/table.action.js'][1524]++;
    if ((! table)) {
      _$jscoverage['plugins/table.action.js'][1525]++;
      return null;
    }
    _$jscoverage['plugins/table.action.js'][1529]++;
    var index = domUtils.getNodeIndex(cell), temp = cell, rows = table.rows, colIndex = 0;
    _$jscoverage['plugins/table.action.js'][1534]++;
    while (temp) {
      _$jscoverage['plugins/table.action.js'][1536]++;
      if ((temp.nodeType === 1)) {
        _$jscoverage['plugins/table.action.js'][1537]++;
        colIndex += (temp.colSpan || 1);
      }
      _$jscoverage['plugins/table.action.js'][1539]++;
      temp = temp.previousSibling;
}
    _$jscoverage['plugins/table.action.js'][1542]++;
    temp = null;
    _$jscoverage['plugins/table.action.js'][1545]++;
    var borderCells = [];
    _$jscoverage['plugins/table.action.js'][1547]++;
    utils.each(rows, (function (tabRow) {
  _$jscoverage['plugins/table.action.js'][1549]++;
  var cells = tabRow.cells, currIndex = 0;
  _$jscoverage['plugins/table.action.js'][1552]++;
  utils.each(cells, (function (tabCell) {
  _$jscoverage['plugins/table.action.js'][1554]++;
  currIndex += (tabCell.colSpan || 1);
  _$jscoverage['plugins/table.action.js'][1556]++;
  if ((currIndex === colIndex)) {
    _$jscoverage['plugins/table.action.js'][1558]++;
    borderCells.push({left: tabCell, right: (tabCell.nextSibling || null)});
    _$jscoverage['plugins/table.action.js'][1563]++;
    return false;
  }
  else {
    _$jscoverage['plugins/table.action.js'][1565]++;
    if ((currIndex > colIndex)) {
      _$jscoverage['plugins/table.action.js'][1567]++;
      if (isContainMergeCell) {
        _$jscoverage['plugins/table.action.js'][1568]++;
        borderCells.push({left: tabCell});
      }
      _$jscoverage['plugins/table.action.js'][1573]++;
      return false;
    }
  }
}));
}));
    _$jscoverage['plugins/table.action.js'][1581]++;
    return borderCells;
}
  _$jscoverage['plugins/table.action.js'][1589]++;
  function getMinWidthByTableCells(cells) {
    _$jscoverage['plugins/table.action.js'][1591]++;
    var minWidth = Number.MAX_VALUE;
    _$jscoverage['plugins/table.action.js'][1593]++;
    for (var i = 0, curCell; (curCell = cells[i]); (i++)) {
      _$jscoverage['plugins/table.action.js'][1595]++;
      minWidth = Math.min(minWidth, (curCell.width || getTableCellWidth(curCell)));
}
    _$jscoverage['plugins/table.action.js'][1599]++;
    return minWidth;
}
  _$jscoverage['plugins/table.action.js'][1603]++;
  function correctChangeValue(changeValue, relatedCell, cells) {
    _$jscoverage['plugins/table.action.js'][1606]++;
    changeValue -= getTabcellSpace();
    _$jscoverage['plugins/table.action.js'][1608]++;
    if ((changeValue < 0)) {
      _$jscoverage['plugins/table.action.js'][1609]++;
      return 0;
    }
    _$jscoverage['plugins/table.action.js'][1612]++;
    changeValue -= getTableCellWidth(relatedCell);
    _$jscoverage['plugins/table.action.js'][1615]++;
    var direction = ((changeValue < 0)? "left": "right");
    _$jscoverage['plugins/table.action.js'][1617]++;
    changeValue = Math.abs(changeValue);
    _$jscoverage['plugins/table.action.js'][1620]++;
    utils.each(cells, (function (cellGroup) {
  _$jscoverage['plugins/table.action.js'][1622]++;
  var curCell = cellGroup[direction];
  _$jscoverage['plugins/table.action.js'][1625]++;
  if (curCell) {
    _$jscoverage['plugins/table.action.js'][1626]++;
    changeValue = Math.min(changeValue, (getTableCellWidth(curCell) - cellMinWidth));
  }
}));
    _$jscoverage['plugins/table.action.js'][1634]++;
    changeValue = ((changeValue < 0)? 0: changeValue);
    _$jscoverage['plugins/table.action.js'][1636]++;
    return ((direction === "left")? (- changeValue): changeValue);
}
  _$jscoverage['plugins/table.action.js'][1640]++;
  function getTableCellWidth(cell) {
    _$jscoverage['plugins/table.action.js'][1642]++;
    var width = 0, offset = 0, width = (cell.offsetWidth - getTabcellSpace());
    _$jscoverage['plugins/table.action.js'][1648]++;
    if ((! cell.nextSibling)) {
      _$jscoverage['plugins/table.action.js'][1650]++;
      width -= getTableCellOffset(cell);
    }
    _$jscoverage['plugins/table.action.js'][1654]++;
    width = ((width < 0)? 0: width);
    _$jscoverage['plugins/table.action.js'][1656]++;
    try {
      _$jscoverage['plugins/table.action.js'][1657]++;
      cell.width = width;
    }
    catch (e) {
    }
    _$jscoverage['plugins/table.action.js'][1661]++;
    return width;
}
  _$jscoverage['plugins/table.action.js'][1668]++;
  function getTableCellOffset(cell) {
    _$jscoverage['plugins/table.action.js'][1670]++;
    tab = domUtils.findParentByTagName(cell, "table", false);
    _$jscoverage['plugins/table.action.js'][1672]++;
    if ((tab.offsetVal === undefined)) {
      _$jscoverage['plugins/table.action.js'][1674]++;
      var prev = cell.previousSibling;
      _$jscoverage['plugins/table.action.js'][1676]++;
      if (prev) {
        _$jscoverage['plugins/table.action.js'][1679]++;
        tab.offsetVal = (((cell.offsetWidth - prev.offsetWidth) === UT.borderWidth)? UT.borderWidth: 0);
      }
      else {
        _$jscoverage['plugins/table.action.js'][1682]++;
        tab.offsetVal = 0;
      }
    }
    _$jscoverage['plugins/table.action.js'][1687]++;
    return tab.offsetVal;
}
  _$jscoverage['plugins/table.action.js'][1691]++;
  function getTabcellSpace() {
    _$jscoverage['plugins/table.action.js'][1693]++;
    if ((UT.tabcellSpace === undefined)) {
      _$jscoverage['plugins/table.action.js'][1695]++;
      var cell = null, tab = me.document.createElement("table"), tbody = me.document.createElement("tbody"), trow = me.document.createElement("tr"), tabcell = me.document.createElement("td"), mirror = null;
      _$jscoverage['plugins/table.action.js'][1702]++;
      tabcell.style.cssText = "border: 0;";
      _$jscoverage['plugins/table.action.js'][1703]++;
      tabcell.width = 1;
      _$jscoverage['plugins/table.action.js'][1705]++;
      trow.appendChild(tabcell);
      _$jscoverage['plugins/table.action.js'][1706]++;
      trow.appendChild((mirror = tabcell.cloneNode(false)));
      _$jscoverage['plugins/table.action.js'][1708]++;
      tbody.appendChild(trow);
      _$jscoverage['plugins/table.action.js'][1710]++;
      tab.appendChild(tbody);
      _$jscoverage['plugins/table.action.js'][1712]++;
      tab.style.cssText = "visibility: hidden;";
      _$jscoverage['plugins/table.action.js'][1714]++;
      me.body.appendChild(tab);
      _$jscoverage['plugins/table.action.js'][1716]++;
      UT.paddingSpace = (tabcell.offsetWidth - 1);
      _$jscoverage['plugins/table.action.js'][1718]++;
      var tmpTabWidth = tab.offsetWidth;
      _$jscoverage['plugins/table.action.js'][1720]++;
      tabcell.style.cssText = "";
      _$jscoverage['plugins/table.action.js'][1721]++;
      mirror.style.cssText = "";
      _$jscoverage['plugins/table.action.js'][1723]++;
      UT.borderWidth = ((tab.offsetWidth - tmpTabWidth) / 3);
      _$jscoverage['plugins/table.action.js'][1725]++;
      UT.tabcellSpace = (UT.paddingSpace + UT.borderWidth);
      _$jscoverage['plugins/table.action.js'][1727]++;
      me.body.removeChild(tab);
    }
    _$jscoverage['plugins/table.action.js'][1731]++;
    getTabcellSpace = (function () {
  _$jscoverage['plugins/table.action.js'][1731]++;
  return UT.tabcellSpace;
});
    _$jscoverage['plugins/table.action.js'][1733]++;
    return UT.tabcellSpace;
}
  _$jscoverage['plugins/table.action.js'][1737]++;
  function getDragLine(editor, doc) {
    _$jscoverage['plugins/table.action.js'][1738]++;
    if (mousedown) {
      _$jscoverage['plugins/table.action.js'][1738]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1739]++;
    dragLine = editor.document.createElement("div");
    _$jscoverage['plugins/table.action.js'][1740]++;
    domUtils.setAttributes(dragLine, {id: "ue_tableDragLine", unselectable: "on", contenteditable: false, "onresizestart": "return false", "ondragstart": "return false", "onselectstart": "return false", style: "background-color:blue;position:absolute;padding:0;margin:0;background-image:none;border:0px none;opacity:0;filter:alpha(opacity=0)"});
    _$jscoverage['plugins/table.action.js'][1749]++;
    editor.body.appendChild(dragLine);
}
  _$jscoverage['plugins/table.action.js'][1752]++;
  function hideDragLine(editor) {
    _$jscoverage['plugins/table.action.js'][1753]++;
    if (mousedown) {
      _$jscoverage['plugins/table.action.js'][1753]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1754]++;
    var line;
    _$jscoverage['plugins/table.action.js'][1755]++;
    while ((line = editor.document.getElementById("ue_tableDragLine"))) {
      _$jscoverage['plugins/table.action.js'][1756]++;
      domUtils.remove(line);
}
}
  _$jscoverage['plugins/table.action.js'][1765]++;
  function showDragLineAt(state, cell) {
    _$jscoverage['plugins/table.action.js'][1766]++;
    if ((! cell)) {
      _$jscoverage['plugins/table.action.js'][1766]++;
      return;
    }
    _$jscoverage['plugins/table.action.js'][1767]++;
    var table = domUtils.findParentByTagName(cell, "table"), caption = table.getElementsByTagName("caption"), width = table.offsetWidth, height = (table.offsetHeight - ((caption.length > 0)? caption[0].offsetHeight: 0)), tablePos = domUtils.getXY(table), cellPos = domUtils.getXY(cell), css;
    _$jscoverage['plugins/table.action.js'][1773]++;
    switch (state) {
    case "h":
      _$jscoverage['plugins/table.action.js'][1775]++;
      css = ("height:" + height + "px;top:" + (tablePos.y + ((caption.length > 0)? caption[0].offsetHeight: 0)) + "px;left:" + (cellPos.x + cell.offsetWidth));
      _$jscoverage['plugins/table.action.js'][1776]++;
      dragLine.style.cssText = (css + "px;position: absolute;display:block;background-color:blue;width:1px;border:0; color:blue;opacity:.3;filter:alpha(opacity=30)");
      _$jscoverage['plugins/table.action.js'][1777]++;
      break;
    case "v":
      _$jscoverage['plugins/table.action.js'][1779]++;
      css = ("width:" + width + "px;left:" + tablePos.x + "px;top:" + (cellPos.y + cell.offsetHeight));
      _$jscoverage['plugins/table.action.js'][1781]++;
      dragLine.style.cssText = (css + "px;overflow:hidden;position: absolute;display:block;background-color:blue;height:1px;border:0;color:blue;opacity:.2;filter:alpha(opacity=20)");
      _$jscoverage['plugins/table.action.js'][1782]++;
      break;
    default:
    }
}
  _$jscoverage['plugins/table.action.js'][1792]++;
  function switchBorderColor(editor, flag) {
    _$jscoverage['plugins/table.action.js'][1793]++;
    var tableArr = domUtils.getElementsByTagName(editor.body, "table"), color;
    _$jscoverage['plugins/table.action.js'][1794]++;
    for (var i = 0, node; (node = tableArr[(i++)]);) {
      _$jscoverage['plugins/table.action.js'][1795]++;
      var td = domUtils.getElementsByTagName(node, "td");
      _$jscoverage['plugins/table.action.js'][1796]++;
      if (td[0]) {
        _$jscoverage['plugins/table.action.js'][1797]++;
        if (flag) {
          _$jscoverage['plugins/table.action.js'][1798]++;
          color = td[0].style.borderColor.replace(/\s/g, "");
          _$jscoverage['plugins/table.action.js'][1799]++;
          if (/(#ffffff)|(rgb\(255,f55,255\))/gi.test(color)) {
            _$jscoverage['plugins/table.action.js'][1800]++;
            domUtils.addClass(node, "noBorderTable");
          }
        }
        else {
          _$jscoverage['plugins/table.action.js'][1802]++;
          domUtils.removeClasses(node, "noBorderTable");
        }
      }
}
}
  _$jscoverage['plugins/table.action.js'][1809]++;
  function getTableWidth(editor, needIEHack, defaultValue) {
    _$jscoverage['plugins/table.action.js'][1810]++;
    var body = editor.body;
    _$jscoverage['plugins/table.action.js'][1811]++;
    return (body.offsetWidth - (needIEHack? (parseInt(domUtils.getComputedStyle(body, "margin-left"), 10) * 2): 0) - (defaultValue.tableBorder * 2) - (editor.options.offsetWidth || 0));
}
  _$jscoverage['plugins/table.action.js'][1817]++;
  function getTargetTd(editor, evt) {
    _$jscoverage['plugins/table.action.js'][1819]++;
    var target = domUtils.findParentByTagName((evt.target || evt.srcElement), ["td", "th"], true), dir = null;
    _$jscoverage['plugins/table.action.js'][1822]++;
    if ((! target)) {
      _$jscoverage['plugins/table.action.js'][1823]++;
      return null;
    }
    _$jscoverage['plugins/table.action.js'][1826]++;
    dir = getRelation(target, mouseCoords(evt));
    _$jscoverage['plugins/table.action.js'][1830]++;
    if ((! target)) {
      _$jscoverage['plugins/table.action.js'][1831]++;
      return null;
    }
    _$jscoverage['plugins/table.action.js'][1834]++;
    if (((dir === "h1") && target.previousSibling)) {
      _$jscoverage['plugins/table.action.js'][1836]++;
      var position = domUtils.getXY(target), cellWidth = target.offsetWidth;
      _$jscoverage['plugins/table.action.js'][1839]++;
      if ((Math.abs(((position.x + cellWidth) - evt.clientX)) > (cellWidth / 3))) {
        _$jscoverage['plugins/table.action.js'][1840]++;
        target = target.previousSibling;
      }
    }
    else {
      _$jscoverage['plugins/table.action.js'][1843]++;
      if (((dir === "v1") && target.parentNode.previousSibling)) {
        _$jscoverage['plugins/table.action.js'][1845]++;
        var position = domUtils.getXY(target), cellHeight = target.offsetHeight;
        _$jscoverage['plugins/table.action.js'][1848]++;
        if ((Math.abs(((position.y + cellHeight) - evt.clientY)) > (cellHeight / 3))) {
          _$jscoverage['plugins/table.action.js'][1849]++;
          target = target.parentNode.previousSibling.firstChild;
        }
      }
    }
    _$jscoverage['plugins/table.action.js'][1856]++;
    return ((target && (! (editor.fireEvent("excludetable", target) === true)))? target: null);
}
});
