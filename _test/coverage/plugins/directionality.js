/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['plugins/directionality.js']) {
  _$jscoverage['plugins/directionality.js'] = [];
  _$jscoverage['plugins/directionality.js'][7] = 0;
  _$jscoverage['plugins/directionality.js'][8] = 0;
  _$jscoverage['plugins/directionality.js'][21] = 0;
  _$jscoverage['plugins/directionality.js'][26] = 0;
  _$jscoverage['plugins/directionality.js'][28] = 0;
  _$jscoverage['plugins/directionality.js'][33] = 0;
  _$jscoverage['plugins/directionality.js'][34] = 0;
  _$jscoverage['plugins/directionality.js'][35] = 0;
  _$jscoverage['plugins/directionality.js'][37] = 0;
  _$jscoverage['plugins/directionality.js'][38] = 0;
  _$jscoverage['plugins/directionality.js'][39] = 0;
  _$jscoverage['plugins/directionality.js'][43] = 0;
  _$jscoverage['plugins/directionality.js'][44] = 0;
  _$jscoverage['plugins/directionality.js'][45] = 0;
  _$jscoverage['plugins/directionality.js'][46] = 0;
  _$jscoverage['plugins/directionality.js'][47] = 0;
  _$jscoverage['plugins/directionality.js'][48] = 0;
  _$jscoverage['plugins/directionality.js'][49] = 0;
  _$jscoverage['plugins/directionality.js'][52] = 0;
  _$jscoverage['plugins/directionality.js'][53] = 0;
  _$jscoverage['plugins/directionality.js'][54] = 0;
  _$jscoverage['plugins/directionality.js'][56] = 0;
  _$jscoverage['plugins/directionality.js'][57] = 0;
  _$jscoverage['plugins/directionality.js'][60] = 0;
  _$jscoverage['plugins/directionality.js'][61] = 0;
  _$jscoverage['plugins/directionality.js'][62] = 0;
  _$jscoverage['plugins/directionality.js'][63] = 0;
  _$jscoverage['plugins/directionality.js'][64] = 0;
  _$jscoverage['plugins/directionality.js'][65] = 0;
  _$jscoverage['plugins/directionality.js'][68] = 0;
  _$jscoverage['plugins/directionality.js'][70] = 0;
  _$jscoverage['plugins/directionality.js'][73] = 0;
  _$jscoverage['plugins/directionality.js'][99] = 0;
  _$jscoverage['plugins/directionality.js'][101] = 0;
  _$jscoverage['plugins/directionality.js'][103] = 0;
  _$jscoverage['plugins/directionality.js'][104] = 0;
  _$jscoverage['plugins/directionality.js'][105] = 0;
  _$jscoverage['plugins/directionality.js'][107] = 0;
  _$jscoverage['plugins/directionality.js'][108] = 0;
  _$jscoverage['plugins/directionality.js'][109] = 0;
  _$jscoverage['plugins/directionality.js'][110] = 0;
  _$jscoverage['plugins/directionality.js'][113] = 0;
  _$jscoverage['plugins/directionality.js'][114] = 0;
  _$jscoverage['plugins/directionality.js'][117] = 0;
  _$jscoverage['plugins/directionality.js'][118] = 0;
}
_$jscoverage['plugins/directionality.js'].source = ["<span class=\"c\">/**</span>","<span class=\"c\"> * &#35774;&#32622;&#25991;&#23383;&#36755;&#20837;&#30340;&#26041;&#21521;&#30340;&#25554;&#20214;</span>","<span class=\"c\"> * @file</span>","<span class=\"c\"> * @since 1.2.6.1</span>","<span class=\"c\"> */</span>","","<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","    <span class=\"k\">var</span> block <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>isBlockElm <span class=\"k\">,</span>","        getObj <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>editor<span class=\"k\">)</span><span class=\"k\">{</span>","<span class=\"c\">//            var startNode = editor.selection.getStart(),</span>","<span class=\"c\">//                parents;</span>","<span class=\"c\">//            if ( startNode ) {</span>","<span class=\"c\">//                //&#26597;&#25214;&#25152;&#26377;&#30340;&#26159;block&#30340;&#29238;&#20146;&#33410;&#28857;</span>","<span class=\"c\">//                parents = domUtils.findParents( startNode, true, block, true );</span>","<span class=\"c\">//                for ( var i = 0,ci; ci = parents[i++]; ) {</span>","<span class=\"c\">//                    if ( ci.getAttribute( 'dir' ) ) {</span>","<span class=\"c\">//                        return ci;</span>","<span class=\"c\">//                    }</span>","<span class=\"c\">//                }</span>","<span class=\"c\">//            }</span>","            <span class=\"k\">return</span> domUtils<span class=\"k\">.</span>filterNodeList<span class=\"k\">(</span>editor<span class=\"k\">.</span>selection<span class=\"k\">.</span>getStartElementPath<span class=\"k\">(),</span><span class=\"k\">function</span><span class=\"k\">(</span>n<span class=\"k\">)</span><span class=\"k\">{</span><span class=\"k\">return</span> n<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'dir'</span><span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">);</span>","","        <span class=\"k\">}</span><span class=\"k\">,</span>","        doDirectionality <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span>range<span class=\"k\">,</span>editor<span class=\"k\">,</span>forward<span class=\"k\">)</span><span class=\"k\">{</span>","            ","            <span class=\"k\">var</span> bookmark<span class=\"k\">,</span>","                filterFn <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> node <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span>   node<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">1</span> <span class=\"k\">?</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBookmarkNode<span class=\"k\">(</span>node<span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isWhitespace<span class=\"k\">(</span>node<span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                obj <span class=\"k\">=</span> getObj<span class=\"k\">(</span> editor <span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> obj <span class=\"k\">&amp;&amp;</span> range<span class=\"k\">.</span>collapsed <span class=\"k\">)</span> <span class=\"k\">{</span>","                obj<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">'dir'</span><span class=\"k\">,</span> forward <span class=\"k\">);</span>","                <span class=\"k\">return</span> range<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            bookmark <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">();</span>","            range<span class=\"k\">.</span>enlarge<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","            <span class=\"k\">var</span> bookmark2 <span class=\"k\">=</span> range<span class=\"k\">.</span>createBookmark<span class=\"k\">(),</span>","                current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span> bookmark2<span class=\"k\">.</span>start<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn <span class=\"k\">),</span>","                tmpRange <span class=\"k\">=</span> range<span class=\"k\">.</span>cloneRange<span class=\"k\">(),</span>","                tmpNode<span class=\"k\">;</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span> current <span class=\"k\">&amp;&amp;</span>  <span class=\"k\">!(</span>domUtils<span class=\"k\">.</span>getPosition<span class=\"k\">(</span> current<span class=\"k\">,</span> bookmark2<span class=\"k\">.</span>end <span class=\"k\">)</span> <span class=\"k\">&amp;</span> domUtils<span class=\"k\">.</span>POSITION_FOLLOWING<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> current<span class=\"k\">.</span>nodeType <span class=\"k\">==</span> <span class=\"s\">3</span> <span class=\"k\">||</span> <span class=\"k\">!</span>block<span class=\"k\">(</span> current <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    tmpRange<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span> current <span class=\"k\">);</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> current <span class=\"k\">&amp;&amp;</span> current <span class=\"k\">!==</span> bookmark2<span class=\"k\">.</span>end <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>block<span class=\"k\">(</span> current <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        tmpNode <span class=\"k\">=</span> current<span class=\"k\">;</span>","                        current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span> current<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> node <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"k\">!</span>block<span class=\"k\">(</span> node <span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    tmpRange<span class=\"k\">.</span>setEndAfter<span class=\"k\">(</span> tmpNode <span class=\"k\">);</span>","                    <span class=\"k\">var</span> common <span class=\"k\">=</span> tmpRange<span class=\"k\">.</span>getCommonAncestor<span class=\"k\">();</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>domUtils<span class=\"k\">.</span>isBody<span class=\"k\">(</span> common <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> block<span class=\"k\">(</span> common <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">//&#36941;&#21382;&#21040;&#20102;block&#33410;&#28857;</span>","                        common<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">'dir'</span><span class=\"k\">,</span> forward <span class=\"k\">);</span>","                        current <span class=\"k\">=</span> common<span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"c\">//&#27809;&#26377;&#36941;&#21382;&#21040;&#65292;&#28155;&#21152;&#19968;&#20010;block&#33410;&#28857;</span>","                        <span class=\"k\">var</span> p <span class=\"k\">=</span> range<span class=\"k\">.</span>document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">'p'</span> <span class=\"k\">);</span>","                        p<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">'dir'</span><span class=\"k\">,</span> forward <span class=\"k\">);</span>","                        <span class=\"k\">var</span> frag <span class=\"k\">=</span> tmpRange<span class=\"k\">.</span>extractContents<span class=\"k\">();</span>","                        p<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> frag <span class=\"k\">);</span>","                        tmpRange<span class=\"k\">.</span>insertNode<span class=\"k\">(</span> p <span class=\"k\">);</span>","                        current <span class=\"k\">=</span> p<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span> current<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> filterFn <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    current <span class=\"k\">=</span> domUtils<span class=\"k\">.</span>getNextDomNode<span class=\"k\">(</span> current<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> filterFn <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> range<span class=\"k\">.</span>moveToBookmark<span class=\"k\">(</span> bookmark2 <span class=\"k\">).</span>moveToBookmark<span class=\"k\">(</span> bookmark <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#35774;&#32622;&#25991;&#23383;&#30340;&#26041;&#21521;&#65292;&#21487;&#35774;&#32622;&#20174;&#24038;&#21521;&#21491;&#36755;&#20837;&#65292;&#25110;&#32773;&#20174;&#21491;&#21521;&#24038;&#36755;&#20837;&#65292;&#25805;&#20316;&#23545;&#24403;&#21069;&#27573;&#20316;&#29992;</span>","<span class=\"c\">     * @command directionality</span>","<span class=\"c\">     * @method execCommand</span>","<span class=\"c\">     * @param { String } cmdName &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @param { String } forward &#20256;&#20837;'ltr'&#34920;&#31034;&#20174;&#24038;&#21521;&#21491;&#36755;&#20837;&#65292;&#20256;&#20837;'rtl'&#34920;&#31034;&#20174;&#21491;&#21521;&#24038;&#36755;&#20837;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.execCommand( 'directionality', 'ltr');</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","","    <span class=\"c\">/**</span>","<span class=\"c\">     * &#26597;&#35810;&#24403;&#21069;&#27573;&#33853;&#30340;&#25991;&#23383;&#36755;&#20837;&#26041;&#21521;</span>","<span class=\"c\">     * @command directionality</span>","<span class=\"c\">     * @method queryCommandValue</span>","<span class=\"c\">     * @param { String } cmdName &#21629;&#20196;&#23383;&#31526;&#20018;</span>","<span class=\"c\">     * @return { String } &#36820;&#22238;'ltr'&#34920;&#31034;&#20174;&#24038;&#21521;&#21491;&#36755;&#20837;&#65292;&#36820;&#22238;'rtl'&#34920;&#31034;&#20174;&#21491;&#21521;&#24038;&#36755;&#20837;</span>","<span class=\"c\">     * @example</span>","<span class=\"c\">     * ```javascript</span>","<span class=\"c\">     * editor.queryCommandValue( 'directionality');</span>","<span class=\"c\">     * ```</span>","<span class=\"c\">     */</span>","    UE<span class=\"k\">.</span>commands<span class=\"k\">[</span><span class=\"s\">'directionality'</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","        execCommand <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> cmdName<span class=\"k\">,</span>forward <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> range <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>selection<span class=\"k\">.</span>getRange<span class=\"k\">();</span>","            <span class=\"c\">//&#38381;&#21512;&#26102;&#21333;&#29420;&#22788;&#29702;</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>range<span class=\"k\">.</span>collapsed<span class=\"k\">)</span><span class=\"k\">{</span>","                <span class=\"k\">var</span> txt <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>document<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span><span class=\"s\">'d'</span><span class=\"k\">);</span>","                range<span class=\"k\">.</span>insertNode<span class=\"k\">(</span>txt<span class=\"k\">);</span>","            <span class=\"k\">}</span>","            doDirectionality<span class=\"k\">(</span>range<span class=\"k\">,</span><span class=\"k\">this</span><span class=\"k\">,</span>forward<span class=\"k\">);</span>","            <span class=\"k\">if</span><span class=\"k\">(</span>txt<span class=\"k\">)</span><span class=\"k\">{</span>","                range<span class=\"k\">.</span>setStartBefore<span class=\"k\">(</span>txt<span class=\"k\">).</span>collapse<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">);</span>","                domUtils<span class=\"k\">.</span>remove<span class=\"k\">(</span>txt<span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            range<span class=\"k\">.</span>select<span class=\"k\">();</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        queryCommandValue <span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> node <span class=\"k\">=</span> getObj<span class=\"k\">(</span><span class=\"k\">this</span><span class=\"k\">);</span>","            <span class=\"k\">return</span> node <span class=\"k\">?</span> node<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">'dir'</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">'ltr'</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span><span class=\"k\">)();</span>",""];
_$jscoverage['plugins/directionality.js'][7]++;
(function () {
  _$jscoverage['plugins/directionality.js'][8]++;
  var block = domUtils.isBlockElm, getObj = (function (editor) {
  _$jscoverage['plugins/directionality.js'][21]++;
  return domUtils.filterNodeList(editor.selection.getStartElementPath(), (function (n) {
  _$jscoverage['plugins/directionality.js'][21]++;
  return n.getAttribute("dir");
}));
}), doDirectionality = (function (range, editor, forward) {
  _$jscoverage['plugins/directionality.js'][26]++;
  var bookmark, filterFn = (function (node) {
  _$jscoverage['plugins/directionality.js'][28]++;
  return ((node.nodeType == 1)? (! domUtils.isBookmarkNode(node)): (! domUtils.isWhitespace(node)));
}), obj = getObj(editor);
  _$jscoverage['plugins/directionality.js'][33]++;
  if ((obj && range.collapsed)) {
    _$jscoverage['plugins/directionality.js'][34]++;
    obj.setAttribute("dir", forward);
    _$jscoverage['plugins/directionality.js'][35]++;
    return range;
  }
  _$jscoverage['plugins/directionality.js'][37]++;
  bookmark = range.createBookmark();
  _$jscoverage['plugins/directionality.js'][38]++;
  range.enlarge(true);
  _$jscoverage['plugins/directionality.js'][39]++;
  var bookmark2 = range.createBookmark(), current = domUtils.getNextDomNode(bookmark2.start, false, filterFn), tmpRange = range.cloneRange(), tmpNode;
  _$jscoverage['plugins/directionality.js'][43]++;
  while ((current && (! (domUtils.getPosition(current, bookmark2.end) & domUtils.POSITION_FOLLOWING)))) {
    _$jscoverage['plugins/directionality.js'][44]++;
    if (((current.nodeType == 3) || (! block(current)))) {
      _$jscoverage['plugins/directionality.js'][45]++;
      tmpRange.setStartBefore(current);
      _$jscoverage['plugins/directionality.js'][46]++;
      while ((current && (current !== bookmark2.end) && (! block(current)))) {
        _$jscoverage['plugins/directionality.js'][47]++;
        tmpNode = current;
        _$jscoverage['plugins/directionality.js'][48]++;
        current = domUtils.getNextDomNode(current, false, null, (function (node) {
  _$jscoverage['plugins/directionality.js'][49]++;
  return (! block(node));
}));
}
      _$jscoverage['plugins/directionality.js'][52]++;
      tmpRange.setEndAfter(tmpNode);
      _$jscoverage['plugins/directionality.js'][53]++;
      var common = tmpRange.getCommonAncestor();
      _$jscoverage['plugins/directionality.js'][54]++;
      if (((! domUtils.isBody(common)) && block(common))) {
        _$jscoverage['plugins/directionality.js'][56]++;
        common.setAttribute("dir", forward);
        _$jscoverage['plugins/directionality.js'][57]++;
        current = common;
      }
      else {
        _$jscoverage['plugins/directionality.js'][60]++;
        var p = range.document.createElement("p");
        _$jscoverage['plugins/directionality.js'][61]++;
        p.setAttribute("dir", forward);
        _$jscoverage['plugins/directionality.js'][62]++;
        var frag = tmpRange.extractContents();
        _$jscoverage['plugins/directionality.js'][63]++;
        p.appendChild(frag);
        _$jscoverage['plugins/directionality.js'][64]++;
        tmpRange.insertNode(p);
        _$jscoverage['plugins/directionality.js'][65]++;
        current = p;
      }
      _$jscoverage['plugins/directionality.js'][68]++;
      current = domUtils.getNextDomNode(current, false, filterFn);
    }
    else {
      _$jscoverage['plugins/directionality.js'][70]++;
      current = domUtils.getNextDomNode(current, true, filterFn);
    }
}
  _$jscoverage['plugins/directionality.js'][73]++;
  return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);
});
  _$jscoverage['plugins/directionality.js'][99]++;
  UE.commands.directionality = {execCommand: (function (cmdName, forward) {
  _$jscoverage['plugins/directionality.js'][101]++;
  var range = this.selection.getRange();
  _$jscoverage['plugins/directionality.js'][103]++;
  if (range.collapsed) {
    _$jscoverage['plugins/directionality.js'][104]++;
    var txt = this.document.createTextNode("d");
    _$jscoverage['plugins/directionality.js'][105]++;
    range.insertNode(txt);
  }
  _$jscoverage['plugins/directionality.js'][107]++;
  doDirectionality(range, this, forward);
  _$jscoverage['plugins/directionality.js'][108]++;
  if (txt) {
    _$jscoverage['plugins/directionality.js'][109]++;
    range.setStartBefore(txt).collapse(true);
    _$jscoverage['plugins/directionality.js'][110]++;
    domUtils.remove(txt);
  }
  _$jscoverage['plugins/directionality.js'][113]++;
  range.select();
  _$jscoverage['plugins/directionality.js'][114]++;
  return true;
}), queryCommandValue: (function () {
  _$jscoverage['plugins/directionality.js'][117]++;
  var node = getObj(this);
  _$jscoverage['plugins/directionality.js'][118]++;
  return (node? node.getAttribute("dir"): "ltr");
})};
})();
